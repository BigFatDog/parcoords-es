{"version":3,"file":"parcoords.mjs","sources":["../src/util/renderQueue.js","../src/util/width.js","../src/brush/1d/brushExtents.js","../src/brush/1d/brushReset.js","../src/brush/1d/selected.js","../src/brush/1d/brushFor.js","../src/brush/1d/install.js","../src/brush/1d/uninstall.js","../src/brush/1d/index.js","../src/brush/1d-multi/drawBrushes.js","../src/brush/1d-multi/selected.js","../src/brush/1d-multi/newBrush.js","../src/brush/1d-multi/brushExtents.js","../src/brush/1d-multi/brushReset.js","../src/brush/1d-multi/brushFor.js","../src/brush/1d-multi/install.js","../src/brush/1d-multi/uninstall.js","../src/brush/1d-multi/index.js","../src/brush/strums/uninstall.js","../src/brush/strums/selected.js","../src/brush/strums/removeStrum.js","../src/brush/strums/onDragEnd.js","../src/brush/strums/onDrag.js","../src/util/height.js","../src/brush/dimensionsForPoint.js","../src/brush/strums/onDragStart.js","../src/brush/strums/brushReset.js","../src/brush/consecutive.js","../src/brush/strums/install.js","../src/brush/strums/index.js","../src/brush/angular/uninstall.js","../src/brush/angular/util/hypothenuse.js","../src/brush/angular/selected.js","../src/brush/angular/removeStrum.js","../src/brush/angular/onDragEnd.js","../src/brush/angular/onDrag.js","../src/brush/angular/onDragStart.js","../src/brush/angular/brushReset.js","../src/brush/angular/install.js","../src/brush/angular/index.js","../src/api/intersection.js","../src/api/mergeParcoords.js","../src/api/selected.js","../src/api/brushMode.js","../src/util/dimensionLabels.js","../src/util/flipAxisAndUpdatePCP.js","../src/util/rotateLabels.js","../src/api/updateAxes.js","../src/util/getRange.js","../src/api/autoscale.js","../src/api/brushable.js","../src/api/commonScale.js","../src/api/computeRealCentroids.js","../src/api/applyDimensionDefaults.js","../src/api/createAxes.js","../src/api/axisDots.js","../src/api/applyAxisConfig.js","../src/api/reorderable.js","../src/api/resize.js","../src/api/reorder.js","../src/api/sortDimensions.js","../src/api/sortDimensionsByRowData.js","../src/util/isBrushed.js","../src/api/clear.js","../src/util/computeCentroids.js","../src/util/computeControlPoints.js","../src/util/colorPath.js","../src/util/functor.js","../src/api/renderBrushed.js","../src/api/brushReset.js","../src/api/toType.js","../src/api/toString.js","../src/api/adjacentPairs.js","../src/api/highlight.js","../src/api/unhighlight.js","../src/api/removeAxes.js","../src/api/render.js","../src/api/renderDefault.js","../src/api/toTypeCoerceNumbers.js","../src/api/detectDimensionTypes.js","../src/api/getOrderedDimensionKeys.js","../src/api/interactive.js","../src/api/shadows.js","../src/api/init.js","../src/api/flip.js","../src/api/detectDimensions.js","../src/api/scale.js","../src/state/defaultConfig.js","../src/state/index.js","../src/util/computeClusterCentroids.js","../src/state/sideEffects.js","../src/util/getset.js","../src/bindEvents.js","../src/index.js"],"sourcesContent":["import 'requestanimationframe';\r\n\r\nconst renderQueue = function(func) {\r\n  let _queue = [], // data to be rendered\r\n    _rate = 1000, // number of calls per frame\r\n    _invalidate = function() {}, // invalidate last render queue\r\n    _clear = function() {}; // clearing function\r\n\r\n  let rq = function(data) {\r\n    if (data) rq.data(data);\r\n    _invalidate();\r\n    _clear();\r\n    rq.render();\r\n  };\r\n\r\n  rq.render = function() {\r\n    let valid = true;\r\n    _invalidate = rq.invalidate = function() {\r\n      valid = false;\r\n    };\r\n\r\n    function doFrame() {\r\n      if (!valid) return true;\r\n      let chunk = _queue.splice(0, _rate);\r\n      chunk.map(func);\r\n      requestAnimationFrame(doFrame);\r\n    }\r\n\r\n    doFrame();\r\n  };\r\n\r\n  rq.data = function(data) {\r\n    _invalidate();\r\n    _queue = data.slice(0); // creates a copy of the data\r\n    return rq;\r\n  };\r\n\r\n  rq.add = function(data) {\r\n    _queue = _queue.concat(data);\r\n  };\r\n\r\n  rq.rate = function(value) {\r\n    if (!arguments.length) return _rate;\r\n    _rate = value;\r\n    return rq;\r\n  };\r\n\r\n  rq.remaining = function() {\r\n    return _queue.length;\r\n  };\r\n\r\n  // clear the canvas\r\n  rq.clear = function(func) {\r\n    if (!arguments.length) {\r\n      _clear();\r\n      return rq;\r\n    }\r\n    _clear = func;\r\n    return rq;\r\n  };\r\n\r\n  rq.invalidate = _invalidate;\r\n\r\n  return rq;\r\n};\r\n\r\nexport default renderQueue;\r\n","const w = config => config.width - config.margin.right - config.margin.left;\r\n\r\nexport default w;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushExtents = (state, config, pc) => extents => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur) => {\r\n      const brush = brushes[cur];\r\n      //todo: brush check\r\n      if (brush !== undefined && brushSelection(brushNodes[cur]) !== null) {\r\n        acc[cur] = brush.extent();\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    //first get all the brush selections\r\n    const brushSelections = {};\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .each(function(d) {\r\n        brushSelections[d] = select(this);\r\n      });\r\n\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach(d => {\r\n      if (extents[d] === undefined) {\r\n        return;\r\n      }\r\n\r\n      const brush = brushes[d];\r\n      if (brush !== undefined) {\r\n        const dim = config.dimensions[d];\r\n        const yExtent = extents[d].map(dim.yscale);\r\n\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        brush.extent([[-15, yExtent[1]], [15, yExtent[0]]]);\r\n\r\n        //redraw the brush\r\n        //https://github.com/d3/d3-brush#brush_move\r\n        // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n        brushSelections[d].call(brush).call(brush.move, yExtent.reverse());\r\n\r\n        //fire some events\r\n        // brush.event(brushSelections[d]);\r\n      }\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          select(this).call(brushes[d].move, null);\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    config.brushed = false;\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      pc.g()\r\n        .selectAll('.brush')\r\n        .each(function(d) {\r\n          if (d !== dimension) return;\r\n          select(this).call(brushes[d].move, null);\r\n          brushes[d].event(select(this));\r\n        });\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import { brushSelection } from 'd3-brush';\r\n//https://github.com/d3/d3-brush/issues/10\r\n\r\n// data within extents\r\nconst selected = (state, config, brushGroup) => () => {\r\n  const { brushNodes } = state;\r\n  const is_brushed = p =>\r\n    brushNodes[p] && brushSelection(brushNodes[p]) !== null;\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const _brushRange = brushSelection(brushNodes[p]);\r\n\r\n    if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n      return [\r\n        config.dimensions[p].yscale.invert(_brushRange[1]),\r\n        config.dimensions[p].yscale.invert(_brushRange[0]),\r\n      ];\r\n    } else {\r\n      return _brushRange;\r\n    }\r\n  });\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) return config.data;\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    number: (d, p, dimension) => {\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        return (\r\n          extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n        );\r\n      } else {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      }\r\n    },\r\n    string: (d, p, dimension) => {\r\n      return (\r\n        extents[dimension][0] <= config.dimensions[p].yscale(d[p]) &&\r\n        config.dimensions[p].yscale(d[p]) <= extents[dimension][1]\r\n      );\r\n    },\r\n  };\r\n\r\n  return config.data.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      case 'OR':\r\n        return actives.some(function(p, dimension) {\r\n          return within[config.dimensions[p].type](d, p, dimension);\r\n        });\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event } from 'd3-selection';\r\n\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events, args) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed, args);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const _brush = brushY(_selector).extent([[-15, 0], [15, brushRangeMax]]);\r\n\r\n  const convertBrushArguments = args => {\r\n    const args_array = Array.prototype.slice.call(args);\r\n    const axis = args_array[0];\r\n    const selection_raw = brushSelection(args_array[2][0]);\r\n    const selection_scaled = selection_raw.map(d =>\r\n      config.dimensions[axis].yscale.invert(d)\r\n    );\r\n\r\n    return {\r\n      axis: args_array[0],\r\n      node: args_array[2][0],\r\n      selection: {\r\n        raw: selection_raw,\r\n        scaled: selection_scaled,\r\n      },\r\n    };\r\n  };\r\n\r\n  _brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call(\r\n          'brushstart',\r\n          pc,\r\n          config.brushed,\r\n          convertBrushArguments(arguments)\r\n        );\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function() {\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events,\r\n        convertBrushArguments(arguments)\r\n      )(selected(state, config, brushGroup)());\r\n    })\r\n    .on('end', function() {\r\n      brushUpdated(config, pc, events)(selected(state, config, brushGroup)());\r\n      events.call(\r\n        'brushend',\r\n        pc,\r\n        config.brushed,\r\n        convertBrushArguments(arguments)\r\n      );\r\n    });\r\n\r\n  state.brushes[axis] = _brush;\r\n  state.brushNodes[axis] = _selector.node();\r\n\r\n  return _brush;\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  // Add and store a brush for each axis.\r\n  const brush = pc\r\n    .g()\r\n    .append('svg:g')\r\n    .attr('class', 'brush')\r\n    .each(function(d) {\r\n      select(this).call(\r\n        brushFor(state, config, pc, events, brushGroup)(d, select(this))\r\n      );\r\n    });\r\n  brush\r\n    .selectAll('rect')\r\n    .style('visibility', null)\r\n    .attr('x', -15)\r\n    .attr('width', 30);\r\n\r\n  brush.selectAll('rect.background').style('fill', 'transparent');\r\n\r\n  brush\r\n    .selectAll('rect.extent')\r\n    .style('fill', 'rgba(255,255,255,0.25)')\r\n    .style('stroke', 'rgba(0,0,0,0.6)');\r\n\r\n  brush.selectAll('.resize rect').style('fill', 'rgba(0,0,0,0.1)');\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DAxes;\r\n","import { select } from 'd3-selection';\r\n\r\nconst drawBrushes = (brushes, config, pc, axis, selector) => {\r\n  const brushSelection = selector.selectAll('.brush').data(brushes, d => d.id);\r\n\r\n  brushSelection\r\n    .enter()\r\n    .insert('g', '.brush')\r\n    .attr('class', 'brush')\r\n    .attr('dimension', axis)\r\n    .attr(\r\n      'id',\r\n      b => 'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + b.id\r\n    )\r\n    .each(function(brushObject) {\r\n      brushObject.brush(select(this));\r\n    });\r\n\r\n  brushSelection.each(function(brushObject) {\r\n    select(this)\r\n      .attr('class', 'brush')\r\n      .selectAll('.overlay')\r\n      .style('pointer-events', function() {\r\n        const brush = brushObject.brush;\r\n        if (brushObject.id === brushes.length - 1 && brush !== undefined) {\r\n          return 'all';\r\n        } else {\r\n          return 'none';\r\n        }\r\n      });\r\n  });\r\n\r\n  brushSelection.exit().remove();\r\n};\r\n\r\nexport default drawBrushes;\r\n","import { brushSelection } from 'd3-brush';\r\n\r\n// data within extents\r\nconst selected = (state, config, pc, events, brushGroup) => {\r\n  const { brushes } = state;\r\n\r\n  const is_brushed = (p, pos) => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    for (let i = 0; i < axisBrushes.length; i++) {\r\n      const brush = document.getElementById('brush-' + pos + '-' + i);\r\n\r\n      if (brushSelection(brush) !== null) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const actives = Object.keys(config.dimensions).filter(is_brushed);\r\n  const extents = actives.map(p => {\r\n    const axisBrushes = brushes[p];\r\n\r\n    return axisBrushes\r\n      .map((d, i) =>\r\n        brushSelection(\r\n          document.getElementById(\r\n            'brush-' + Object.keys(config.dimensions).indexOf(p) + '-' + i\r\n          )\r\n        )\r\n      )\r\n      .map((d, i) => {\r\n        if (d === null || d === undefined) {\r\n          return null;\r\n        } else if (typeof config.dimensions[p].yscale.invert === 'function') {\r\n          return [\r\n            config.dimensions[p].yscale.invert(d[1]),\r\n            config.dimensions[p].yscale.invert(d[0]),\r\n          ];\r\n        } else {\r\n          return d;\r\n        }\r\n      });\r\n  });\r\n\r\n  // We don't want to return the full data set when there are no axes brushed.\r\n  // Actually, when there are no axes brushed, by definition, no items are\r\n  // selected. So, let's avoid the filtering and just return false.\r\n  //if (actives.length === 0) return false;\r\n\r\n  // Resolves broken examples for now. They expect to get the full dataset back from empty brushes\r\n  if (actives.length === 0) return config.data;\r\n\r\n  // test if within range\r\n  const within = {\r\n    date: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    number: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      if (typeof config.dimensions[p].yscale.bandwidth === 'function') {\r\n        // if it is ordinal\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (\r\n            e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n            config.dimensions[p].yscale(d[p]) <= e[1]\r\n          ) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      } else {\r\n        for (const e of dimExt) {\r\n          if (e === null || e === undefined) {\r\n            continue;\r\n          }\r\n\r\n          if (e[0] <= d[p] && d[p] <= e[1]) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n    string: (d, p, i) => {\r\n      const dimExt = extents[i];\r\n\r\n      for (const e of dimExt) {\r\n        if (e === null || e === undefined) {\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          e[0] <= config.dimensions[p].yscale(d[p]) &&\r\n          config.dimensions[p].yscale(d[p]) <= e[1]\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return config.data.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return actives.every((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      case 'OR':\r\n        return actives.some((p, i) =>\r\n          within[config.dimensions[p].type](d, p, i)\r\n        );\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","import { brushY, brushSelection } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\nimport drawBrushes from './drawBrushes';\r\nimport selected from './selected';\r\n\r\nconst brushUpdated = (config, pc, events) => newSelection => {\r\n  config.brushed = newSelection;\r\n  events.call('brush', pc, config.brushed);\r\n  pc.renderBrushed();\r\n};\r\n\r\nconst newBrush = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes, brushNodes } = state;\r\n\r\n  const brushRangeMax =\r\n    config.dimensions[axis].type === 'string'\r\n      ? config.dimensions[axis].yscale.range()[\r\n          config.dimensions[axis].yscale.range().length - 1\r\n        ]\r\n      : config.dimensions[axis].yscale.range()[0];\r\n\r\n  const brush = brushY().extent([[-15, 0], [15, brushRangeMax]]);\r\n  const id = brushes[axis] ? brushes[axis].length : 0;\r\n  const node =\r\n    'brush-' + Object.keys(config.dimensions).indexOf(axis) + '-' + id;\r\n\r\n  if (brushes[axis]) {\r\n    brushes[axis].push({\r\n      id,\r\n      brush,\r\n      node,\r\n    });\r\n  } else {\r\n    brushes[axis] = [{ id, brush, node }];\r\n  }\r\n\r\n  if (brushNodes[axis]) {\r\n    brushNodes[axis].push({ id, node });\r\n  } else {\r\n    brushNodes[axis] = [{ id, node }];\r\n  }\r\n\r\n  brush\r\n    .on('start', function() {\r\n      if (event.sourceEvent !== null) {\r\n        events.call('brushstart', pc, config.brushed);\r\n        if (typeof event.sourceEvent.stopPropagation === 'function') {\r\n          event.sourceEvent.stopPropagation();\r\n        }\r\n      }\r\n    })\r\n    .on('brush', function(e) {\r\n      // record selections\r\n      brushUpdated(\r\n        config,\r\n        pc,\r\n        events\r\n      )(selected(state, config, pc, events, brushGroup));\r\n    })\r\n    .on('end', function() {\r\n      // Figure out if our latest brush has a selection\r\n      const lastBrushID = brushes[axis][brushes[axis].length - 1].id;\r\n      const lastBrush = document.getElementById(\r\n        'brush-' +\r\n          Object.keys(config.dimensions).indexOf(axis) +\r\n          '-' +\r\n          lastBrushID\r\n      );\r\n      const selection = brushSelection(lastBrush);\r\n\r\n      if (\r\n        selection !== undefined &&\r\n        selection !== null &&\r\n        selection[0] !== selection[1]\r\n      ) {\r\n        newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n\r\n        drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n\r\n        brushUpdated(config, pc, events)(\r\n          selected(state, config, pc, events, brushGroup)\r\n        );\r\n      } else {\r\n        if (\r\n          event.sourceEvent &&\r\n          event.sourceEvent.toString() === '[object MouseEvent]' &&\r\n          event.selection === null\r\n        ) {\r\n          pc.brushReset(axis);\r\n        }\r\n      }\r\n\r\n      events.call('brushend', pc, config.brushed);\r\n    });\r\n\r\n  return brush;\r\n};\r\n\r\nexport default newBrush;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\nimport newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\n/**\r\n *\r\n * extents are in format of [[2,6], [3,5]]\r\n *\r\n * * @param state\r\n * @param config\r\n * @param pc\r\n * @returns {Function}\r\n */\r\nconst brushExtents = (state, config, pc, events, brushGroup) => extents => {\r\n  const { brushes } = state;\r\n\r\n  if (typeof extents === 'undefined') {\r\n    return Object.keys(config.dimensions).reduce((acc, cur, pos) => {\r\n      const axisBrushes = brushes[cur];\r\n\r\n      if (axisBrushes === undefined || axisBrushes === null) {\r\n        acc[cur] = [];\r\n      } else {\r\n        acc[cur] = axisBrushes.reduce((d, p, i) => {\r\n          const range = brushSelection(\r\n            document.getElementById('brush-' + pos + '-' + i)\r\n          );\r\n          if (range !== null) {\r\n            d = d.push(range);\r\n          }\r\n\r\n          return d;\r\n        }, []);\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  } else {\r\n    // //first get all the brush selections\r\n    // loop over each dimension and update appropriately (if it was passed in through extents)\r\n    Object.keys(config.dimensions).forEach((d, pos) => {\r\n      if (extents[d] === undefined || extents[d] === null) {\r\n        return;\r\n      }\r\n\r\n      const dim = config.dimensions[d];\r\n\r\n      const yExtents = extents[d].map(e => e.map(dim.yscale));\r\n\r\n      const _bs = yExtents.map((e, j) => {\r\n        const _brush = newBrush(state, config, pc, events, brushGroup)(\r\n          d,\r\n          select('#brush-group-' + pos)\r\n        );\r\n        //update the extent\r\n        //sets the brushable extent to the specified array of points [[x0, y0], [x1, y1]]\r\n        _brush.extent([[-15, e[1]], [15, e[0]]]);\r\n\r\n        return {\r\n          id: j,\r\n          brush: _brush,\r\n          ext: e,\r\n        };\r\n      });\r\n\r\n      brushes[d] = _bs;\r\n\r\n      drawBrushes(_bs, config, pc, d, select('#brush-group-' + pos));\r\n\r\n      //redraw the brush\r\n      //https://github.com/d3/d3-brush#brush_move\r\n      // For an x-brush, it must be defined as [x0, x1]; for a y-brush, it must be defined as [y0, y1].\r\n      _bs.forEach((f, k) => {\r\n        select('#brush-' + pos + '-' + k)\r\n          .call(f.brush)\r\n          .call(f.brush.move, f.ext.reverse());\r\n      });\r\n    });\r\n\r\n    //redraw the chart\r\n    pc.renderBrushed();\r\n\r\n    return pc;\r\n  }\r\n};\r\n\r\nexport default brushExtents;\r\n","import { select } from 'd3-selection';\r\nimport { brushSelection } from 'd3-brush';\r\n\r\nconst brushReset = (state, config, pc) => dimension => {\r\n  const { brushes } = state;\r\n\r\n  if (dimension === undefined) {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      Object.keys(config.dimensions).forEach((d, pos) => {\r\n        const axisBrush = brushes[d];\r\n\r\n        axisBrush.forEach((e, i) => {\r\n          const brush = document.getElementById('brush-' + pos + '-' + i);\r\n          if (brushSelection(brush) !== null) {\r\n            pc.g()\r\n              .select('#brush-' + pos + '-' + i)\r\n              .call(e.brush.move, null);\r\n          }\r\n        });\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  } else {\r\n    if (pc.g() !== undefined && pc.g() !== null) {\r\n      const axisBrush = brushes[dimension];\r\n      const pos = Object.keys(config.dimensions).indexOf(dimension);\r\n\r\n      axisBrush.forEach((e, i) => {\r\n        const brush = document.getElementById('brush-' + pos + '-' + i);\r\n        if (brushSelection(brush) !== null) {\r\n          pc.g()\r\n            .select('#brush-' + pos + '-' + i)\r\n            .call(e.brush.move, null);\r\n\r\n          if (typeof e.event === 'function') {\r\n            e.event(select('#brush-' + pos + '-' + i));\r\n          }\r\n        }\r\n      });\r\n\r\n      pc.renderBrushed();\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default brushReset;\r\n","import newBrush from './newBrush';\r\nimport drawBrushes from './drawBrushes';\r\n\r\nconst brushFor = (state, config, pc, events, brushGroup) => (\r\n  axis,\r\n  _selector\r\n) => {\r\n  const { brushes } = state;\r\n  newBrush(state, config, pc, events, brushGroup)(axis, _selector);\r\n  drawBrushes(brushes[axis], config, pc, axis, _selector);\r\n};\r\n\r\nexport default brushFor;\r\n","import { select } from 'd3-selection';\r\nimport brushExtents from './brushExtents';\r\nimport brushReset from './brushReset';\r\nimport brushFor from './brushFor';\r\n\r\nconst install = (state, config, pc, events, brushGroup) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  pc.g()\r\n    .append('svg:g')\r\n    .attr('id', (d, i) => 'brush-group-' + i)\r\n    .attr('class', 'brush-group')\r\n    .attr('dimension', d => d)\r\n    .each(function(d) {\r\n      brushFor(state, config, pc, events, brushGroup)(d, select(this));\r\n    });\r\n\r\n  pc.brushExtents = brushExtents(state, config, pc, events, brushGroup);\r\n  pc.brushReset = brushReset(state, config, pc);\r\n  return pc;\r\n};\r\n\r\nexport default install;\r\n","const uninstall = (state, pc) => () => {\r\n  if (pc.g() !== undefined && pc.g() !== null)\r\n    pc.g()\r\n      .selectAll('.brush-group')\r\n      .remove();\r\n\r\n  state.brushes = {};\r\n  delete pc.brushExtents;\r\n  delete pc.brushReset;\r\n};\r\n\r\nexport default uninstall;\r\n","import brushExtents from './brushExtents';\r\nimport install from './install';\r\nimport selected from './selected';\r\nimport uninstall from './uninstall';\r\n\r\nconst install1DMultiAxes = (brushGroup, config, pc, events) => {\r\n  const state = {\r\n    brushes: {},\r\n    brushNodes: {},\r\n  };\r\n\r\n  brushGroup.modes['1D-axes-multi'] = {\r\n    install: install(state, config, pc, events, brushGroup),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(state, config, brushGroup),\r\n    brushState: brushExtents(state, config, pc),\r\n  };\r\n};\r\n\r\nexport default install1DMultiAxes;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#strums')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#strum-events')\r\n    .remove();\r\n  pc.on('axesreorder.strums', undefined);\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","// test if point falls between lines\r\nconst containmentTest = (strum, width) => p => {\r\n  const p1 = [strum.p1[0] - strum.minX, strum.p1[1] - strum.minX],\r\n    p2 = [strum.p2[0] - strum.minX, strum.p2[1] - strum.minX],\r\n    m1 = 1 - width / p1[0],\r\n    b1 = p1[1] * (1 - m1),\r\n    m2 = 1 - width / p2[0],\r\n    b2 = p2[1] * (1 - m2);\r\n\r\n  const x = p[0],\r\n    y = p[1],\r\n    y1 = m1 * x + b1,\r\n    y2 = m2 * x + b2;\r\n\r\n  return y > Math.min(y1, y2) && y < Math.max(y1, y2);\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  let strum = state.strums[id],\r\n    test = containmentTest(strum, state.strums.width(id)),\r\n    d1 = strum.dims.left,\r\n    d2 = strum.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    point = [y1(d[d1]) - strum.minX, y2(d[d2]) - strum.minX];\r\n  return test(point);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  // Get the ids of the currently active strums.\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d)),\r\n    brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const strum = state.strums[state.strums.active],\r\n    svg = pc.selection.select('svg').select('g#strums');\r\n\r\n  delete state.strums[state.strums.active];\r\n  svg.selectAll('line#strum-' + strum.dims.i).remove();\r\n  svg.selectAll('circle#strum-' + strum.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const strum = state.strums[state.strums.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (strum && strum.p1[0] === strum.p2[0] && strum.p1[1] === strum.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  const brushed = selected(brushGroup, state, config);\r\n  state.strums.active = undefined;\r\n  config.brushed = brushed;\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (\r\n  brushGroup,\r\n  state,\r\n  config,\r\n  pc,\r\n  events,\r\n  strum,\r\n  activePoint\r\n) => {\r\n  let _svg = pc.selection.select('svg').select('g#strums'),\r\n    id = strum.dims.i,\r\n    points = [strum.p1, strum.p2],\r\n    _line = _svg.selectAll('line#strum-' + id).data([strum]),\r\n    circles = _svg.selectAll('circle#strum-' + id).data(points),\r\n    _drag = drag();\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', function(d, i) {\r\n      const ev = event;\r\n      i = i + 1;\r\n      strum['p' + i][0] = Math.min(Math.max(strum.minX + 1, ev.x), strum.maxX);\r\n      strum['p' + i][1] = Math.min(Math.max(strum.minY, ev.y), strum.maxY);\r\n      drawStrum(brushGroup, state, config, pc, events, strum, i - 1);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'strum-' + id)\r\n    .attr('class', 'strum');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    strum = state.strums[state.strums.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p2[0] = Math.min(\r\n    Math.max(strum.minX + 1, ev.x - config.margin.left),\r\n    strum.maxX\r\n  );\r\n  strum.p2[1] = Math.min(\r\n    Math.max(strum.minY, ev.y - config.margin.top),\r\n    strum.maxY\r\n  );\r\n\r\n  drawStrum(brushGroup, state, config, pc, events, strum, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","const h = config => config.height - config.margin.top - config.margin.bottom;\r\n\r\nexport default h;\r\n","const dimensionsForPoint = (config, pc, xscale, p) => {\r\n  const dims = { i: -1, left: undefined, right: undefined };\r\n  Object.keys(config.dimensions).some((dim, i) => {\r\n    if (xscale(dim) < p[0]) {\r\n      dims.i = i;\r\n      dims.left = dim;\r\n      dims.right = Object.keys(config.dimensions)[\r\n        pc.getOrderedDimensionKeys().indexOf(dim) + 1\r\n      ];\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  if (dims.left === undefined) {\r\n    // Event on the left side of the first axis.\r\n    dims.i = 0;\r\n    dims.left = pc.getOrderedDimensionKeys()[0];\r\n    dims.right = pc.getOrderedDimensionKeys()[1];\r\n  } else if (dims.right === undefined) {\r\n    // Event on the right side of the last axis\r\n    dims.i = Object.keys(config.dimensions).length - 1;\r\n    dims.right = dims.left;\r\n    dims.left = pc.getOrderedDimensionKeys()[\r\n      Object.keys(config.dimensions).length - 2\r\n    ];\r\n  }\r\n\r\n  return dims;\r\n};\r\n\r\nexport default dimensionsForPoint;\r\n","import { mouse } from 'd3-selection';\r\nimport h from '../../util/height';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\n\r\n// First we need to determine between which two axes the sturm was started.\r\n// This will determine the freedom of movement, because a strum can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  let p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const strum = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  strum.p1[0] = Math.min(Math.max(strum.minX, p[0]), strum.maxX);\r\n  strum.p2 = strum.p1.slice();\r\n\r\n  state.strums[dims.i] = strum;\r\n  state.strums.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.strums.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","// Checks if the first dimension is directly left of the second dimension.\r\nconst consecutive = dimensions => (first, second) => {\r\n  const keys = Object.keys(dimensions);\r\n\r\n  return keys.some(\r\n    (d, i) =>\r\n      d === first ? i + i < keys.length && dimensions[i + 1] === second : false\r\n  );\r\n};\r\n\r\nexport default consecutive;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\nimport consecutive from '../consecutive';\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (pc.g() === undefined || pc.g() === null) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current strums. Strums are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.strums.active = undefined;\r\n  // Returns the width of the PC segment where currently a strum is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.strums.width = id =>\r\n    state.strums[id] === undefined\r\n      ? undefined\r\n      : state.strums[id].maxX - state.strums[id].minX;\r\n\r\n  pc.on('axesreorder.strums', () => {\r\n    const ids = Object.getOwnPropertyNames(state.strums).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some strums, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = state.strums[d].dims;\r\n        state.strums.active = d;\r\n        // If the two dimensions of the current strum are not next to each other\r\n        // any more, than we'll need to remove the strum. Otherwise we keep it.\r\n        if (!consecutive(config.dimensions)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the strums.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'strums')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#strums')\r\n    .attr('id', 'strum-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst install2DStrums = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    strums: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['2D-strums'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.strums,\r\n  };\r\n};\r\n\r\nexport default install2DStrums;\r\n","const uninstall = (state, pc) => () => {\r\n  pc.selection\r\n    .select('svg')\r\n    .select('g#arcs')\r\n    .remove();\r\n  pc.selection\r\n    .select('svg')\r\n    .select('rect#arc-events')\r\n    .remove();\r\n  pc.on('axesreorder.arcs', undefined);\r\n\r\n  delete pc.brushReset;\r\n\r\n  state.strumRect = undefined;\r\n};\r\n\r\nexport default uninstall;\r\n","const hypothenuse = (a, b) => Math.sqrt(a * a + b * b);\r\n\r\nexport default hypothenuse;\r\n","import hypothenuse from './util/hypothenuse';\r\n\r\n// [0, 2*PI] -> [-PI/2, PI/2]\r\nconst signedAngle = angle =>\r\n  angle > Math.PI ? 1.5 * Math.PI - angle : 0.5 * Math.PI - angle;\r\n\r\n/**\r\n * angles are stored in radians from in [0, 2*PI], where 0 in 12 o'clock.\r\n * However, one can only select lines from 0 to PI, so we compute the\r\n * 'signed' angle, where 0 is the horizontal line (3 o'clock), and +/- PI/2\r\n * are 12 and 6 o'clock respectively.\r\n */\r\nconst containmentTest = arc => a => {\r\n  let startAngle = signedAngle(arc.startAngle);\r\n  let endAngle = signedAngle(arc.endAngle);\r\n\r\n  if (startAngle > endAngle) {\r\n    const tmp = startAngle;\r\n    startAngle = endAngle;\r\n    endAngle = tmp;\r\n  }\r\n\r\n  // test if segment angle is contained in angle interval\r\n  return a >= startAngle && a <= endAngle;\r\n};\r\n\r\nconst crossesStrum = (state, config) => (d, id) => {\r\n  const arc = state.arcs[id],\r\n    test = containmentTest(arc),\r\n    d1 = arc.dims.left,\r\n    d2 = arc.dims.right,\r\n    y1 = config.dimensions[d1].yscale,\r\n    y2 = config.dimensions[d2].yscale,\r\n    a = state.arcs.width(id),\r\n    b = y1(d[d1]) - y2(d[d2]),\r\n    c = hypothenuse(a, b),\r\n    angle = Math.asin(b / c); // rad in [-PI/2, PI/2]\r\n  return test(angle);\r\n};\r\n\r\nconst selected = (brushGroup, state, config) => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n  const brushed = config.data;\r\n\r\n  if (ids.length === 0) {\r\n    return brushed;\r\n  }\r\n\r\n  const crossTest = crossesStrum(state, config);\r\n\r\n  return brushed.filter(d => {\r\n    switch (brushGroup.predicate) {\r\n      case 'AND':\r\n        return ids.every(id => crossTest(d, id));\r\n      case 'OR':\r\n        return ids.some(id => crossTest(d, id));\r\n      default:\r\n        throw new Error('Unknown brush predicate ' + config.brushPredicate);\r\n    }\r\n  });\r\n};\r\n\r\nexport default selected;\r\n","const removeStrum = (state, pc) => {\r\n  const arc = state.arcs[state.arcs.active],\r\n    svg = pc.selection.select('svg').select('g#arcs');\r\n\r\n  delete state.arcs[state.arcs.active];\r\n  state.arcs.active = undefined;\r\n  svg.selectAll('line#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('circle#arc-' + arc.dims.i).remove();\r\n  svg.selectAll('path#arc-' + arc.dims.i).remove();\r\n};\r\n\r\nexport default removeStrum;\r\n","import selected from './selected';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst onDragEnd = (brushGroup, state, config, pc, events) => () => {\r\n  const arc = state.arcs[state.arcs.active];\r\n\r\n  // Okay, somewhat unexpected, but not totally unsurprising, a mousclick is\r\n  // considered a drag without move. So we have to deal with that case\r\n  if (arc && arc.p1[0] === arc.p2[0] && arc.p1[1] === arc.p2[1]) {\r\n    removeStrum(state, pc);\r\n  }\r\n\r\n  if (arc) {\r\n    const angle = state.arcs.startAngle(state.arcs.active);\r\n\r\n    arc.startAngle = angle;\r\n    arc.endAngle = angle;\r\n    arc.arc\r\n      .outerRadius(state.arcs.length(state.arcs.active))\r\n      .startAngle(angle)\r\n      .endAngle(angle);\r\n  }\r\n\r\n  state.arcs.active = undefined;\r\n  config.brushed = selected(brushGroup, state, config);\r\n  pc.renderBrushed();\r\n  events.call('brushend', pc, config.brushed);\r\n};\r\n\r\nexport default onDragEnd;\r\n","import { event, select } from 'd3-selection';\r\nimport { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\n\r\nconst drawStrum = (brushGroup, state, config, pc, events, arc, activePoint) => {\r\n  const svg = pc.selection.select('svg').select('g#arcs'),\r\n    id = arc.dims.i,\r\n    points = [arc.p2, arc.p3],\r\n    _line = svg\r\n      .selectAll('line#arc-' + id)\r\n      .data([{ p1: arc.p1, p2: arc.p2 }, { p1: arc.p1, p2: arc.p3 }]),\r\n    circles = svg.selectAll('circle#arc-' + id).data(points),\r\n    _drag = drag(),\r\n    _path = svg.selectAll('path#arc-' + id).data([arc]);\r\n\r\n  _path\r\n    .enter()\r\n    .append('path')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc')\r\n    .style('fill', 'orange')\r\n    .style('opacity', 0.5);\r\n\r\n  _path\r\n    .attr('d', arc.arc)\r\n    .attr('transform', 'translate(' + arc.p1[0] + ',' + arc.p1[1] + ')');\r\n\r\n  _line\r\n    .enter()\r\n    .append('line')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  _line\r\n    .attr('x1', d => d.p1[0])\r\n    .attr('y1', d => d.p1[1])\r\n    .attr('x2', d => d.p2[0])\r\n    .attr('y2', d => d.p2[1])\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', 2);\r\n\r\n  _drag\r\n    .on('drag', (d, i) => {\r\n      const ev = event;\r\n      i = i + 2;\r\n\r\n      arc['p' + i][0] = Math.min(Math.max(arc.minX + 1, ev.x), arc.maxX);\r\n      arc['p' + i][1] = Math.min(Math.max(arc.minY, ev.y), arc.maxY);\r\n\r\n      const angle =\r\n        i === 3 ? state.arcs.startAngle(id) : state.arcs.endAngle(id);\r\n\r\n      if (\r\n        (arc.startAngle < Math.PI &&\r\n          arc.endAngle < Math.PI &&\r\n          angle < Math.PI) ||\r\n        (arc.startAngle >= Math.PI &&\r\n          arc.endAngle >= Math.PI &&\r\n          angle >= Math.PI)\r\n      ) {\r\n        if (i === 2) {\r\n          arc.endAngle = angle;\r\n          arc.arc.endAngle(angle);\r\n        } else if (i === 3) {\r\n          arc.startAngle = angle;\r\n          arc.arc.startAngle(angle);\r\n        }\r\n      }\r\n\r\n      drawStrum(brushGroup, state, config, pc, events, arc, i - 2);\r\n    })\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  circles\r\n    .enter()\r\n    .append('circle')\r\n    .attr('id', 'arc-' + id)\r\n    .attr('class', 'arc');\r\n\r\n  circles\r\n    .attr('cx', d => d[0])\r\n    .attr('cy', d => d[1])\r\n    .attr('r', 5)\r\n    .style(\r\n      'opacity',\r\n      (d, i) => (activePoint !== undefined && i === activePoint ? 0.8 : 0)\r\n    )\r\n    .on('mouseover', function() {\r\n      select(this).style('opacity', 0.8);\r\n    })\r\n    .on('mouseout', function() {\r\n      select(this).style('opacity', 0);\r\n    })\r\n    .call(_drag);\r\n};\r\n\r\nconst onDrag = (brushGroup, state, config, pc, events) => () => {\r\n  const ev = event,\r\n    arc = state.arcs[state.arcs.active];\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p2[0] = Math.min(\r\n    Math.max(arc.minX + 1, ev.x - config.margin.left),\r\n    arc.maxX\r\n  );\r\n  arc.p2[1] = Math.min(Math.max(arc.minY, ev.y - config.margin.top), arc.maxY);\r\n  arc.p3 = arc.p2.slice();\r\n  drawStrum(brushGroup, state, config, pc, events, arc, 1);\r\n};\r\n\r\nexport default onDrag;\r\n","import { mouse } from 'd3-selection';\r\nimport { arc as d3Arc } from 'd3-shape';\r\nimport dimensionsForPoint from '../dimensionsForPoint';\r\nimport h from '../../util/height';\r\n\r\n// First we need to determine between which two axes the arc was started.\r\n// This will determine the freedom of movement, because a arc can\r\n// logically only happen between two axes, so no movement outside these axes\r\n// should be allowed.\r\nconst onDragStart = (state, config, pc, xscale) => () => {\r\n  const p = mouse(state.strumRect.node());\r\n\r\n  p[0] = p[0] - config.margin.left;\r\n  p[1] = p[1] - config.margin.top;\r\n\r\n  const dims = dimensionsForPoint(config, pc, xscale, p);\r\n  const arc = {\r\n    p1: p,\r\n    dims: dims,\r\n    minX: xscale(dims.left),\r\n    maxX: xscale(dims.right),\r\n    minY: 0,\r\n    maxY: h(config),\r\n    startAngle: undefined,\r\n    endAngle: undefined,\r\n    arc: d3Arc().innerRadius(0),\r\n  };\r\n\r\n  // Make sure that the point is within the bounds\r\n  arc.p1[0] = Math.min(Math.max(arc.minX, p[0]), arc.maxX);\r\n  arc.p2 = arc.p1.slice();\r\n  arc.p3 = arc.p1.slice();\r\n\r\n  state.arcs[dims.i] = arc;\r\n  state.arcs.active = dims.i;\r\n};\r\n\r\nexport default onDragStart;\r\n","import onDragEnd from './onDragEnd';\r\nimport removeStrum from './removeStrum';\r\n\r\nconst brushReset = (brushGroup, state, config, pc, events) => () => {\r\n  const ids = Object.getOwnPropertyNames(state.arcs).filter(d => !isNaN(d));\r\n\r\n  ids.forEach(d => {\r\n    state.arcs.active = d;\r\n    removeStrum(state, pc);\r\n  });\r\n  onDragEnd(brushGroup, state, config, pc, events)();\r\n};\r\n\r\nexport default brushReset;\r\n","import { drag } from 'd3-drag';\r\nimport onDragEnd from './onDragEnd';\r\nimport onDrag from './onDrag';\r\nimport onDragStart from './onDragStart';\r\nimport removeStrum from './removeStrum';\r\nimport brushReset from './brushReset';\r\nimport w from '../../util/width';\r\nimport h from '../../util/height';\r\n\r\nimport hypothenuse from './util/hypothenuse';\r\nimport consecutive from '../consecutive';\r\n\r\n// returns angles in [-PI/2, PI/2]\r\nconst angle = (p1, p2) => {\r\n  const a = p1[0] - p2[0],\r\n    b = p1[1] - p2[1],\r\n    c = hypothenuse(a, b);\r\n\r\n  return Math.asin(b / c);\r\n};\r\n\r\nconst endAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n  let sAngle = angle(arc.p1, arc.p2),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p2[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst startAngle = state => id => {\r\n  const arc = state.arcs[id];\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  let sAngle = angle(arc.p1, arc.p3),\r\n    uAngle = -sAngle + Math.PI / 2;\r\n\r\n  if (arc.p1[0] > arc.p3[0]) {\r\n    uAngle = 2 * Math.PI - uAngle;\r\n  }\r\n\r\n  return uAngle;\r\n};\r\n\r\nconst length = state => id => {\r\n  const arc = state.arcs[id];\r\n\r\n  if (arc === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  const a = arc.p1[0] - arc.p2[0],\r\n    b = arc.p1[1] - arc.p2[1];\r\n\r\n  return hypothenuse(a, b);\r\n};\r\n\r\nconst install = (brushGroup, state, config, pc, events, xscale) => () => {\r\n  if (!pc.g()) {\r\n    pc.createAxes();\r\n  }\r\n\r\n  const _drag = drag();\r\n\r\n  // Map of current arcs. arcs are stored per segment of the PC. A segment,\r\n  // being the area between two axes. The left most area is indexed at 0.\r\n  state.arcs.active = undefined;\r\n  // Returns the width of the PC segment where currently a arc is being\r\n  // placed. NOTE: even though they are evenly spaced in our current\r\n  // implementation, we keep for when non-even spaced segments are supported as\r\n  // well.\r\n  state.arcs.width = id => {\r\n    const arc = state.arcs[id];\r\n    return arc === undefined ? undefined : arc.maxX - arc.minX;\r\n  };\r\n\r\n  // returns angles in [0, 2 * PI]\r\n  state.arcs.endAngle = endAngle(state);\r\n  state.arcs.startAngle = startAngle(state);\r\n  state.arcs.length = length(state);\r\n\r\n  pc.on('axesreorder.arcs', () => {\r\n    const ids = Object.getOwnPropertyNames(arcs).filter(d => !isNaN(d));\r\n\r\n    if (ids.length > 0) {\r\n      // We have some arcs, which might need to be removed.\r\n      ids.forEach(d => {\r\n        const dims = arcs[d].dims;\r\n        state.arcs.active = d;\r\n        // If the two dimensions of the current arc are not next to each other\r\n        // any more, than we'll need to remove the arc. Otherwise we keep it.\r\n        if (!consecutive(dims)(dims.left, dims.right)) {\r\n          removeStrum(state, pc);\r\n        }\r\n      });\r\n      onDragEnd(brushGroup, state, config, pc, events)();\r\n    }\r\n  });\r\n\r\n  // Add a new svg group in which we draw the arcs.\r\n  pc.selection\r\n    .select('svg')\r\n    .append('g')\r\n    .attr('id', 'arcs')\r\n    .attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n  // Install the required brushReset function\r\n  pc.brushReset = brushReset(brushGroup, state, config, pc, events);\r\n\r\n  _drag\r\n    .on('start', onDragStart(state, config, pc, xscale))\r\n    .on('drag', onDrag(brushGroup, state, config, pc, events))\r\n    .on('end', onDragEnd(brushGroup, state, config, pc, events));\r\n\r\n  // NOTE: The styling needs to be done here and not in the css. This is because\r\n  //       for 1D brushing, the canvas layers should not listen to\r\n  //       pointer-events._.\r\n  state.strumRect = pc.selection\r\n    .select('svg')\r\n    .insert('rect', 'g#arcs')\r\n    .attr('id', 'arc-events')\r\n    .attr('x', config.margin.left)\r\n    .attr('y', config.margin.top)\r\n    .attr('width', w(config))\r\n    .attr('height', h(config) + 2)\r\n    .style('opacity', 0)\r\n    .call(_drag);\r\n};\r\n\r\nexport default install;\r\n","import uninstall from './uninstall';\r\nimport install from './install';\r\nimport selected from './selected';\r\n\r\nconst installAngularBrush = (brushGroup, config, pc, events, xscale) => {\r\n  const state = {\r\n    arcs: {},\r\n    strumRect: {},\r\n  };\r\n\r\n  brushGroup.modes['angular'] = {\r\n    install: install(brushGroup, state, config, pc, events, xscale),\r\n    uninstall: uninstall(state, pc),\r\n    selected: selected(brushGroup, state, config),\r\n    brushState: () => state.arcs,\r\n  };\r\n};\r\n\r\nexport default installAngularBrush;\r\n","// calculate 2d intersection of line a->b with line c->d\r\n// points are objects with x and y properties\r\nconst intersection = (a, b, c, d) => {\r\n  return {\r\n    x:\r\n      ((a.x * b.y - a.y * b.x) * (c.x - d.x) -\r\n        (a.x - b.x) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n    y:\r\n      ((a.x * b.y - a.y * b.x) * (c.y - d.y) -\r\n        (a.y - b.y) * (c.x * d.y - c.y * d.x)) /\r\n      ((a.x - b.x) * (c.y - d.y) - (a.y - b.y) * (c.x - d.x)),\r\n  };\r\n};\r\n\r\nexport default intersection;\r\n","// Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n// (so you can choose to save it to disk, etc.)\r\nconst mergeParcoords = pc => callback => {\r\n  // Retina display, etc.\r\n  const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n  // Create a canvas element to store the merged canvases\r\n  const mergedCanvas = document.createElement('canvas');\r\n  mergedCanvas.width = pc.canvas.foreground.clientWidth * devicePixelRatio;\r\n  mergedCanvas.height =\r\n    (pc.canvas.foreground.clientHeight + 30) * devicePixelRatio;\r\n  mergedCanvas.style.width = mergedCanvas.width / devicePixelRatio + 'px';\r\n  mergedCanvas.style.height = mergedCanvas.height / devicePixelRatio + 'px';\r\n\r\n  // Give the canvas a white background\r\n  const context = mergedCanvas.getContext('2d');\r\n  context.fillStyle = '#ffffff';\r\n  context.fillRect(0, 0, mergedCanvas.width, mergedCanvas.height);\r\n\r\n  // Merge all the canvases\r\n  for (const key in pc.canvas) {\r\n    context.drawImage(\r\n      pc.canvas[key],\r\n      0,\r\n      24 * devicePixelRatio,\r\n      mergedCanvas.width,\r\n      mergedCanvas.height - 30 * devicePixelRatio\r\n    );\r\n  }\r\n\r\n  // Add SVG elements to canvas\r\n  const DOMURL = window.URL || window.webkitURL || window;\r\n  const serializer = new XMLSerializer();\r\n  const svgStr = serializer.serializeToString(\r\n    pc.selection.select('svg').node()\r\n  );\r\n\r\n  // Create a Data URI.\r\n  const src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\r\n  const img = new Image();\r\n  img.onload = () => {\r\n    context.drawImage(\r\n      img,\r\n      0,\r\n      0,\r\n      img.width * devicePixelRatio,\r\n      img.height * devicePixelRatio\r\n    );\r\n    if (typeof callback === 'function') {\r\n      callback(mergedCanvas);\r\n    }\r\n  };\r\n  img.src = src;\r\n};\r\n\r\nexport default mergeParcoords;\r\n","import { brushSelection } from 'd3-brush';\r\n\r\nconst selected = (config, pc) => () => {\r\n  let actives = [];\r\n  let extents = [];\r\n  let ranges = {};\r\n  //get brush selections from each node, convert to actual values\r\n  //invert order of values in array to comply with the parcoords architecture\r\n  if (config.brushes.length === 0) {\r\n    let nodes = pc\r\n      .g()\r\n      .selectAll('.brush')\r\n      .nodes();\r\n    for (let k = 0; k < nodes.length; k++) {\r\n      if (brushSelection(nodes[k]) !== null) {\r\n        actives.push(nodes[k].__data__);\r\n        let values = [];\r\n        let ranger = brushSelection(nodes[k]);\r\n        if (\r\n          typeof config.dimensions[nodes[k].__data__].yscale.domain()[0] ===\r\n          'number'\r\n        ) {\r\n          for (let i = 0; i < ranger.length; i++) {\r\n            if (\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            } else if (config.dimensions[nodes[k].__data__].yscale() !== 1) {\r\n              values.unshift(\r\n                config.dimensions[nodes[k].__data__].yscale.invert(ranger[i])\r\n              );\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        } else {\r\n          ranges[nodes[k].__data__] = brushSelection(nodes[k]);\r\n          let dimRange = config.dimensions[nodes[k].__data__].yscale.range();\r\n          let dimDomain = config.dimensions[nodes[k].__data__].yscale.domain();\r\n          for (let j = 0; j < dimRange.length; j++) {\r\n            if (\r\n              dimRange[j] >= ranger[0] &&\r\n              dimRange[j] <= ranger[1] &&\r\n              actives.includes(nodes[k].__data__) &&\r\n              config.flipAxes.includes(nodes[k].__data__)\r\n            ) {\r\n              values.push(dimRange[j]);\r\n            } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n              values.unshift(dimRange[j]);\r\n            }\r\n          }\r\n          extents.push(values);\r\n          for (let ii = 0; ii < extents.length; ii++) {\r\n            if (extents[ii].length === 0) {\r\n              extents[ii] = [1, 1];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // test if within range\r\n    const within = {\r\n      date: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n      number: function(d, p, dimension) {\r\n        return extents[dimension][0] <= d[p] && d[p] <= extents[dimension][1];\r\n      },\r\n      string: function(d, p, dimension) {\r\n        let category = d[p];\r\n        let categoryIndex = config.dimensions[p].yscale\r\n          .domain()\r\n          .indexOf(category);\r\n        let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n          categoryIndex\r\n        ];\r\n        return (\r\n          categoryRangeValue >= ranges[p][0] &&\r\n          categoryRangeValue <= ranges[p][1]\r\n        );\r\n      },\r\n    };\r\n    return config.data.filter(d =>\r\n      actives.every((p, dimension) =>\r\n        within[config.dimensions[p].type](d, p, dimension)\r\n      )\r\n    );\r\n  } else {\r\n    // need to get data from each brush instead of each axis\r\n    // first must find active axes by iterating through all brushes\r\n    // then go through similiar process as above.\r\n    let multiBrushData = [];\r\n    for (let idx = 0; idx < config.brushes.length; idx++) {\r\n      let brush = config.brushes[idx];\r\n      let values = [];\r\n      let ranger = brush.extent;\r\n      let actives = [brush.data];\r\n      if (\r\n        typeof config.dimensions[brush.data].yscale.domain()[0] === 'number'\r\n      ) {\r\n        for (let i = 0; i < ranger.length; i++) {\r\n          if (\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(config.dimensions[brush.data].yscale.invert(ranger[i]));\r\n          } else if (config.dimensions[brush.data].yscale() !== 1) {\r\n            values.unshift(\r\n              config.dimensions[brush.data].yscale.invert(ranger[i])\r\n            );\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      } else {\r\n        ranges[brush.data] = brush.extent;\r\n        let dimRange = config.dimensions[brush.data].yscale.range();\r\n        let dimDomain = config.dimensions[brush.data].yscale.domain();\r\n        for (let j = 0; j < dimRange.length; j++) {\r\n          if (\r\n            dimRange[j] >= ranger[0] &&\r\n            dimRange[j] <= ranger[1] &&\r\n            actives.includes(brush.data) &&\r\n            config.flipAxes.includes(brush.data)\r\n          ) {\r\n            values.push(dimRange[j]);\r\n          } else if (dimRange[j] >= ranger[0] && dimRange[j] <= ranger[1]) {\r\n            values.unshift(dimRange[j]);\r\n          }\r\n        }\r\n        extents.push(values);\r\n        for (let ii = 0; ii < extents.length; ii++) {\r\n          if (extents[ii].length === 0) {\r\n            extents[ii] = [1, 1];\r\n          }\r\n        }\r\n      }\r\n      let within = {\r\n        date: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n        number: function(d, p, dimension) {\r\n          return extents[idx][0] <= d[p] && d[p] <= extents[idx][1];\r\n        },\r\n        string: function(d, p, dimension) {\r\n          let category = d[p];\r\n          let categoryIndex = config.dimensions[p].yscale\r\n            .domain()\r\n            .indexOf(category);\r\n          let categoryRangeValue = config.dimensions[p].yscale.range()[\r\n            categoryIndex\r\n          ];\r\n          return (\r\n            categoryRangeValue >= ranges[p][0] &&\r\n            categoryRangeValue <= ranges[p][1]\r\n          );\r\n        },\r\n      };\r\n\r\n      // filter data, but instead of returning it now,\r\n      // put it into multiBrush data which is returned after\r\n      // all brushes are iterated through.\r\n      let filtered = config.data.filter(d =>\r\n        actives.every((p, dimension) =>\r\n          within[config.dimensions[p].type](d, p, dimension)\r\n        )\r\n      );\r\n      for (let z = 0; z < filtered.length; z++) {\r\n        multiBrushData.push(filtered[z]);\r\n      }\r\n      actives = [];\r\n      ranges = {};\r\n    }\r\n    return multiBrushData;\r\n  }\r\n};\r\n\r\nexport default selected;\r\n","const brushPredicate = (brushGroup, config, pc) => (predicate = null) => {\r\n  if (predicate === null) {\r\n    return brushGroup.predicate;\r\n  }\r\n\r\n  predicate = String(predicate).toUpperCase();\r\n  if (predicate !== 'AND' && predicate !== 'OR') {\r\n    throw new Error('Invalid predicate ' + predicate);\r\n  }\r\n\r\n  brushGroup.predicate = predicate;\r\n  config.brushed = brushGroup.currentMode().selected();\r\n  pc.renderBrushed();\r\n  return pc;\r\n};\r\n\r\nconst brushMode = (brushGroup, config, pc) => (mode = null) => {\r\n  if (mode === null) {\r\n    return brushGroup.mode;\r\n  }\r\n\r\n  if (pc.brushModes().indexOf(mode) === -1) {\r\n    throw new Error('pc.brushmode: Unsupported brush mode: ' + mode);\r\n  }\r\n\r\n  // Make sure that we don't trigger unnecessary events by checking if the mode\r\n  // actually changes.\r\n  if (mode !== brushGroup.mode) {\r\n    // When changing brush modes, the first thing we need to do is clearing any\r\n    // brushes from the current mode, if any.\r\n    if (brushGroup.mode !== 'None') {\r\n      pc.brushReset();\r\n    }\r\n\r\n    // Next, we need to 'uninstall' the current brushMode.\r\n    brushGroup.modes[brushGroup.mode].uninstall(pc);\r\n    // Finally, we can install the requested one.\r\n    brushGroup.mode = mode;\r\n    brushGroup.modes[brushGroup.mode].install();\r\n    if (mode === 'None') {\r\n      delete pc.brushPredicate;\r\n    } else {\r\n      pc.brushPredicate = brushPredicate(brushGroup, config, pc);\r\n    }\r\n  }\r\n\r\n  return pc;\r\n};\r\n\r\nexport default brushMode;\r\n","/**\r\n * dimension display names\r\n *\r\n * @param config\r\n * @param d\r\n * @returns {*}\r\n */\r\nconst dimensionLabels = config => d =>\r\n  config.dimensions[d].title ? config.dimensions[d].title : d;\r\n\r\nexport default dimensionLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nconst flipAxisAndUpdatePCP = (config, pc, axis) =>\r\n  function(dimension) {\r\n    pc.flip(dimension);\r\n    pc.brushReset(dimension);\r\n    select(this.parentElement)\r\n      .transition()\r\n      .duration(config.animationTime)\r\n      .call(axis.scale(config.dimensions[dimension].yscale));\r\n    pc.render();\r\n  };\r\n\r\nexport default flipAxisAndUpdatePCP;\r\n","import { event } from 'd3-selection';\r\n\r\nconst rotateLabels = (config, pc) => {\r\n  if (!config.rotateLabels) return;\r\n\r\n  let delta = event.deltaY;\r\n  delta = delta < 0 ? -5 : delta;\r\n  delta = delta > 0 ? 5 : delta;\r\n\r\n  config.dimensionTitleRotation += delta;\r\n  pc.svg\r\n    .selectAll('text.label')\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n  event.preventDefault();\r\n};\r\n\r\nexport default rotateLabels;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nconst updateAxes = (config, pc, position, axis, flags) => (\r\n  animationTime = null\r\n) => {\r\n  if (animationTime === null) {\r\n    animationTime = config.animationTime;\r\n  }\r\n\r\n  const g_data = pc.svg\r\n    .selectAll('.dimension')\r\n    .data(pc.getOrderedDimensionKeys());\r\n  // Enter\r\n  g_data\r\n    .enter()\r\n    .append('svg:g')\r\n    .attr('class', 'dimension')\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 0)\r\n    .append('svg:g')\r\n    .attr('class', 'axis')\r\n    .attr('transform', 'translate(0,0)')\r\n    .each(function(d) {\r\n      const axisElement = select(this).call(\r\n        pc.applyAxisConfig(axis, config.dimensions[d])\r\n      );\r\n\r\n      axisElement\r\n        .selectAll('path')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n\r\n      axisElement\r\n        .selectAll('line')\r\n        .style('fill', 'none')\r\n        .style('stroke', '#222')\r\n        .style('shape-rendering', 'crispEdges');\r\n    })\r\n    .append('svg:text')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('class', 'label')\r\n    .attr('x', 0)\r\n    .attr('y', 0)\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    )\r\n    .text(dimensionLabels(config))\r\n    .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n    .on('wheel', rotateLabels(config, pc));\r\n\r\n  // Update\r\n  g_data.attr('opacity', 0);\r\n  g_data\r\n    .select('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n  g_data\r\n    .select('.label')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .text(dimensionLabels(config))\r\n    .attr(\r\n      'transform',\r\n      'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n    );\r\n\r\n  // Exit\r\n  g_data.exit().remove();\r\n\r\n  const g = pc.svg.selectAll('.dimension');\r\n  g.transition()\r\n    .duration(animationTime)\r\n    .attr('transform', p => 'translate(' + position(p) + ')')\r\n    .style('opacity', 1);\r\n\r\n  pc.svg\r\n    .selectAll('.axis')\r\n    .transition()\r\n    .duration(animationTime)\r\n    .each(function(d) {\r\n      select(this).call(pc.applyAxisConfig(axis, config.dimensions[d]));\r\n    });\r\n\r\n  if (flags.brushable) pc.brushable();\r\n  if (flags.reorderable) pc.reorderable();\r\n  if (pc.brushMode() !== 'None') {\r\n    const mode = pc.brushMode();\r\n    pc.brushMode('None');\r\n    pc.brushMode(mode);\r\n  }\r\n  return this;\r\n};\r\n\r\nexport default updateAxes;\r\n","/** adjusts an axis' default range [h()+1, 1] if a NullValueSeparator is set */\r\nconst getRange = config => {\r\n  const h = config.height - config.margin.top - config.margin.bottom;\r\n\r\n  if (config.nullValueSeparator == 'bottom') {\r\n    return [\r\n      h +\r\n        1 -\r\n        config.nullValueSeparatorPadding.bottom -\r\n        config.nullValueSeparatorPadding.top,\r\n      1,\r\n    ];\r\n  } else if (config.nullValueSeparator == 'top') {\r\n    return [\r\n      h + 1,\r\n      1 +\r\n        config.nullValueSeparatorPadding.bottom +\r\n        config.nullValueSeparatorPadding.top,\r\n    ];\r\n  }\r\n  return [h + 1, 1];\r\n};\r\n\r\nexport default getRange;\r\n","import { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale';\r\nimport { extent } from 'd3-array';\r\n\r\nimport getRange from '../util/getRange';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst autoscale = (config, pc, xscale, ctx) =>\r\n  function() {\r\n    // yscale\r\n    const defaultScales = {\r\n      date: function(k) {\r\n        let _extent = extent(config.data, d => (d[k] ? d[k].getTime() : null));\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleTime()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      number: function(k) {\r\n        let _extent = extent(config.data, d => +d[k]);\r\n        // special case if single value\r\n        if (_extent[0] === _extent[1]) {\r\n          return scalePoint()\r\n            .domain(_extent)\r\n            .range(getRange(config));\r\n        }\r\n        if (config.flipAxes.includes(k)) {\r\n          _extent = _extent.map(val => tempDate.unshift(val));\r\n        }\r\n        return scaleLinear()\r\n          .domain(_extent)\r\n          .range(getRange(config));\r\n      },\r\n      string: function(k) {\r\n        let counts = {},\r\n          domain = [];\r\n        // Let's get the count for each value so that we can sort the domain based\r\n        // on the number of items for each value.\r\n        config.data.map(p => {\r\n          if (p[k] === undefined && config.nullValueSeparator !== 'undefined') {\r\n            return null; // null values will be drawn beyond the horizontal null value separator!\r\n          }\r\n          if (counts[p[k]] === undefined) {\r\n            counts[p[k]] = 1;\r\n          } else {\r\n            counts[p[k]] = counts[p[k]] + 1;\r\n          }\r\n        });\r\n        if (config.flipAxes.includes(k)) {\r\n          domain = Object.getOwnPropertyNames(counts).sort();\r\n        } else {\r\n          let tempArr = Object.getOwnPropertyNames(counts).sort();\r\n          for (let i = 0; i < Object.getOwnPropertyNames(counts).length; i++) {\r\n            domain.push(tempArr.pop());\r\n          }\r\n        }\r\n\r\n        //need to create an ordinal scale for categorical data\r\n        let categoricalRange = [];\r\n        if (domain.length === 1) {\r\n          //edge case\r\n          domain = [' ', domain[0], ' '];\r\n        }\r\n        let addBy = getRange(config)[0] / (domain.length - 1);\r\n        for (let j = 0; j < domain.length; j++) {\r\n          if (categoricalRange.length === 0) {\r\n            categoricalRange.push(0);\r\n            continue;\r\n          }\r\n          categoricalRange.push(categoricalRange[j - 1] + addBy);\r\n        }\r\n        return scaleOrdinal()\r\n          .domain(domain)\r\n          .range(categoricalRange);\r\n      },\r\n    };\r\n    Object.keys(config.dimensions).forEach(function(k) {\r\n      if (\r\n        config.dimensions[k].yscale === undefined ||\r\n        config.dimensions[k].yscale === null\r\n      ) {\r\n        config.dimensions[k].yscale = defaultScales[config.dimensions[k].type](\r\n          k\r\n        );\r\n      }\r\n    });\r\n\r\n    // xscale\r\n    xscale.range([0, w(config)], 1);\r\n    // Retina display, etc.\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n    // canvas sizes\r\n    pc.selection\r\n      .selectAll('canvas')\r\n      .style('margin-top', config.margin.top + 'px')\r\n      .style('margin-left', config.margin.left + 'px')\r\n      .style('width', w(config) + 2 + 'px')\r\n      .style('height', h(config) + 2 + 'px')\r\n      .attr('width', (w(config) + 2) * devicePixelRatio)\r\n      .attr('height', (h(config) + 2) * devicePixelRatio);\r\n    // default styles, needs to be set when canvas width changes\r\n    ctx.foreground.strokeStyle = config.color;\r\n    ctx.foreground.lineWidth = 1.4;\r\n    ctx.foreground.globalCompositeOperation = config.composite;\r\n    ctx.foreground.globalAlpha = config.alpha;\r\n    ctx.foreground.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.brushed.strokeStyle = config.brushedColor;\r\n    ctx.brushed.lineWidth = 1.4;\r\n    ctx.brushed.globalCompositeOperation = config.composite;\r\n    ctx.brushed.globalAlpha = config.alpha;\r\n    ctx.brushed.scale(devicePixelRatio, devicePixelRatio);\r\n    ctx.highlight.lineWidth = 3;\r\n    ctx.highlight.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    return this;\r\n  };\r\n\r\nexport default autoscale;\r\n","import { brushSelection, brushY } from 'd3-brush';\r\nimport { event, select } from 'd3-selection';\r\n\r\nconst brushable = (config, pc, flags) =>\r\n  function() {\r\n    if (!pc.g()) {\r\n      pc.createAxes();\r\n    }\r\n\r\n    const g = pc.g();\r\n\r\n    // Add and store a brush for each axis.\r\n    g.append('svg:g')\r\n      .attr('class', 'brush')\r\n      .each(function(d) {\r\n        if (config.dimensions[d] !== undefined) {\r\n          config.dimensions[d]['brush'] = brushY(select(this)).extent([\r\n            [-15, 0],\r\n            [15, config.dimensions[d].yscale.range()[0]],\r\n          ]);\r\n          select(this).call(\r\n            config.dimensions[d]['brush']\r\n              .on('start', function() {\r\n                if (event.sourceEvent !== null && !event.sourceEvent.ctrlKey) {\r\n                  pc.brushReset();\r\n                }\r\n              })\r\n              .on('brush', function() {\r\n                if (!event.sourceEvent.ctrlKey) {\r\n                  pc.brush();\r\n                }\r\n              })\r\n              .on('end', function() {\r\n                // save brush selection is ctrl key is held\r\n                // store important brush information and\r\n                // the html element of the selection,\r\n                // to make a dummy selection element\r\n                if (event.sourceEvent.ctrlKey) {\r\n                  let html = select(this)\r\n                    .select('.selection')\r\n                    .nodes()[0].outerHTML;\r\n                  html = html.replace(\r\n                    'class=\"selection\"',\r\n                    'class=\"selection dummy' +\r\n                      ' selection-' +\r\n                      config.brushes.length +\r\n                      '\"'\r\n                  );\r\n                  let dat = select(this).nodes()[0].__data__;\r\n                  let brush = {\r\n                    id: config.brushes.length,\r\n                    extent: brushSelection(this),\r\n                    html: html,\r\n                    data: dat,\r\n                  };\r\n                  config.brushes.push(brush);\r\n                  select(select(this).nodes()[0].parentNode)\r\n                    .select('.axis')\r\n                    .nodes()[0].outerHTML += html;\r\n                  pc.brush();\r\n                  config.dimensions[d].brush.move(select(this, null));\r\n                  select(this)\r\n                    .select('.selection')\r\n                    .attr('style', 'display:none');\r\n                  pc.brushable();\r\n                } else {\r\n                  pc.brush();\r\n                }\r\n              })\r\n          );\r\n          select(this).on('dblclick', function() {\r\n            pc.brushReset(d);\r\n          });\r\n        }\r\n      });\r\n\r\n    flags.brushable = true;\r\n    return this;\r\n  };\r\n\r\nexport default brushable;\r\n","import { extent } from 'd3-array';\r\n\r\nconst commonScale = (config, pc) =>\r\n  function(global, type) {\r\n    const t = type || 'number';\r\n    if (typeof global === 'undefined') {\r\n      global = true;\r\n    }\r\n\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    // scales of the same type\r\n    const scales = Object.keys(config.dimensions).filter(\r\n      p => config.dimensions[p].type == t\r\n    );\r\n\r\n    if (global) {\r\n      let _extent = extent(\r\n        scales\r\n          .map(d => config.dimensions[d].yscale.domain())\r\n          .reduce((cur, acc) => cur.concat(acc))\r\n      );\r\n\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(_extent);\r\n      });\r\n    } else {\r\n      scales.forEach(d => {\r\n        config.dimensions[d].yscale.domain(extent(config.data, d => +d[k]));\r\n      });\r\n    }\r\n\r\n    // update centroids\r\n    if (config.bundleDimension !== null) {\r\n      pc.bundleDimension(config.bundleDimension);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default commonScale;\r\n","const computeRealCentroids = (dimensions, position) => row =>\r\n  Object.keys(dimensions).map(d => {\r\n    const x = position(d);\r\n    const y = dimensions[d].yscale(row[d]);\r\n    return [x, y];\r\n  });\r\n\r\nexport default computeRealCentroids;\r\n","const isValid = d => d !== null && d !== undefined;\r\n\r\nconst applyDimensionDefaults = (config, pc) =>\r\n  function(dims) {\r\n    const types = pc.detectDimensionTypes(config.data);\r\n    dims = dims ? dims : Object.keys(types);\r\n\r\n    return dims.reduce((acc, cur, i) => {\r\n      const k = config.dimensions[cur] ? config.dimensions[cur] : {};\r\n      acc[cur] = {\r\n        ...k,\r\n        orient: isValid(k.orient) ? k.orient : 'left',\r\n        ticks: isValid(k.ticks) ? k.ticks : 5,\r\n        innerTickSize: isValid(k.innerTickSize) ? k.innerTickSize : 6,\r\n        outerTickSize: isValid(k.outerTickSize) ? k.outerTickSize : 0,\r\n        tickPadding: isValid(k.tickPadding) ? k.tickPadding : 3,\r\n        type: isValid(k.type) ? k.type : types[cur],\r\n        index: isValid(k.index) ? k.index : i,\r\n      };\r\n\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\nexport default applyDimensionDefaults;\r\n","import { select } from 'd3-selection';\r\n\r\nimport dimensionLabels from '../util/dimensionLabels';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\nimport rotateLabels from '../util/rotateLabels';\r\n\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\n/**\r\n * Create static SVG axes with dimension names, ticks, and labels.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param xscale\r\n * @param flags\r\n * @param axis\r\n * @returns {Function}\r\n */\r\nconst createAxes = (config, pc, xscale, flags, axis) =>\r\n  function() {\r\n    if (pc.g() !== undefined) {\r\n      pc.removeAxes();\r\n    }\r\n    // Add a group element for each dimension.\r\n    pc._g = pc.svg\r\n      .selectAll('.dimension')\r\n      .data(pc.getOrderedDimensionKeys(), function(d) {\r\n        return d;\r\n      })\r\n      .enter()\r\n      .append('svg:g')\r\n      .attr('class', 'dimension')\r\n      .attr('transform', function(d) {\r\n        return 'translate(' + xscale(d) + ')';\r\n      });\r\n    // Add an axis and title.\r\n    pc._g\r\n      .append('svg:g')\r\n      .attr('class', 'axis')\r\n      .attr('transform', 'translate(0,0)')\r\n      .each(function(d) {\r\n        let axisElement = select(this).call(\r\n          pc.applyAxisConfig(axis, config.dimensions[d])\r\n        );\r\n\r\n        axisElement\r\n          .selectAll('path')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n\r\n        axisElement\r\n          .selectAll('line')\r\n          .style('fill', 'none')\r\n          .style('stroke', '#222')\r\n          .style('shape-rendering', 'crispEdges');\r\n      })\r\n\r\n      .append('svg:text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', 0)\r\n      .attr(\r\n        'transform',\r\n        'translate(0,-5) rotate(' + config.dimensionTitleRotation + ')'\r\n      )\r\n      .attr('x', 0)\r\n      .attr('class', 'label')\r\n      .text(dimensionLabels(config))\r\n      .on('dblclick', flipAxisAndUpdatePCP(config, pc, axis))\r\n      .on('wheel', rotateLabels(config, pc));\r\n\r\n    if (config.nullValueSeparator === 'top') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('x2', w(config))\r\n        .attr('y2', 1 + config.nullValueSeparatorPadding.top)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    } else if (config.nullValueSeparator === 'bottom') {\r\n      pc.svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('x2', w(config))\r\n        .attr('y2', h(config) + 1 - config.nullValueSeparatorPadding.bottom)\r\n        .attr('stroke-width', 1)\r\n        .attr('stroke', '#777')\r\n        .attr('fill', 'none')\r\n        .attr('shape-rendering', 'crispEdges');\r\n    }\r\n\r\n    flags.axes = true;\r\n    return this;\r\n  };\r\n\r\nexport default createAxes;\r\n","import { entries } from 'd3-collection';\r\nimport { min } from 'd3-array';\r\n\r\n//draw dots with radius r on the axis line where data intersects\r\nconst axisDots = (config, pc, position) => _r => {\r\n  const r = _r || 0.1;\r\n  const ctx = pc.ctx.marks;\r\n  const startAngle = 0;\r\n  const endAngle = 2 * Math.PI;\r\n  ctx.globalAlpha = min([1 / Math.pow(config.data.length, 1 / 2), 1]);\r\n  config.data.forEach(d => {\r\n    entries(config.dimensions).forEach((p, i) => {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        position(p),\r\n        config.dimensions[p.key].yscale(d[p]),\r\n        r,\r\n        startAngle,\r\n        endAngle\r\n      );\r\n      ctx.stroke();\r\n      ctx.fill();\r\n    });\r\n  });\r\n  return this;\r\n};\r\n\r\nexport default axisDots;\r\n","import { axisBottom, axisLeft, axisRight, axisTop } from 'd3-axis';\r\n\r\nconst applyAxisConfig = (axis, dimension) => {\r\n  let axisCfg;\r\n\r\n  switch (dimension.orient) {\r\n    case 'left':\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n    case 'right':\r\n      axisCfg = axisRight(dimension.yscale);\r\n      break;\r\n    case 'top':\r\n      axisCfg = axisTop(dimension.yscale);\r\n      break;\r\n    case 'bottom':\r\n      axisCfg = axisBottom(dimension.yscale);\r\n      break;\r\n    default:\r\n      axisCfg = axisLeft(dimension.yscale);\r\n      break;\r\n  }\r\n\r\n  axisCfg\r\n    .ticks(dimension.ticks)\r\n    .tickValues(dimension.tickValues)\r\n    .tickSizeInner(dimension.innerTickSize)\r\n    .tickSizeOuter(dimension.outerTickSize)\r\n    .tickPadding(dimension.tickPadding)\r\n    .tickFormat(dimension.tickFormat);\r\n\r\n  return axisCfg;\r\n};\r\n\r\nexport default applyAxisConfig;\r\n","import { drag } from 'd3-drag';\r\nimport { event, select } from 'd3-selection';\r\n\r\nimport w from '../util/width';\r\n\r\n// Jason Davies, http://bl.ocks.org/1341281\r\nconst reorderable = (config, pc, xscale, position, dragging, flags) =>\r\n  function() {\r\n    if (pc.g() === undefined) pc.createAxes();\r\n    const g = pc.g();\r\n\r\n    g.style('cursor', 'move').call(\r\n      drag()\r\n        .on('start', function(d) {\r\n          dragging[d] = this.__origin__ = xscale(d);\r\n        })\r\n        .on('drag', function(d) {\r\n          dragging[d] = Math.min(\r\n            w(config),\r\n            Math.max(0, (this.__origin__ += event.dx))\r\n          );\r\n          pc.sortDimensions();\r\n          xscale.domain(pc.getOrderedDimensionKeys());\r\n          pc.render();\r\n          g.attr('transform', d => 'translate(' + position(d) + ')');\r\n        })\r\n        .on('end', function(d) {\r\n          delete this.__origin__;\r\n          delete dragging[d];\r\n          select(this)\r\n            .transition()\r\n            .attr('transform', 'translate(' + xscale(d) + ')');\r\n          pc.render();\r\n        })\r\n    );\r\n    flags.reorderable = true;\r\n    return this;\r\n  };\r\n\r\nexport default reorderable;\r\n","// rescale for height, width and margins\r\n// TODO currently assumes chart is brushable, and destroys old brushes\r\nconst resize = (config, pc, flags, events) => {\r\n  return function() {\r\n    // selection size\r\n    pc.selection\r\n      .select('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height);\r\n    pc.svg.attr(\r\n      'transform',\r\n      'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n    );\r\n\r\n    // FIXME: the current brush state should pass through\r\n    if (flags.brushable) pc.brushReset();\r\n\r\n    // scales\r\n    pc.autoscale();\r\n\r\n    // axes, destroys old brushes.\r\n    if (pc.g()) pc.createAxes();\r\n    if (flags.brushable) pc.brushable();\r\n    if (flags.reorderable) pc.reorderable();\r\n\r\n    events.call('resize', this, {\r\n      width: config.width,\r\n      height: config.height,\r\n      margin: config.margin,\r\n    });\r\n\r\n    return this;\r\n  };\r\n};\r\n\r\nexport default resize;\r\n","// Reorder dimensions, such that the highest value (visually) is on the left and\r\n// the lowest on the right. Visual values are determined by the data values in\r\n// the given row.\r\nconst reorder = (config, pc, xscale) => rowdata => {\r\n  const firstDim = pc.getOrderedDimensionKeys()[0];\r\n\r\n  pc.sortDimensionsByRowData(rowdata);\r\n  // NOTE: this is relatively cheap given that:\r\n  // number of dimensions < number of data items\r\n  // Thus we check equality of order to prevent rerendering when this is the case.\r\n  const reordered = firstDim !== pc.getOrderedDimensionKeys()[0];\r\n\r\n  if (reordered) {\r\n    xscale.domain(pc.getOrderedDimensionKeys());\r\n    const highlighted = config.highlighted.slice(0);\r\n    pc.unhighlight();\r\n\r\n    const g = pc.g();\r\n    g.transition()\r\n      .duration(1500)\r\n      .attr('transform', d => 'translate(' + xscale(d) + ')');\r\n    pc.render();\r\n\r\n    // pc.highlight() does not check whether highlighted is length zero, so we do that here.\r\n    if (highlighted.length !== 0) {\r\n      pc.highlight(highlighted);\r\n    }\r\n  }\r\n};\r\n\r\nexport default reorder;\r\n","const sortDimensions = (config, position) => () => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort(\r\n    (a, b) => (position(a) - position(b) === 0 ? 1 : position(a) - position(b))\r\n  );\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensions;\r\n","const sortDimensionsByRowData = config => rowdata => {\r\n  const copy = Object.assign({}, config.dimensions);\r\n  const positionSortedKeys = Object.keys(config.dimensions).sort((a, b) => {\r\n    const pixelDifference =\r\n      config.dimensions[a].yscale(rowdata[a]) -\r\n      config.dimensions[b].yscale(rowdata[b]);\r\n\r\n    // Array.sort is not necessarily stable, this means that if pixelDifference is zero\r\n    // the ordering of dimensions might change unexpectedly. This is solved by sorting on\r\n    // variable name in that case.\r\n    return pixelDifference === 0 ? a.localeCompare(b) : pixelDifference;\r\n  });\r\n  config.dimensions = {};\r\n  positionSortedKeys.forEach((p, i) => {\r\n    config.dimensions[p] = copy[p];\r\n    config.dimensions[p].index = i;\r\n  });\r\n};\r\n\r\nexport default sortDimensionsByRowData;\r\n","const isBrushed = (config, brushGroup) => {\r\n  if (config.brushed && config.brushed.length !== config.data.length)\r\n    return true;\r\n\r\n  const object = brushGroup.currentMode().brushState();\r\n\r\n  for (let key in object) {\r\n    if (object.hasOwnProperty(key)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default isBrushed;\r\n","import isBrushed from '../util/isBrushed';\r\nimport w from '../util/width';\r\nimport h from '../util/height';\r\n\r\nconst clear = (config, pc, ctx, brushGroup) =>\r\n  function(layer) {\r\n    ctx[layer].clearRect(0, 0, w(config) + 2, h(config) + 2);\r\n\r\n    // This will make sure that the foreground items are transparent\r\n    // without the need for changing the opacity style of the foreground canvas\r\n    // as this would stop the css styling from working\r\n    if (layer === 'brushed' && isBrushed(config, brushGroup)) {\r\n      ctx.brushed.fillStyle = pc.selection.style('background-color');\r\n      ctx.brushed.globalAlpha = 1 - config.alphaOnBrushed;\r\n      ctx.brushed.fillRect(0, 0, w(config) + 2, h(config) + 2);\r\n      ctx.brushed.globalAlpha = config.alpha;\r\n    }\r\n    return this;\r\n  };\r\n\r\nexport default clear;\r\n","const computeCentroids = (config, position, row) => {\r\n  const centroids = [];\r\n\r\n  const p = Object.keys(config.dimensions);\r\n  const cols = p.length;\r\n  const a = 0.5; // center between axes\r\n  for (let i = 0; i < cols; ++i) {\r\n    // centroids on 'real' axes\r\n    const x = position(p[i]);\r\n    const y = config.dimensions[p[i]].yscale(row[p[i]]);\r\n    centroids.push($V([x, y]));\r\n\r\n    // centroids on 'virtual' axes\r\n    if (i < cols - 1) {\r\n      const cx = x + a * (position(p[i + 1]) - x);\r\n      let cy = y + a * (config.dimensions[p[i + 1]].yscale(row[p[i + 1]]) - y);\r\n      if (config.bundleDimension !== null) {\r\n        const leftCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i]);\r\n        const rightCentroid = config.clusterCentroids\r\n          .get(\r\n            config.dimensions[config.bundleDimension].yscale(\r\n              row[config.bundleDimension]\r\n            )\r\n          )\r\n          .get(p[i + 1]);\r\n        let centroid = 0.5 * (leftCentroid + rightCentroid);\r\n        cy = centroid + (1 - config.bundlingStrength) * (cy - centroid);\r\n      }\r\n      centroids.push($V([cx, cy]));\r\n    }\r\n  }\r\n\r\n  return centroids;\r\n};\r\n\r\nexport default computeCentroids;\r\n","const computeControlPoints = (smoothness, centroids) => {\r\n  const cols = centroids.length;\r\n  const a = smoothness;\r\n  const cps = [];\r\n\r\n  cps.push(centroids[0]);\r\n  cps.push(\r\n    $V([\r\n      centroids[0].e(1) + a * 2 * (centroids[1].e(1) - centroids[0].e(1)),\r\n      centroids[0].e(2),\r\n    ])\r\n  );\r\n  for (let col = 1; col < cols - 1; ++col) {\r\n    let mid = centroids[col];\r\n    let left = centroids[col - 1];\r\n    let right = centroids[col + 1];\r\n\r\n    let diff = left.subtract(right);\r\n    cps.push(mid.add(diff.x(a)));\r\n    cps.push(mid);\r\n    cps.push(mid.subtract(diff.x(a)));\r\n  }\r\n  cps.push(\r\n    $V([\r\n      centroids[cols - 1].e(1) +\r\n        a * 2 * (centroids[cols - 2].e(1) - centroids[cols - 1].e(1)),\r\n      centroids[cols - 1].e(2),\r\n    ])\r\n  );\r\n  cps.push(centroids[cols - 1]);\r\n\r\n  return cps;\r\n};\r\n\r\nexport default computeControlPoints;\r\n","// draw single cubic bezier curve\r\nimport computeCentroids from './computeCentroids';\r\nimport computeControlPoints from './computeControlPoints';\r\nimport h from './height';\r\n\r\nconst singleCurve = (config, position, d, ctx) => {\r\n  const centroids = computeCentroids(config, position, d);\r\n  const cps = computeControlPoints(config.smoothness, centroids);\r\n\r\n  ctx.moveTo(cps[0].e(1), cps[0].e(2));\r\n\r\n  for (let i = 1; i < cps.length; i += 3) {\r\n    if (config.showControlPoints) {\r\n      for (let j = 0; j < 3; j++) {\r\n        ctx.fillRect(cps[i + j].e(1), cps[i + j].e(2), 2, 2);\r\n      }\r\n    }\r\n    ctx.bezierCurveTo(\r\n      cps[i].e(1),\r\n      cps[i].e(2),\r\n      cps[i + 1].e(1),\r\n      cps[i + 1].e(2),\r\n      cps[i + 2].e(1),\r\n      cps[i + 2].e(2)\r\n    );\r\n  }\r\n};\r\n\r\n// returns the y-position just beyond the separating null value line\r\nconst getNullPosition = config => {\r\n  if (config.nullValueSeparator === 'bottom') {\r\n    return h(config) + 1;\r\n  } else if (config.nullValueSeparator === 'top') {\r\n    return 1;\r\n  } else {\r\n    console.log(\r\n      \"A value is NULL, but nullValueSeparator is not set; set it to 'bottom' or 'top'.\"\r\n    );\r\n  }\r\n  return h(config) + 1;\r\n};\r\n\r\nconst singlePath = (config, position, d, ctx) => {\r\n  Object.keys(config.dimensions)\r\n    .map(p => [\r\n      position(p),\r\n      d[p] === undefined\r\n        ? getNullPosition(config)\r\n        : config.dimensions[p].yscale(d[p]),\r\n    ])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .forEach((p, i) => {\r\n      i === 0 ? ctx.moveTo(p[0], p[1]) : ctx.lineTo(p[0], p[1]);\r\n    });\r\n};\r\n\r\n// draw single polyline\r\nconst colorPath = (config, position, d, ctx) => {\r\n  ctx.beginPath();\r\n  if (\r\n    (config.bundleDimension !== null && config.bundlingStrength > 0) ||\r\n    config.smoothness > 0\r\n  ) {\r\n    singleCurve(config, position, d, ctx);\r\n  } else {\r\n    singlePath(config, position, d, ctx);\r\n  }\r\n  ctx.stroke();\r\n};\r\n\r\nexport default colorPath;\r\n","const _functor = v => (typeof v === 'function' ? v : () => v);\r\n\r\nexport default _functor;\r\n","import isBrushed from '../util/isBrushed';\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathBrushed = (config, ctx, position) => (d, i) => {\r\n  if (config.brushedColor !== null) {\r\n    ctx.brushed.strokeStyle = functor(config.brushedColor)(d, i);\r\n  } else {\r\n    ctx.brushed.strokeStyle = functor(config.color)(d, i);\r\n  }\r\n  return colorPath(config, position, d, ctx.brushed);\r\n};\r\n\r\nconst renderBrushedDefault = (config, ctx, position, pc, brushGroup) => () => {\r\n  pc.clear('brushed');\r\n\r\n  if (isBrushed(config, brushGroup) && config.brushed !== false) {\r\n    config.brushed.forEach(pathBrushed(config, ctx, position));\r\n  }\r\n};\r\n\r\nconst renderBrushedQueue = (config, brushGroup, brushedQueue) => () => {\r\n  if (isBrushed(config, brushGroup)) {\r\n    brushedQueue(config.brushed);\r\n  } else {\r\n    brushedQueue([]); // This is needed to clear the currently brushed items\r\n  }\r\n};\r\n\r\nconst renderBrushed = (config, pc, events) =>\r\n  function() {\r\n    if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n\r\n    pc.renderBrushed[config.mode]();\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport { pathBrushed, renderBrushed, renderBrushedDefault, renderBrushedQueue };\r\n","import { select, selectAll } from 'd3-selection';\r\n\r\nconst brushReset = config =>\r\n  function(dimension) {\r\n    const brushesToKeep = [];\r\n    for (let j = 0; j < config.brushes.length; j++) {\r\n      if (config.brushes[j].data !== dimension) {\r\n        brushesToKeep.push(config.brushes[j]);\r\n      }\r\n    }\r\n\r\n    config.brushes = brushesToKeep;\r\n    config.brushed = false;\r\n\r\n    if (pc.g() !== undefined) {\r\n      const nodes = pc\r\n        .g()\r\n        .selectAll('.brush')\r\n        .nodes();\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].__data__ === dimension) {\r\n          // remove all dummy brushes for this axis or the real brush\r\n          select(select(nodes[i]).nodes()[0].parentNode)\r\n            .selectAll('.dummy')\r\n            .remove();\r\n          config.dimensions[dimension].brush.move(select(nodes[i], null));\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\nexport default brushReset;\r\n","// a better \"typeof\" from this post: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable\r\nconst toType = v => {\r\n  return {}.toString\r\n    .call(v)\r\n    .match(/\\s([a-zA-Z]+)/)[1]\r\n    .toLowerCase();\r\n};\r\n\r\nexport default toType;\r\n","// this descriptive text should live with other introspective methods\r\nconst toString = config => () =>\r\n  'Parallel Coordinates: ' +\r\n  Object.keys(config.dimensions).length +\r\n  ' dimensions (' +\r\n  Object.keys(config.data[0]).length +\r\n  ' total) , ' +\r\n  config.data.length +\r\n  ' rows';\r\n\r\nexport default toString;\r\n","// pairs of adjacent dimensions\r\nconst adjacentPairs = arr => {\r\n  let ret = [];\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    ret.push([arr[i], arr[i + 1]]);\r\n  }\r\n  return ret;\r\n};\r\n\r\nexport default adjacentPairs;\r\n","import { selectAll } from 'd3-selection';\r\n\r\nimport colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathHighlight = (config, ctx, position) => (d, i) => {\r\n  ctx.highlight.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.highlight);\r\n};\r\n\r\n// highlight an array of data\r\nconst highlight = (config, pc, canvas, events, ctx, position) =>\r\n  function(data = null) {\r\n    if (data === null) {\r\n      return config.highlighted;\r\n    }\r\n\r\n    config.highlighted = data;\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', true);\r\n    data.forEach(pathHighlight(config, ctx, position));\r\n    events.call('highlight', this, data);\r\n    return this;\r\n  };\r\n\r\nexport default highlight;\r\n","import { selectAll } from 'd3-selection';\r\n\r\n// clear highlighting\r\nconst unhighlight = (config, pc, canvas) =>\r\n  function() {\r\n    config.highlighted = [];\r\n    pc.clear('highlight');\r\n    selectAll([canvas.foreground, canvas.brushed]).classed('faded', false);\r\n    return this;\r\n  };\r\n\r\nexport default unhighlight;\r\n","const removeAxes = pc =>\r\n  function() {\r\n    pc._g.remove();\r\n\r\n    delete pc._g;\r\n    return this;\r\n  };\r\n\r\nexport default removeAxes;\r\n","/**\r\n * Renders the polylines.\r\n * If no dimensions have been specified, it will attempt to detect quantitative\r\n * dimensions based on the first data entry. If scales haven't been set, it will\r\n * autoscale based on the extent for each dimension.\r\n *\r\n * @param config\r\n * @param pc\r\n * @param events\r\n * @returns {Function}\r\n */\r\nconst render = (config, pc, events) =>\r\n  function() {\r\n    // try to autodetect dimensions and create scales\r\n    if (!Object.keys(config.dimensions).length) {\r\n      pc.detectDimensions();\r\n    }\r\n    pc.autoscale();\r\n\r\n    pc.render[config.mode]();\r\n\r\n    events.call('render', this);\r\n    return this;\r\n  };\r\n\r\nexport default render;\r\n","import colorPath from '../util/colorPath';\r\nimport functor from '../util/functor';\r\n\r\nconst pathForeground = (config, ctx, position) => (d, i) => {\r\n  ctx.foreground.strokeStyle = functor(config.color)(d, i);\r\n  return colorPath(config, position, d, ctx.foreground);\r\n};\r\n\r\nconst renderDefault = (config, pc, ctx, position) => () => {\r\n  pc.clear('foreground');\r\n  pc.clear('highlight');\r\n\r\n  pc.renderBrushed.default();\r\n\r\n  config.data.forEach(pathForeground(config, ctx, position));\r\n};\r\n\r\nconst renderDefaultQueue = (config, pc, foregroundQueue) => () => {\r\n  pc.renderBrushed.queue();\r\n  foregroundQueue(config.data);\r\n};\r\n\r\nexport default renderDefault;\r\n\r\nexport { pathForeground, renderDefaultQueue };\r\n","import toType from './toType';\r\n\r\n// try to coerce to number before returning type\r\nconst toTypeCoerceNumbers = v =>\r\n  parseFloat(v) == v && v !== null ? 'number' : toType(v);\r\n\r\nexport default toTypeCoerceNumbers;\r\n","import toTypeCoerceNumbers from './toTypeCoerceNumbers';\r\n\r\n// attempt to determine types of each dimension based on first row of data\r\nconst detectDimensionTypes = data =>\r\n  Object.keys(data[0]).reduce((acc, cur) => {\r\n    const key = isNaN(Number(cur)) ? cur : parseInt(cur);\r\n    acc[key] = toTypeCoerceNumbers(data[0][cur]);\r\n\r\n    return acc;\r\n  }, {});\r\n\r\nexport default detectDimensionTypes;\r\n","import { ascending } from 'd3-array';\r\n\r\nconst getOrderedDimensionKeys = config => () =>\r\n  Object.keys(config.dimensions).sort((x, y) =>\r\n    ascending(config.dimensions[x].index, config.dimensions[y].index)\r\n  );\r\n\r\nexport default getOrderedDimensionKeys;\r\n","const interactive = flags =>\r\n  function() {\r\n    flags.interactive = true;\r\n    return this;\r\n  };\r\n\r\nexport default interactive;\r\n","const shadows = (flags, pc) =>\r\n  function() {\r\n    flags.shadows = true;\r\n    pc.alphaOnBrushed(0.1);\r\n    pc.render();\r\n    return this;\r\n  };\r\n\r\nexport default shadows;\r\n","import { select } from 'd3-selection';\r\n\r\n/**\r\n * Setup a new parallel coordinates chart.\r\n *\r\n * @param config\r\n * @param canvas\r\n * @param ctx\r\n * @returns {pc} a parcoords closure\r\n */\r\nconst init = (config, canvas, ctx) => {\r\n  /**\r\n   * Create the chart within a container. The selector can also be a d3 selection.\r\n   *\r\n   * @param selection a d3 selection\r\n   * @returns {pc} instance for chained api\r\n   */\r\n  const pc = function(selection) {\r\n    selection = pc.selection = select(selection);\r\n\r\n    config.width = selection.node().clientWidth;\r\n    config.height = selection.node().clientHeight;\r\n    // canvas data layers\r\n    ['marks', 'foreground', 'brushed', 'highlight'].forEach(layer => {\r\n      canvas[layer] = selection\r\n        .append('canvas')\r\n        .attr('class', layer)\r\n        .node();\r\n      ctx[layer] = canvas[layer].getContext('2d');\r\n    });\r\n\r\n    // svg tick and brush layers\r\n    pc.svg = selection\r\n      .append('svg')\r\n      .attr('width', config.width)\r\n      .attr('height', config.height)\r\n      .style('font', '14px sans-serif')\r\n      .style('position', 'absolute')\r\n\r\n      .append('svg:g')\r\n      .attr(\r\n        'transform',\r\n        'translate(' + config.margin.left + ',' + config.margin.top + ')'\r\n      );\r\n    // for chained api\r\n    return pc;\r\n  };\r\n\r\n  // for partial-application style programming\r\n  return pc;\r\n};\r\n\r\nexport default init;\r\n","const flip = config =>\r\n  function(d) {\r\n    //__.dimensions[d].yscale.domain().reverse();                               // does not work\r\n    config.dimensions[d].yscale.domain(\r\n      config.dimensions[d].yscale.domain().reverse()\r\n    ); // works\r\n\r\n    return this;\r\n  };\r\n\r\nexport default flip;\r\n","const detectDimensions = pc =>\r\n  function() {\r\n    pc.dimensions(pc.applyDimensionDefaults());\r\n    return this;\r\n  };\r\n\r\nexport default detectDimensions;\r\n","const scale = (config, pc) =>\r\n  function(d, domain) {\r\n    config.dimensions[d].yscale.domain(domain);\r\n    pc.render.default();\r\n    pc.updateAxes();\r\n\r\n    return this;\r\n  };\r\n\r\nexport default scale;\r\n","const DefaultConfig = {\r\n  data: [],\r\n  highlighted: [],\r\n  dimensions: {},\r\n  dimensionTitleRotation: 0,\r\n  brushes: [],\r\n  brushed: false,\r\n  brushedColor: null,\r\n  alphaOnBrushed: 0.0,\r\n  mode: 'default',\r\n  rate: 20,\r\n  width: 600,\r\n  height: 300,\r\n  margin: { top: 24, right: 20, bottom: 12, left: 20 },\r\n  nullValueSeparator: 'undefined', // set to \"top\" or \"bottom\"\r\n  nullValueSeparatorPadding: { top: 8, right: 0, bottom: 8, left: 0 },\r\n  color: '#069',\r\n  composite: 'source-over',\r\n  alpha: 0.7,\r\n  bundlingStrength: 0.5,\r\n  bundleDimension: null,\r\n  smoothness: 0.0,\r\n  showControlPoints: false,\r\n  hideAxis: [],\r\n  flipAxes: [],\r\n  animationTime: 1100, // How long it takes to flip the axis when you double click\r\n  rotateLabels: false,\r\n};\r\n\r\nexport default DefaultConfig;\r\n","import { entries, keys } from 'd3-collection';\r\nimport { axisLeft } from 'd3-axis';\r\nimport { dispatch } from 'd3-dispatch';\r\nimport { scalePoint } from 'd3-scale';\r\n\r\nimport DefaultConfig from './defaultConfig';\r\n\r\nconst initState = userConfig => {\r\n  const config = Object.assign({}, DefaultConfig, userConfig);\r\n\r\n  if (userConfig && userConfig.dimensionTitles) {\r\n    console.warn(\r\n      'dimensionTitles passed in userConfig is deprecated. Add title to dimension object.'\r\n    );\r\n    entries(userConfig.dimensionTitles).forEach(d => {\r\n      if (config.dimensions[d.key]) {\r\n        config.dimensions[d.key].title = config.dimensions[d.key].title\r\n          ? config.dimensions[d.key].title\r\n          : d.value;\r\n      } else {\r\n        config.dimensions[d.key] = {\r\n          title: d.value,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  const eventTypes = [\r\n    'render',\r\n    'resize',\r\n    'highlight',\r\n    'brush',\r\n    'brushend',\r\n    'brushstart',\r\n    'axesreorder',\r\n  ].concat(keys(config));\r\n\r\n  const events = dispatch.apply(this, eventTypes),\r\n    flags = {\r\n      brushable: false,\r\n      reorderable: false,\r\n      axes: false,\r\n      interactive: false,\r\n      debug: false,\r\n    },\r\n    xscale = scalePoint(),\r\n    dragging = {},\r\n    axis = axisLeft().ticks(5),\r\n    ctx = {},\r\n    canvas = {};\r\n\r\n  const brush = {\r\n    modes: {\r\n      None: {\r\n        install: function(pc) {}, // Nothing to be done.\r\n        uninstall: function(pc) {}, // Nothing to be done.\r\n        selected: function() {\r\n          return [];\r\n        }, // Nothing to return\r\n        brushState: function() {\r\n          return {};\r\n        },\r\n      },\r\n    },\r\n    mode: 'None',\r\n    predicate: 'AND',\r\n    currentMode: function() {\r\n      return this.modes[this.mode];\r\n    },\r\n  };\r\n\r\n  return {\r\n    config,\r\n    events,\r\n    eventTypes,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  };\r\n};\r\n\r\nexport default initState;\r\n","const computeClusterCentroids = (config, d) => {\r\n  const clusterCentroids = new Map();\r\n  const clusterCounts = new Map();\r\n  // determine clusterCounts\r\n  config.data.forEach(function(row) {\r\n    let scaled = config.dimensions[d].yscale(row[d]);\r\n    if (!clusterCounts.has(scaled)) {\r\n      clusterCounts.set(scaled, 0);\r\n    }\r\n    let count = clusterCounts.get(scaled);\r\n    clusterCounts.set(scaled, count + 1);\r\n  });\r\n\r\n  config.data.forEach(function(row) {\r\n    Object.keys(config.dimensions).map(p => {\r\n      let scaled = config.dimensions[d].yscale(row[d]);\r\n      if (!clusterCentroids.has(scaled)) {\r\n        const _map = new Map();\r\n        clusterCentroids.set(scaled, _map);\r\n      }\r\n      if (!clusterCentroids.get(scaled).has(p)) {\r\n        clusterCentroids.get(scaled).set(p, 0);\r\n      }\r\n      let value = clusterCentroids.get(scaled).get(p);\r\n      value += config.dimensions[p].yscale(row[p]) / clusterCounts.get(scaled);\r\n      clusterCentroids.get(scaled).set(p, value);\r\n    });\r\n  });\r\n\r\n  return clusterCentroids;\r\n};\r\n\r\nexport default computeClusterCentroids;\r\n","// side effects for setters\r\nimport { dispatch } from 'd3-dispatch';\r\nimport computeClusterCentroids from '../util/computeClusterCentroids';\r\nimport flipAxisAndUpdatePCP from '../util/flipAxisAndUpdatePCP';\r\n\r\nconst without = (arr, items) => {\r\n  items.forEach(el => {\r\n    delete arr[el];\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst sideEffects = (\r\n  config,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  foregroundQueue\r\n) =>\r\n  dispatch\r\n    .apply(this, Object.keys(config))\r\n    .on('composite', d => {\r\n      ctx.foreground.globalCompositeOperation = d.value;\r\n      ctx.brushed.globalCompositeOperation = d.value;\r\n    })\r\n    .on('alpha', d => {\r\n      ctx.foreground.globalAlpha = d.value;\r\n      ctx.brushed.globalAlpha = d.value;\r\n    })\r\n    .on('brushedColor', d => {\r\n      ctx.brushed.strokeStyle = d.value;\r\n    })\r\n    .on('width', d => pc.resize())\r\n    .on('height', d => pc.resize())\r\n    .on('margin', d => pc.resize())\r\n    .on('rate', d => {\r\n      brushedQueue.rate(d.value);\r\n      foregroundQueue.rate(d.value);\r\n    })\r\n    .on('dimensions', d => {\r\n      config.dimensions = pc.applyDimensionDefaults(Object.keys(d.value));\r\n      xscale.domain(pc.getOrderedDimensionKeys());\r\n      pc.sortDimensions();\r\n      if (flags.interactive) {\r\n        pc.render().updateAxes();\r\n      }\r\n    })\r\n    .on('bundleDimension', d => {\r\n      if (!Object.keys(config.dimensions).length) pc.detectDimensions();\r\n      pc.autoscale();\r\n      if (typeof d.value === 'number') {\r\n        if (d.value < Object.keys(config.dimensions).length) {\r\n          config.bundleDimension = config.dimensions[d.value];\r\n        } else if (d.value < config.hideAxis.length) {\r\n          config.bundleDimension = config.hideAxis[d.value];\r\n        }\r\n      } else {\r\n        config.bundleDimension = d.value;\r\n      }\r\n\r\n      config.clusterCentroids = computeClusterCentroids(\r\n        config,\r\n        config.bundleDimension\r\n      );\r\n      if (flags.interactive) {\r\n        pc.render();\r\n      }\r\n    })\r\n    .on('hideAxis', d => {\r\n      pc.dimensions(pc.applyDimensionDefaults());\r\n      pc.dimensions(without(config.dimensions, d.value));\r\n    })\r\n    .on('flipAxes', d => {\r\n      if (d.value && d.value.length) {\r\n        d.value.forEach(function(axis) {\r\n          flipAxisAndUpdatePCP(config, pc, axis);\r\n        });\r\n        pc.updateAxes(0);\r\n      }\r\n    });\r\n\r\nexport default sideEffects;\r\n","const getset = (obj, state, events, side_effects) => {\r\n  Object.keys(state).forEach(function(key) {\r\n    obj[key] = function(x) {\r\n      if (!arguments.length) {\r\n        return state[key];\r\n      }\r\n      if (\r\n        key === 'dimensions' &&\r\n        Object.prototype.toString.call(x) === '[object Array]'\r\n      ) {\r\n        console.warn('pc.dimensions([]) is deprecated, use pc.dimensions({})');\r\n        x = obj.applyDimensionDefaults(x);\r\n      }\r\n      let old = state[key];\r\n      state[key] = x;\r\n      side_effects.call(key, obj, { value: x, previous: old });\r\n      events.call(key, obj, { value: x, previous: old });\r\n      return obj;\r\n    };\r\n  });\r\n};\r\n\r\nexport default getset;\r\n","// side effects for setters\r\nimport sideEffects from './state/sideEffects';\r\nimport getset from './util/getset';\r\n\r\nconst d3_rebind = (target, source, method) =>\r\n  function() {\r\n    const value = method.apply(source, arguments);\r\n    return value === source ? target : value;\r\n  };\r\n\r\nconst _rebind = (target, source, method) => {\r\n  target[method] = d3_rebind(target, source, source[method]);\r\n  return target;\r\n};\r\n\r\nconst bindEvents = (\r\n  __,\r\n  ctx,\r\n  pc,\r\n  xscale,\r\n  flags,\r\n  brushedQueue,\r\n  foregroundQueue,\r\n  events,\r\n  axis\r\n) => {\r\n  const side_effects = sideEffects(\r\n    __,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    foregroundQueue\r\n  );\r\n\r\n  // create getter/setters\r\n  getset(pc, __, events, side_effects);\r\n\r\n  // expose events\r\n  // getter/setter with event firing\r\n  _rebind(pc, events, 'on');\r\n\r\n  _rebind(\r\n    pc,\r\n    axis,\r\n    'ticks',\r\n    'orient',\r\n    'tickValues',\r\n    'tickSubdivide',\r\n    'tickSize',\r\n    'tickPadding',\r\n    'tickFormat'\r\n  );\r\n};\r\n\r\nexport default bindEvents;\r\n","// misc\r\nimport renderQueue from './util/renderQueue';\r\nimport w from './util/width';\r\n\r\n// brush\r\nimport install1DAxes from './brush/1d';\r\nimport install1DAxesMulti from './brush/1d-multi';\r\nimport install2DStrums from './brush/strums';\r\nimport installAngularBrush from './brush/angular';\r\n\r\n// api\r\nimport intersection from './api/intersection';\r\nimport mergeParcoords from './api/mergeParcoords';\r\nimport selected from './api/selected';\r\nimport brushMode from './api/brushMode';\r\nimport updateAxes from './api/updateAxes';\r\nimport autoscale from './api/autoscale';\r\nimport brushable from './api/brushable';\r\nimport commonScale from './api/commonScale';\r\nimport computeRealCentroids from './api/computeRealCentroids';\r\nimport applyDimensionDefaults from './api/applyDimensionDefaults';\r\nimport createAxes from './api/createAxes';\r\nimport axisDots from './api/axisDots';\r\nimport applyAxisConfig from './api/applyAxisConfig';\r\nimport reorderable from './api/reorderable';\r\nimport resize from './api/resize';\r\nimport reorder from './api/reorder';\r\nimport sortDimensions from './api/sortDimensions';\r\nimport sortDimensionsByRowData from './api/sortDimensionsByRowData';\r\nimport clear from './api/clear';\r\nimport {\r\n  pathBrushed,\r\n  renderBrushed,\r\n  renderBrushedDefault,\r\n  renderBrushedQueue,\r\n} from './api/renderBrushed';\r\nimport brushReset from './api/brushReset';\r\nimport toType from './api/toType';\r\nimport toString from './api/toString';\r\nimport adjacentPairs from './api/adjacentPairs';\r\nimport highlight from './api/highlight';\r\nimport unhighlight from './api/unhighlight';\r\nimport removeAxes from './api/removeAxes';\r\nimport render from './api/render';\r\nimport renderDefault, {\r\n  pathForeground,\r\n  renderDefaultQueue,\r\n} from './api/renderDefault';\r\nimport toTypeCoerceNumbers from './api/toTypeCoerceNumbers';\r\nimport detectDimensionTypes from './api/detectDimensionTypes';\r\nimport getOrderedDimensionKeys from './api/getOrderedDimensionKeys';\r\nimport interactive from './api/interactive';\r\nimport shadows from './api/shadows';\r\nimport init from './api/init';\r\nimport flip from './api/flip';\r\nimport detectDimensions from './api/detectDimensions';\r\nimport scale from './api/scale';\r\n\r\nimport { version } from '../package.json';\r\nimport initState from './state';\r\nimport bindEvents from './bindEvents';\r\n\r\n//css\r\nimport './parallel-coordinates.css';\r\n\r\nconst ParCoords = userConfig => {\r\n  const state = initState(userConfig);\r\n  const {\r\n    config,\r\n    events,\r\n    flags,\r\n    xscale,\r\n    dragging,\r\n    axis,\r\n    ctx,\r\n    canvas,\r\n    brush,\r\n  } = state;\r\n\r\n  const pc = init(config, canvas, ctx);\r\n\r\n  const position = d => {\r\n    if (xscale.range().length === 0) {\r\n      xscale.range([0, w(config)], 1);\r\n    }\r\n    return dragging[d] == null ? xscale(d) : dragging[d];\r\n  };\r\n\r\n  const brushedQueue = renderQueue(pathBrushed(config, ctx, position))\r\n    .rate(50)\r\n    .clear(() => pc.clear('brushed'));\r\n\r\n  const foregroundQueue = renderQueue(pathForeground(config, ctx, position))\r\n    .rate(50)\r\n    .clear(function() {\r\n      pc.clear('foreground');\r\n      pc.clear('highlight');\r\n    });\r\n\r\n  bindEvents(\r\n    config,\r\n    ctx,\r\n    pc,\r\n    xscale,\r\n    flags,\r\n    brushedQueue,\r\n    foregroundQueue,\r\n    events,\r\n    axis\r\n  );\r\n\r\n  // expose the state of the chart\r\n  pc.state = config;\r\n  pc.flags = flags;\r\n\r\n  pc.autoscale = autoscale(config, pc, xscale, ctx);\r\n  pc.scale = scale(config, pc);\r\n  pc.flip = flip(config);\r\n  pc.commonScale = commonScale(config, pc);\r\n  pc.detectDimensions = detectDimensions(pc);\r\n  // attempt to determine types of each dimension based on first row of data\r\n  pc.detectDimensionTypes = detectDimensionTypes;\r\n  pc.applyDimensionDefaults = applyDimensionDefaults(config, pc);\r\n  pc.getOrderedDimensionKeys = getOrderedDimensionKeys(config);\r\n\r\n  //Renders the polylines.\r\n  pc.render = render(config, pc, events);\r\n  pc.renderBrushed = renderBrushed(config, pc, events);\r\n  pc.render.default = renderDefault(config, pc, ctx, position);\r\n  pc.render.queue = renderDefaultQueue(config, pc, foregroundQueue);\r\n  pc.renderBrushed.default = renderBrushedDefault(\r\n    config,\r\n    ctx,\r\n    position,\r\n    pc,\r\n    brush\r\n  );\r\n  pc.renderBrushed.queue = renderBrushedQueue(config, brush, brushedQueue);\r\n\r\n  pc.compute_real_centroids = computeRealCentroids(config.dimensions, position);\r\n  pc.shadows = shadows(flags, pc);\r\n  pc.axisDots = axisDots(config, pc, position);\r\n  pc.clear = clear(config, pc, ctx, brush);\r\n  pc.createAxes = createAxes(config, pc, xscale, flags, axis);\r\n  pc.removeAxes = removeAxes(pc);\r\n  pc.updateAxes = updateAxes(config, pc, position, axis, flags);\r\n  pc.applyAxisConfig = applyAxisConfig;\r\n  pc.brushable = brushable(config, pc, flags);\r\n  pc.brushReset = brushReset(config);\r\n  pc.selected = selected(config, pc);\r\n  pc.reorderable = reorderable(config, pc, xscale, position, dragging, flags);\r\n\r\n  // Reorder dimensions, such that the highest value (visually) is on the left and\r\n  // the lowest on the right. Visual values are determined by the data values in\r\n  // the given row.\r\n  pc.reorder = reorder(config, pc, xscale);\r\n  pc.sortDimensionsByRowData = sortDimensionsByRowData(config);\r\n  pc.sortDimensions = sortDimensions(config, position);\r\n\r\n  // pairs of adjacent dimensions\r\n  pc.adjacent_pairs = adjacentPairs;\r\n  pc.interactive = interactive(flags);\r\n\r\n  // expose internal state\r\n  pc.xscale = xscale;\r\n  pc.ctx = ctx;\r\n  pc.canvas = canvas;\r\n  pc.g = () => pc._g;\r\n\r\n  // rescale for height, width and margins\r\n  // TODO currently assumes chart is brushable, and destroys old brushes\r\n  pc.resize = resize(config, pc, flags, events);\r\n\r\n  // highlight an array of data\r\n  pc.highlight = highlight(config, pc, canvas, events, ctx, position);\r\n  // clear highlighting\r\n  pc.unhighlight = unhighlight(config, pc, canvas);\r\n\r\n  // calculate 2d intersection of line a->b with line c->d\r\n  // points are objects with x and y properties\r\n  pc.intersection = intersection;\r\n\r\n  // Merges the canvases and SVG elements into one canvas element which is then passed into the callback\r\n  // (so you can choose to save it to disk, etc.)\r\n  pc.mergeParcoords = mergeParcoords(pc);\r\n  pc.brushModes = () => Object.getOwnPropertyNames(brush.modes);\r\n  pc.brushMode = brushMode(brush, config, pc);\r\n\r\n  // install brushes\r\n  install1DAxes(brush, config, pc, events);\r\n  install2DStrums(brush, config, pc, events, xscale);\r\n  installAngularBrush(brush, config, pc, events, xscale);\r\n  install1DAxesMulti(brush, config, pc, events);\r\n\r\n  pc.version = version;\r\n  // this descriptive text should live with other introspective methods\r\n  pc.toString = toString(config);\r\n  pc.toType = toType;\r\n  // try to coerce to number before returning type\r\n  pc.toTypeCoerceNumbers = toTypeCoerceNumbers;\r\n\r\n  return pc;\r\n};\r\n\r\nexport default ParCoords;\r\n"],"names":["renderQueue","func","_queue","rq","data","render","valid","invalidate","doFrame","chunk","splice","_rate","map","slice","add","concat","rate","value","arguments","length","remaining","clear","_invalidate","w","config","width","margin","right","left","brushExtents","state","pc","brushes","brushNodes","extents","Object","keys","dimensions","reduce","acc","cur","brush","undefined","brushSelection","extent","brushSelections","g","selectAll","each","d","select","forEach","dim","yExtent","yscale","call","move","reverse","renderBrushed","brushReset","dimension","brushed","event","selected","brushGroup","is_brushed","p","actives","filter","_brushRange","invert","within","bandwidth","predicate","every","type","some","Error","brushPredicate","brushUpdated","events","args","newSelection","brushFor","axis","_selector","brushRangeMax","range","_brush","brushY","convertBrushArguments","args_array","Array","prototype","selection_raw","selection_scaled","on","sourceEvent","stopPropagation","node","install","createAxes","append","attr","style","uninstall","remove","install1DAxes","modes","drawBrushes","selector","id","enter","insert","indexOf","b","brushObject","exit","pos","axisBrushes","i","document","getElementById","dimExt","e","newBrush","push","lastBrushID","lastBrush","selection","toString","yExtents","_bs","j","f","k","ext","axisBrush","_this","install1DMultiAxes","strumRect","containmentTest","strum","p1","minX","p2","m1","b1","m2","b2","x","y","y1","y2","Math","min","max","crossesStrum","strums","test","d1","dims","d2","point","ids","getOwnPropertyNames","isNaN","crossTest","removeStrum","active","svg","onDragEnd","drawStrum","activePoint","_svg","points","_line","circles","_drag","drag","ev","maxX","minY","maxY","onDrag","top","h","height","bottom","dimensionsForPoint","xscale","getOrderedDimensionKeys","onDragStart","mouse","consecutive","first","second","install2DStrums","hypothenuse","a","sqrt","signedAngle","angle","PI","startAngle","arc","endAngle","tmp","arcs","c","asin","outerRadius","p3","_path","d3Arc","innerRadius","sAngle","uAngle","installAngularBrush","intersection","mergeParcoords","devicePixelRatio","window","mergedCanvas","createElement","canvas","foreground","clientWidth","clientHeight","context","getContext","fillStyle","fillRect","key","drawImage","DOMURL","URL","webkitURL","serializer","XMLSerializer","svgStr","serializeToString","src","btoa","img","Image","onload","callback","ranges","nodes","__data__","values","ranger","domain","includes","flipAxes","unshift","ii","dimRange","dimDomain","category","categoryIndex","categoryRangeValue","multiBrushData","idx","filtered","z","String","toUpperCase","currentMode","brushMode","mode","brushModes","dimensionLabels","title","flipAxisAndUpdatePCP","flip","parentElement","transition","duration","animationTime","scale","rotateLabels","delta","deltaY","dimensionTitleRotation","preventDefault","updateAxes","position","flags","g_data","axisElement","applyAxisConfig","text","brushable","reorderable","getRange","nullValueSeparator","nullValueSeparatorPadding","autoscale","ctx","defaultScales","_extent","getTime","scalePoint","tempDate","val","scaleTime","scaleLinear","counts","sort","tempArr","pop","categoricalRange","addBy","scaleOrdinal","strokeStyle","color","lineWidth","globalCompositeOperation","composite","globalAlpha","alpha","brushedColor","highlight","ctrlKey","html","outerHTML","replace","dat","parentNode","commonScale","global","t","detectDimensions","scales","bundleDimension","computeRealCentroids","row","isValid","applyDimensionDefaults","types","detectDimensionTypes","orient","ticks","innerTickSize","outerTickSize","tickPadding","index","removeAxes","_g","axes","axisDots","r","_r","marks","pow","beginPath","stroke","fill","axisCfg","axisLeft","axisRight","axisTop","axisBottom","tickValues","tickSizeInner","tickSizeOuter","tickFormat","dragging","__origin__","dx","sortDimensions","resize","reorder","firstDim","sortDimensionsByRowData","rowdata","reordered","highlighted","unhighlight","copy","assign","positionSortedKeys","pixelDifference","localeCompare","isBrushed","object","brushState","hasOwnProperty","layer","clearRect","alphaOnBrushed","computeCentroids","centroids","cols","$V","cx","cy","leftCentroid","clusterCentroids","get","rightCentroid","centroid","bundlingStrength","computeControlPoints","smoothness","cps","col","mid","diff","subtract","singleCurve","moveTo","showControlPoints","bezierCurveTo","getNullPosition","log","singlePath","lineTo","colorPath","_functor","v","pathBrushed","functor","renderBrushedDefault","renderBrushedQueue","brushedQueue","brushesToKeep","toType","match","toLowerCase","adjacentPairs","ret","arr","pathHighlight","classed","pathForeground","renderDefault","default","renderDefaultQueue","foregroundQueue","queue","toTypeCoerceNumbers","parseFloat","Number","parseInt","ascending","interactive","shadows","init","DefaultConfig","initState","userConfig","dimensionTitles","warn","eventTypes","dispatch","apply","computeClusterCentroids","Map","clusterCounts","scaled","has","set","count","_map","without","items","el","sideEffects","hideAxis","getset","obj","side_effects","old","previous","d3_rebind","target","source","method","_rebind","bindEvents","__","ParCoords","compute_real_centroids","adjacent_pairs","version"],"mappings":";;;;;;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,CAASC,IAAT,EAAe;MAC7BC,SAAS,EAAb;;UACU,IADV;;gBAEgB,uBAAW,EAF3B;;WAGW,kBAAW,EAHtB,CADiC;;MAM7BC,KAAK,SAALA,EAAK,CAASC,IAAT,EAAe;QAClBA,IAAJ,EAAUD,GAAGC,IAAH,CAAQA,IAAR;;;OAGPC,MAAH;GAJF;;KAOGA,MAAH,GAAY,YAAW;QACjBC,QAAQ,IAAZ;kBACcH,GAAGI,UAAH,GAAgB,YAAW;cAC/B,KAAR;KADF;;aAISC,OAAT,GAAmB;UACb,CAACF,KAAL,EAAY,OAAO,IAAP;UACRG,QAAQP,OAAOQ,MAAP,CAAc,CAAd,EAAiBC,KAAjB,CAAZ;YACMC,GAAN,CAAUX,IAAV;4BACsBO,OAAtB;;;;GAVJ;;KAgBGJ,IAAH,GAAU,UAASA,IAAT,EAAe;;aAEdA,KAAKS,KAAL,CAAW,CAAX,CAAT,CAFuB;WAGhBV,EAAP;GAHF;;KAMGW,GAAH,GAAS,UAASV,IAAT,EAAe;aACbF,OAAOa,MAAP,CAAcX,IAAd,CAAT;GADF;;KAIGY,IAAH,GAAU,UAASC,KAAT,EAAgB;QACpB,CAACC,UAAUC,MAAf,EAAuB,OAAOR,KAAP;YACfM,KAAR;WACOd,EAAP;GAHF;;KAMGiB,SAAH,GAAe,YAAW;WACjBlB,OAAOiB,MAAd;GADF;;;KAKGE,KAAH,GAAW,UAASpB,IAAT,EAAe;QACpB,CAACiB,UAAUC,MAAf,EAAuB;;aAEdhB,EAAP;;aAEOF,IAAT;WACOE,EAAP;GANF;;KASGI,UAAH,GAAgBe,WAAhB;;SAEOnB,EAAP;CA7DF;;ACFA,IAAMoB,IAAI,SAAJA,CAAI;SAAUC,OAAOC,KAAP,GAAeD,OAAOE,MAAP,CAAcC,KAA7B,GAAqCH,OAAOE,MAAP,CAAcE,IAA7D;CAAV;;ACGA,IAAMC,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAQN,MAAR,EAAgBO,EAAhB;SAAuB,mBAAW;QAC7CC,OAD6C,GACrBF,KADqB,CAC7CE,OAD6C;QACpCC,UADoC,GACrBH,KADqB,CACpCG,UADoC;;;QAGjD,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;aAC3BC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BC,MAA/B,CAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;YACnDC,QAAQT,QAAQQ,GAAR,CAAd;;YAEIC,UAAUC,SAAV,IAAuBC,eAAeV,WAAWO,GAAX,CAAf,MAAoC,IAA/D,EAAqE;cAC/DA,GAAJ,IAAWC,MAAMG,MAAN,EAAX;;;eAGKL,GAAP;OAPK,EAQJ,EARI,CAAP;KADF,MAUO;;UAECM,kBAAkB,EAAxB;SACGC,CAAH,GACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,UAASC,CAAT,EAAY;wBACAA,CAAhB,IAAqBC,OAAO,IAAP,CAArB;OAHJ;;;aAOOd,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,aAAK;YACtCjB,QAAQe,CAAR,MAAeP,SAAnB,EAA8B;;;;YAIxBD,QAAQT,QAAQiB,CAAR,CAAd;YACIR,UAAUC,SAAd,EAAyB;cACjBU,MAAM5B,OAAOa,UAAP,CAAkBY,CAAlB,CAAZ;cACMI,UAAUnB,QAAQe,CAAR,EAAWrC,GAAX,CAAewC,IAAIE,MAAnB,CAAhB;;;;gBAIMV,MAAN,CAAa,CAAC,CAAC,CAAC,EAAF,EAAMS,QAAQ,CAAR,CAAN,CAAD,EAAoB,CAAC,EAAD,EAAKA,QAAQ,CAAR,CAAL,CAApB,CAAb;;;;;0BAKgBJ,CAAhB,EAAmBM,IAAnB,CAAwBd,KAAxB,EAA+Bc,IAA/B,CAAoCd,MAAMe,IAA1C,EAAgDH,QAAQI,OAAR,EAAhD;;;;;OAjBJ;;;SAyBGC,aAAH;;aAEO3B,EAAP;;GAlDiB;CAArB;;;;ACDA,IAAM4B,aAAa,SAAbA,UAAa,CAAC7B,KAAD,EAAQN,MAAR,EAAgBO,EAAhB;SAAuB,qBAAa;QAC7CC,OAD6C,GACjCF,KADiC,CAC7CE,OAD6C;;;QAGjD4B,cAAclB,SAAlB,EAA6B;aACpBmB,OAAP,GAAiB,KAAjB;UACI9B,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;WACxCA,CAAH,GACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,UAASC,CAAT,EAAY;iBACT,IAAP,EAAaM,IAAb,CAAkBvB,QAAQiB,CAAR,EAAWO,IAA7B,EAAmC,IAAnC;SAHJ;WAKGE,aAAH;;KARJ,MAUO;aACEG,OAAP,GAAiB,KAAjB;UACI9B,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;WACxCA,CAAH,GACGC,SADH,CACa,QADb,EAEGC,IAFH,CAEQ,UAASC,CAAT,EAAY;cACZA,MAAMW,SAAV,EAAqB;iBACd,IAAP,EAAaL,IAAb,CAAkBvB,QAAQiB,CAAR,EAAWO,IAA7B,EAAmC,IAAnC;kBACQP,CAAR,EAAWa,KAAX,CAAiBZ,OAAO,IAAP,CAAjB;SALJ;WAOGQ,aAAH;;;WAGG,KAAP;GA1BiB;CAAnB;;ACDA;;;AAGA,IAAMK,WAAW,SAAXA,QAAW,CAACjC,KAAD,EAAQN,MAAR,EAAgBwC,UAAhB;SAA+B,YAAM;QAC5C/B,UAD4C,GAC7BH,KAD6B,CAC5CG,UAD4C;;QAE9CgC,aAAa,SAAbA,UAAa;aACjBhC,WAAWiC,CAAX,KAAiBvB,eAAeV,WAAWiC,CAAX,CAAf,MAAkC,IADlC;KAAnB;;QAGMC,UAAUhC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B+B,MAA/B,CAAsCH,UAAtC,CAAhB;QACM/B,UAAUiC,QAAQvD,GAAR,CAAY,aAAK;UACzByD,cAAc1B,eAAeV,WAAWiC,CAAX,CAAf,CAApB;;UAEI,OAAO1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAAnC,KAA8C,UAAlD,EAA8D;eACrD,CACL9C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCD,YAAY,CAAZ,CAAnC,CADK,EAEL7C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCD,YAAY,CAAZ,CAAnC,CAFK,CAAP;OADF,MAKO;eACEA,WAAP;;KATY,CAAhB;;;;;;;QAkBIF,QAAQhD,MAAR,KAAmB,CAAvB,EAA0B,OAAOK,OAAOpB,IAAd;;;QAGpBmE,SAAS;YACP,cAACtB,CAAD,EAAIiB,CAAJ,EAAON,SAAP,EAAqB;YACrB,OAAOpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;iBAG7DtC,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAzB,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqChC,QAAQ0B,SAAR,EAAmB,CAAnB,CAFvC;SAFF,MAMO;iBACE1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBX,EAAEiB,CAAF,CAAzB,IAAiCjB,EAAEiB,CAAF,KAAQhC,QAAQ0B,SAAR,EAAmB,CAAnB,CAAhD;;OATS;cAYL,gBAACX,CAAD,EAAIiB,CAAJ,EAAON,SAAP,EAAqB;YACvB,OAAOpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;iBAG7DtC,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAzB,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqChC,QAAQ0B,SAAR,EAAmB,CAAnB,CAFvC;SAFF,MAMO;iBACE1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBX,EAAEiB,CAAF,CAAzB,IAAiCjB,EAAEiB,CAAF,KAAQhC,QAAQ0B,SAAR,EAAmB,CAAnB,CAAhD;;OApBS;cAuBL,gBAACX,CAAD,EAAIiB,CAAJ,EAAON,SAAP,EAAqB;eAEzB1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBpC,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAzB,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqChC,QAAQ0B,SAAR,EAAmB,CAAnB,CAFvC;;KAxBJ;;WA+BOpC,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB,aAAK;cACrBJ,WAAWS,SAAnB;aACO,KAAL;iBACSN,QAAQO,KAAR,CAAc,UAASR,CAAT,EAAYN,SAAZ,EAAuB;mBACnCW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CAAP;WADK,CAAP;aAGG,IAAL;iBACSO,QAAQS,IAAR,CAAa,UAASV,CAAT,EAAYN,SAAZ,EAAuB;mBAClCW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CAAP;WADK,CAAP;;gBAIM,IAAIiB,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;KAXC,CAAP;GA1De;CAAjB;;ACCA,IAAMC,eAAe,SAAfA,YAAe,CAACvD,MAAD,EAASO,EAAT,EAAaiD,MAAb,EAAqBC,IAArB;SAA8B,wBAAgB;WAC1DpB,OAAP,GAAiBqB,YAAjB;WACO3B,IAAP,CAAY,OAAZ,EAAqBxB,EAArB,EAAyBP,OAAOqC,OAAhC,EAAyCoB,IAAzC;OACGvB,aAAH;GAHmB;CAArB;;AAMA,IAAMyB,WAAW,SAAXA,QAAW,CAACrD,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,UAC1DoB,IAD0D,EAE1DC,SAF0D,EAGvD;QACGC,gBACJ9D,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwBT,IAAxB,KAAiC,QAAjC,GACInD,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BiC,KAA/B,GACE/D,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BiC,KAA/B,GAAuCpE,MAAvC,GAAgD,CADlD,CADJ,GAIIK,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BiC,KAA/B,GAAuC,CAAvC,CALN;;QAOMC,SAASC,OAAOJ,SAAP,EAAkBzC,MAAlB,CAAyB,CAAC,CAAC,CAAC,EAAF,EAAM,CAAN,CAAD,EAAW,CAAC,EAAD,EAAK0C,aAAL,CAAX,CAAzB,CAAf;;QAEMI,wBAAwB,SAAxBA,qBAAwB,OAAQ;UAC9BC,aAAaC,MAAMC,SAAN,CAAgBhF,KAAhB,CAAsB0C,IAAtB,CAA2B0B,IAA3B,CAAnB;UACMG,OAAOO,WAAW,CAAX,CAAb;UACMG,gBAAgBnD,eAAegD,WAAW,CAAX,EAAc,CAAd,CAAf,CAAtB;UACMI,mBAAmBD,cAAclF,GAAd,CAAkB;eACzCY,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BgB,MAA/B,CAAsCrB,CAAtC,CADyC;OAAlB,CAAzB;;aAIO;cACC0C,WAAW,CAAX,CADD;cAECA,WAAW,CAAX,EAAc,CAAd,CAFD;mBAGM;eACJG,aADI;kBAEDC;;OALZ;KARF;;WAmBGC,EADH,CACM,OADN,EACe,YAAW;UAClBlC,MAAMmC,WAAN,KAAsB,IAA1B,EAAgC;eACvB1C,IAAP,CACE,YADF,EAEExB,EAFF,EAGEP,OAAOqC,OAHT,EAIE6B,sBAAsBxE,SAAtB,CAJF;YAMI,OAAO4C,MAAMmC,WAAN,CAAkBC,eAAzB,KAA6C,UAAjD,EAA6D;gBACrDD,WAAN,CAAkBC,eAAlB;;;KAVR,EAcGF,EAdH,CAcM,OAdN,EAce,YAAW;mBAEpBxE,MADF,EAEEO,EAFF,EAGEiD,MAHF,EAIEU,sBAAsBxE,SAAtB,CAJF,EAKE6C,SAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,GALF;KAfJ,EAsBGgC,EAtBH,CAsBM,KAtBN,EAsBa,YAAW;mBACPxE,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiCjB,SAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,GAAjC;aACOT,IAAP,CACE,UADF,EAEExB,EAFF,EAGEP,OAAOqC,OAHT,EAIE6B,sBAAsBxE,SAAtB,CAJF;KAxBJ;;UAgCMc,OAAN,CAAcoD,IAAd,IAAsBI,MAAtB;UACMvD,UAAN,CAAiBmD,IAAjB,IAAyBC,UAAUc,IAAV,EAAzB;;WAEOX,MAAP;GAlEe;CAAjB;;ACNA,IAAMY,UAAU,SAAVA,OAAU,CAACtE,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,YAAM;QAC3D,CAACjC,GAAGe,CAAH,EAAL,EAAa;SACRuD,UAAH;;;;QAII5D,QAAQV,GACXe,CADW,GAEXwD,MAFW,CAEJ,OAFI,EAGXC,IAHW,CAGN,OAHM,EAGG,OAHH,EAIXvD,IAJW,CAIN,UAASC,CAAT,EAAY;aACT,IAAP,EAAaM,IAAb,CACE4B,SAASrD,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDf,CAAhD,EAAmDC,OAAO,IAAP,CAAnD,CADF;KALU,CAAd;UAUGH,SADH,CACa,MADb,EAEGyD,KAFH,CAES,YAFT,EAEuB,IAFvB,EAGGD,IAHH,CAGQ,GAHR,EAGa,CAAC,EAHd,EAIGA,IAJH,CAIQ,OAJR,EAIiB,EAJjB;;UAMMxD,SAAN,CAAgB,iBAAhB,EAAmCyD,KAAnC,CAAyC,MAAzC,EAAiD,aAAjD;;UAGGzD,SADH,CACa,aADb,EAEGyD,KAFH,CAES,MAFT,EAEiB,wBAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,iBAHnB;;UAKMzD,SAAN,CAAgB,cAAhB,EAAgCyD,KAAhC,CAAsC,MAAtC,EAA8C,iBAA9C;;OAEG3E,YAAH,GAAkBA,aAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,CAAlB;OACG4B,UAAH,GAAgBA,WAAW7B,KAAX,EAAkBN,MAAlB,EAA0BO,EAA1B,CAAhB;WACOA,EAAP;GAhCc;CAAhB;;ACLA,IAAM0E,YAAY,SAAZA,SAAY,CAAC3E,KAAD,EAAQC,EAAR;SAAe,YAAM;QACjCA,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EACEf,GAAGe,CAAH,GACGC,SADH,CACa,QADb,EAEG2D,MAFH;;UAII1E,OAAN,GAAgB,EAAhB;WACOD,GAAGF,YAAV;WACOE,GAAG4B,UAAV;GARgB;CAAlB;;ACKA,IAAMgD,gBAAgB,SAAhBA,aAAgB,CAAC3C,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAoC;MAClDlD,QAAQ;aACH,EADG;gBAEA;GAFd;;aAKW8E,KAAX,CAAiB,SAAjB,IAA8B;aACnBR,QAAQtE,KAAR,EAAeN,MAAf,EAAuBO,EAAvB,EAA2BiD,MAA3B,EAAmChB,UAAnC,CADmB;eAEjByC,UAAU3E,KAAV,EAAiBC,EAAjB,CAFiB;cAGlBgC,SAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,CAHkB;gBAIhBnC,aAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B;GAJd;CANF;;ACHA,IAAM8E,cAAc,SAAdA,WAAc,CAAC7E,OAAD,EAAUR,MAAV,EAAkBO,EAAlB,EAAsBqD,IAAtB,EAA4B0B,QAA5B,EAAyC;MACrDnE,oBAAiBmE,SAAS/D,SAAT,CAAmB,QAAnB,EAA6B3C,IAA7B,CAAkC4B,OAAlC,EAA2C;WAAKiB,EAAE8D,EAAP;GAA3C,CAAvB;;oBAGGC,KADH,GAEGC,MAFH,CAEU,GAFV,EAEe,QAFf,EAGGV,IAHH,CAGQ,OAHR,EAGiB,OAHjB,EAIGA,IAJH,CAIQ,WAJR,EAIqBnB,IAJrB,EAKGmB,IALH,CAMI,IANJ,EAOI;WAAK,WAAWpE,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B6E,OAA/B,CAAuC9B,IAAvC,CAAX,GAA0D,GAA1D,GAAgE+B,EAAEJ,EAAvE;GAPJ,EASG/D,IATH,CASQ,UAASoE,WAAT,EAAsB;gBACd3E,KAAZ,CAAkBS,OAAO,IAAP,CAAlB;GAVJ;;oBAaeF,IAAf,CAAoB,UAASoE,WAAT,EAAsB;WACjC,IAAP,EACGb,IADH,CACQ,OADR,EACiB,OADjB,EAEGxD,SAFH,CAEa,UAFb,EAGGyD,KAHH,CAGS,gBAHT,EAG2B,YAAW;UAC5B/D,QAAQ2E,YAAY3E,KAA1B;UACI2E,YAAYL,EAAZ,KAAmB/E,QAAQb,MAAR,GAAiB,CAApC,IAAyCsB,UAAUC,SAAvD,EAAkE;eACzD,KAAP;OADF,MAEO;eACE,MAAP;;KARN;GADF;;oBAce2E,IAAf,GAAsBX,MAAtB;CA9BF;;ACAA;AACA,IAAM3C,aAAW,SAAXA,QAAW,CAACjC,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B,EAA2C;MAClDhC,OADkD,GACtCF,KADsC,CAClDE,OADkD;;;MAGpDiC,aAAa,SAAbA,UAAa,CAACC,CAAD,EAAIoD,GAAJ,EAAY;QACvBC,cAAcvF,QAAQkC,CAAR,CAApB;;SAEK,IAAIsD,IAAI,CAAb,EAAgBA,IAAID,YAAYpG,MAAhC,EAAwCqG,GAAxC,EAA6C;UACrC/E,QAAQgF,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CAAd;;UAEI7E,eAAeF,KAAf,MAA0B,IAA9B,EAAoC;eAC3B,IAAP;;;;WAIG,KAAP;GAXF;;MAcM0B,UAAUhC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B+B,MAA/B,CAAsCH,UAAtC,CAAhB;MACM/B,UAAUiC,QAAQvD,GAAR,CAAY,aAAK;QACzB2G,cAAcvF,QAAQkC,CAAR,CAApB;;WAEOqD,YACJ3G,GADI,CACA,UAACqC,CAAD,EAAIuE,CAAJ;aACH7E,eACE8E,SAASC,cAAT,CACE,WAAWvF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B6E,OAA/B,CAAuChD,CAAvC,CAAX,GAAuD,GAAvD,GAA6DsD,CAD/D,CADF,CADG;KADA,EAQJ5G,GARI,CAQA,UAACqC,CAAD,EAAIuE,CAAJ,EAAU;UACTvE,MAAM,IAAN,IAAcA,MAAMP,SAAxB,EAAmC;eAC1B,IAAP;OADF,MAEO,IAAI,OAAOlB,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAAnC,KAA8C,UAAlD,EAA8D;eAC5D,CACL9C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCrB,EAAE,CAAF,CAAnC,CADK,EAELzB,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BgB,MAA5B,CAAmCrB,EAAE,CAAF,CAAnC,CAFK,CAAP;OADK,MAKA;eACEA,CAAP;;KAjBC,CAAP;GAHc,CAAhB;;;;;;;;MA+BIkB,QAAQhD,MAAR,KAAmB,CAAvB,EAA0B,OAAOK,OAAOpB,IAAd;;;MAGpBmE,SAAS;UACP,cAACtB,CAAD,EAAIiB,CAAJ,EAAOsD,CAAP,EAAa;UACXG,SAASzF,QAAQsF,CAAR,CAAf;;UAEI,OAAOhG,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;;;;;;+BAE/CmD,MAAhB,8HAAwB;gBAAbC,CAAa;;gBAClBA,MAAM,IAAN,IAAcA,MAAMlF,SAAxB,EAAmC;;;;gBAKjCkF,EAAE,CAAF,KAAQpG,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAR,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqC0D,EAAE,CAAF,CAFvC,EAGE;qBACO,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;OAfF,MAgBO;;;;;;gCACWD,MAAhB,mIAAwB;gBAAbC,EAAa;;gBAClBA,OAAM,IAAN,IAAcA,OAAMlF,SAAxB,EAAmC;;;;gBAI/BkF,GAAE,CAAF,KAAQ3E,EAAEiB,CAAF,CAAR,IAAgBjB,EAAEiB,CAAF,KAAQ0D,GAAE,CAAF,CAA5B,EAAkC;qBACzB,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;;KA/BS;YAkCL,gBAAC3E,CAAD,EAAIiB,CAAJ,EAAOsD,CAAP,EAAa;UACbG,SAASzF,QAAQsF,CAAR,CAAf;;UAEI,OAAOhG,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BkB,SAAnC,KAAiD,UAArD,EAAiE;;;;;;;gCAE/CmD,MAAhB,mIAAwB;gBAAbC,CAAa;;gBAClBA,MAAM,IAAN,IAAcA,MAAMlF,SAAxB,EAAmC;;;;gBAKjCkF,EAAE,CAAF,KAAQpG,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAR,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqC0D,EAAE,CAAF,CAFvC,EAGE;qBACO,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;OAfF,MAgBO;;;;;;gCACWD,MAAhB,mIAAwB;gBAAbC,GAAa;;gBAClBA,QAAM,IAAN,IAAcA,QAAMlF,SAAxB,EAAmC;;;;gBAI/BkF,IAAE,CAAF,KAAQ3E,EAAEiB,CAAF,CAAR,IAAgBjB,EAAEiB,CAAF,KAAQ0D,IAAE,CAAF,CAA5B,EAAkC;qBACzB,IAAP;;;;;;;;;;;;;;;;;;eAIG,KAAP;;KAhES;YAmEL,gBAAC3E,CAAD,EAAIiB,CAAJ,EAAOsD,CAAP,EAAa;UACbG,SAASzF,QAAQsF,CAAR,CAAf;;;;;;;8BAEgBG,MAAhB,mIAAwB;cAAbC,CAAa;;cAClBA,MAAM,IAAN,IAAcA,MAAMlF,SAAxB,EAAmC;;;;cAKjCkF,EAAE,CAAF,KAAQpG,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAAR,IACA1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,KAAqC0D,EAAE,CAAF,CAFvC,EAGE;mBACO,IAAP;;;;;;;;;;;;;;;;;;aAIG,KAAP;;GAnFJ;;SAuFOpG,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB,aAAK;YACrBJ,WAAWS,SAAnB;WACO,KAAL;eACSN,QAAQO,KAAR,CAAc,UAACR,CAAD,EAAIsD,CAAJ;iBACnBjD,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCsD,CAAxC,CADmB;SAAd,CAAP;WAGG,IAAL;eACSrD,QAAQS,IAAR,CAAa,UAACV,CAAD,EAAIsD,CAAJ;iBAClBjD,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCsD,CAAxC,CADkB;SAAb,CAAP;;cAIM,IAAI3C,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;GAXC,CAAP;CA3IF;;ACEA,IAAMC,iBAAe,SAAfA,YAAe,CAACvD,MAAD,EAASO,EAAT,EAAaiD,MAAb;SAAwB,wBAAgB;WACpDnB,OAAP,GAAiBqB,YAAjB;WACO3B,IAAP,CAAY,OAAZ,EAAqBxB,EAArB,EAAyBP,OAAOqC,OAAhC;OACGH,aAAH;GAHmB;CAArB;;AAMA,IAAMmE,WAAW,SAAXA,QAAW,CAAC/F,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,UAC1DoB,IAD0D,EAE1DC,SAF0D,EAGvD;QACKrD,OADL,GAC6BF,KAD7B,CACKE,OADL;QACcC,UADd,GAC6BH,KAD7B,CACcG,UADd;;;QAGGqD,gBACJ9D,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwBT,IAAxB,KAAiC,QAAjC,GACInD,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BiC,KAA/B,GACE/D,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BiC,KAA/B,GAAuCpE,MAAvC,GAAgD,CADlD,CADJ,GAIIK,OAAOa,UAAP,CAAkB+C,IAAlB,EAAwB9B,MAAxB,CAA+BiC,KAA/B,GAAuC,CAAvC,CALN;;QAOM9C,QAAQgD,SAAS7C,MAAT,CAAgB,CAAC,CAAC,CAAC,EAAF,EAAM,CAAN,CAAD,EAAW,CAAC,EAAD,EAAK0C,aAAL,CAAX,CAAhB,CAAd;QACMyB,KAAK/E,QAAQoD,IAAR,IAAgBpD,QAAQoD,IAAR,EAAcjE,MAA9B,GAAuC,CAAlD;QACMgF,OACJ,WAAWhE,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B6E,OAA/B,CAAuC9B,IAAvC,CAAX,GAA0D,GAA1D,GAAgE2B,EADlE;;QAGI/E,QAAQoD,IAAR,CAAJ,EAAmB;cACTA,IAAR,EAAc0C,IAAd,CAAmB;cAAA;oBAAA;;OAAnB;KADF,MAMO;cACG1C,IAAR,IAAgB,CAAC,EAAE2B,MAAF,EAAMtE,YAAN,EAAa0D,UAAb,EAAD,CAAhB;;;QAGElE,WAAWmD,IAAX,CAAJ,EAAsB;iBACTA,IAAX,EAAiB0C,IAAjB,CAAsB,EAAEf,MAAF,EAAMZ,UAAN,EAAtB;KADF,MAEO;iBACMf,IAAX,IAAmB,CAAC,EAAE2B,MAAF,EAAMZ,UAAN,EAAD,CAAnB;;;UAICH,EADH,CACM,OADN,EACe,YAAW;UAClBlC,MAAMmC,WAAN,KAAsB,IAA1B,EAAgC;eACvB1C,IAAP,CAAY,YAAZ,EAA0BxB,EAA1B,EAA8BP,OAAOqC,OAArC;YACI,OAAOC,MAAMmC,WAAN,CAAkBC,eAAzB,KAA6C,UAAjD,EAA6D;gBACrDD,WAAN,CAAkBC,eAAlB;;;KALR,EASGF,EATH,CASM,OATN,EASe,UAAS4B,CAAT,EAAY;;qBAGrBpG,MADF,EAEEO,EAFF,EAGEiD,MAHF,EAIEjB,WAASjC,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,CAJF;KAXJ,EAiBGgC,EAjBH,CAiBM,KAjBN,EAiBa,YAAW;;UAEd+B,cAAc/F,QAAQoD,IAAR,EAAcpD,QAAQoD,IAAR,EAAcjE,MAAd,GAAuB,CAArC,EAAwC4F,EAA5D;UACMiB,YAAYP,SAASC,cAAT,CAChB,WACEvF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B6E,OAA/B,CAAuC9B,IAAvC,CADF,GAEE,GAFF,GAGE2C,WAJc,CAAlB;UAMME,YAAYtF,eAAeqF,SAAf,CAAlB;;UAGEC,cAAcvF,SAAd,IACAuF,cAAc,IADd,IAEAA,UAAU,CAAV,MAAiBA,UAAU,CAAV,CAHnB,EAIE;iBACSnG,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDoB,IAAhD,EAAsDC,SAAtD;;oBAEYrD,QAAQoD,IAAR,CAAZ,EAA2B5D,MAA3B,EAAmCO,EAAnC,EAAuCqD,IAAvC,EAA6CC,SAA7C;;uBAEa7D,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EACEjB,WAASjC,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,CADF;OATF,MAYO;YAEHF,MAAMmC,WAAN,IACAnC,MAAMmC,WAAN,CAAkBiC,QAAlB,OAAiC,qBADjC,IAEApE,MAAMmE,SAAN,KAAoB,IAHtB,EAIE;aACGtE,UAAH,CAAcyB,IAAd;;;;aAIG7B,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;KAlDJ;;WAqDOpB,KAAP;GAvFe;CAAjB;;ACNA;;;;;;;;;AASA,IAAMZ,iBAAe,SAAfA,YAAe,CAACC,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,mBAAW;QACjEhC,OADiE,GACrDF,KADqD,CACjEE,OADiE;;;QAGrE,OAAOE,OAAP,KAAmB,WAAvB,EAAoC;aAC3BC,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BC,MAA/B,CAAsC,UAACC,GAAD,EAAMC,GAAN,EAAW8E,GAAX,EAAmB;YACxDC,cAAcvF,QAAQQ,GAAR,CAApB;;YAEI+E,gBAAgB7E,SAAhB,IAA6B6E,gBAAgB,IAAjD,EAAuD;cACjD/E,GAAJ,IAAW,EAAX;SADF,MAEO;cACDA,GAAJ,IAAW+E,YAAYjF,MAAZ,CAAmB,UAACW,CAAD,EAAIiB,CAAJ,EAAOsD,CAAP,EAAa;gBACnCjC,QAAQ5C,eACZ8E,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CADY,CAAd;gBAGIjC,UAAU,IAAd,EAAoB;kBACdtC,EAAE6E,IAAF,CAAOvC,KAAP,CAAJ;;;mBAGKtC,CAAP;WARS,EASR,EATQ,CAAX;;;eAYKV,GAAP;OAlBK,EAmBJ,EAnBI,CAAP;KADF,MAqBO;;;aAGEH,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,UAACF,CAAD,EAAIqE,GAAJ,EAAY;YAC7CpF,QAAQe,CAAR,MAAeP,SAAf,IAA4BR,QAAQe,CAAR,MAAe,IAA/C,EAAqD;;;;YAI/CG,MAAM5B,OAAOa,UAAP,CAAkBY,CAAlB,CAAZ;;YAEMkF,WAAWjG,QAAQe,CAAR,EAAWrC,GAAX,CAAe;iBAAKgH,EAAEhH,GAAF,CAAMwC,IAAIE,MAAV,CAAL;SAAf,CAAjB;;YAEM8E,MAAMD,SAASvH,GAAT,CAAa,UAACgH,CAAD,EAAIS,CAAJ,EAAU;cAC3B7C,SAASqC,SAAS/F,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EACbf,CADa,EAEbC,OAAO,kBAAkBoE,GAAzB,CAFa,CAAf;;;iBAMO1E,MAAP,CAAc,CAAC,CAAC,CAAC,EAAF,EAAMgF,EAAE,CAAF,CAAN,CAAD,EAAc,CAAC,EAAD,EAAKA,EAAE,CAAF,CAAL,CAAd,CAAd;;iBAEO;gBACDS,CADC;mBAEE7C,MAFF;iBAGAoC;WAHP;SATU,CAAZ;;gBAgBQ3E,CAAR,IAAamF,GAAb;;oBAEYA,GAAZ,EAAiB5G,MAAjB,EAAyBO,EAAzB,EAA6BkB,CAA7B,EAAgCC,OAAO,kBAAkBoE,GAAzB,CAAhC;;;;;YAKInE,OAAJ,CAAY,UAACmF,CAAD,EAAIC,CAAJ,EAAU;iBACb,YAAYjB,GAAZ,GAAkB,GAAlB,GAAwBiB,CAA/B,EACGhF,IADH,CACQ+E,EAAE7F,KADV,EAEGc,IAFH,CAEQ+E,EAAE7F,KAAF,CAAQe,IAFhB,EAEsB8E,EAAEE,GAAF,CAAM/E,OAAN,EAFtB;SADF;OAhCF;;;SAwCGC,aAAH;;aAEO3B,EAAP;;GArEiB;CAArB;;;;ACXA,IAAM4B,eAAa,SAAbA,UAAa,CAAC7B,KAAD,EAAQN,MAAR,EAAgBO,EAAhB;SAAuB,qBAAa;QAC7CC,OAD6C,GACjCF,KADiC,CAC7CE,OAD6C;;;QAGjD4B,cAAclB,SAAlB,EAA6B;UACvBX,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;eACpCV,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,UAACF,CAAD,EAAIqE,GAAJ,EAAY;cAC3CmB,YAAYzG,QAAQiB,CAAR,CAAlB;;oBAEUE,OAAV,CAAkB,UAACyE,CAAD,EAAIJ,CAAJ,EAAU;gBACpB/E,QAAQgF,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CAAd;gBACI7E,eAAeF,KAAf,MAA0B,IAA9B,EAAoC;iBAC/BK,CAAH,GACGI,MADH,CACU,YAAYoE,GAAZ,GAAkB,GAAlB,GAAwBE,CADlC,EAEGjE,IAFH,CAEQqE,EAAEnF,KAAF,CAAQe,IAFhB,EAEsB,IAFtB;;WAHJ;SAHF;;WAaGE,aAAH;;KAfJ,MAiBO;UACD3B,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;YACrC2F,YAAYzG,QAAQ4B,SAAR,CAAlB;YACM0D,MAAMnF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B6E,OAA/B,CAAuCtD,SAAvC,CAAZ;;kBAEUT,OAAV,CAAkB,UAACyE,CAAD,EAAIJ,CAAJ,EAAU;cACpB/E,QAAQgF,SAASC,cAAT,CAAwB,WAAWJ,GAAX,GAAiB,GAAjB,GAAuBE,CAA/C,CAAd;cACI7E,eAAeF,KAAf,MAA0B,IAA9B,EAAoC;eAC/BK,CAAH,GACGI,MADH,CACU,YAAYoE,GAAZ,GAAkB,GAAlB,GAAwBE,CADlC,EAEGjE,IAFH,CAEQqE,EAAEnF,KAAF,CAAQe,IAFhB,EAEsB,IAFtB;;gBAII,OAAOoE,EAAE9D,KAAT,KAAmB,UAAvB,EAAmC;gBAC/BA,KAAF,CAAQZ,OAAO,YAAYoE,GAAZ,GAAkB,GAAlB,GAAwBE,CAA/B,CAAR;;;SARN;;WAaG9D,aAAH;;;WAGGgF,OAAP;GAzCiB;CAAnB;;ACAA,IAAMvD,aAAW,SAAXA,QAAW,CAACrD,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,UAC1DoB,IAD0D,EAE1DC,SAF0D,EAGvD;QACKrD,OADL,GACiBF,KADjB,CACKE,OADL;;aAEMF,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDoB,IAAhD,EAAsDC,SAAtD;gBACYrD,QAAQoD,IAAR,CAAZ,EAA2B5D,MAA3B,EAAmCO,EAAnC,EAAuCqD,IAAvC,EAA6CC,SAA7C;GANe;CAAjB;;ACEA,IAAMe,YAAU,SAAVA,OAAU,CAACtE,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoBiD,MAApB,EAA4BhB,UAA5B;SAA2C,YAAM;QAC3D,CAACjC,GAAGe,CAAH,EAAL,EAAa;SACRuD,UAAH;;;OAGCvD,CAAH,GACGwD,MADH,CACU,OADV,EAEGC,IAFH,CAEQ,IAFR,EAEc,UAACtD,CAAD,EAAIuE,CAAJ;aAAU,iBAAiBA,CAA3B;KAFd,EAGGjB,IAHH,CAGQ,OAHR,EAGiB,aAHjB,EAIGA,IAJH,CAIQ,WAJR,EAIqB;aAAKtD,CAAL;KAJrB,EAKGD,IALH,CAKQ,UAASC,CAAT,EAAY;iBACPnB,KAAT,EAAgBN,MAAhB,EAAwBO,EAAxB,EAA4BiD,MAA5B,EAAoChB,UAApC,EAAgDf,CAAhD,EAAmDC,OAAO,IAAP,CAAnD;KANJ;;OASGrB,YAAH,GAAkBA,eAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwChB,UAAxC,CAAlB;OACGL,UAAH,GAAgBA,aAAW7B,KAAX,EAAkBN,MAAlB,EAA0BO,EAA1B,CAAhB;WACOA,EAAP;GAhBc;CAAhB;;ACLA,IAAM0E,cAAY,SAAZA,SAAY,CAAC3E,KAAD,EAAQC,EAAR;SAAe,YAAM;QACjCA,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EACEf,GAAGe,CAAH,GACGC,SADH,CACa,cADb,EAEG2D,MAFH;;UAII1E,OAAN,GAAgB,EAAhB;WACOD,GAAGF,YAAV;WACOE,GAAG4B,UAAV;GARgB;CAAlB;;ACKA,IAAMgF,qBAAqB,SAArBA,kBAAqB,CAAC3E,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAoC;MACvDlD,QAAQ;aACH,EADG;gBAEA;GAFd;;aAKW8E,KAAX,CAAiB,eAAjB,IAAoC;aACzBR,UAAQtE,KAAR,EAAeN,MAAf,EAAuBO,EAAvB,EAA2BiD,MAA3B,EAAmChB,UAAnC,CADyB;eAEvByC,YAAU3E,KAAV,EAAiBC,EAAjB,CAFuB;cAGxBgC,WAASjC,KAAT,EAAgBN,MAAhB,EAAwBwC,UAAxB,CAHwB;gBAItBnC,eAAaC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B;GAJd;CANF;;ACLA,IAAM0E,cAAY,SAAZA,SAAY,CAAC3E,KAAD,EAAQC,EAAR;SAAe,YAAM;OAClCkG,SAAH,CACG/E,MADH,CACU,KADV,EAEGA,MAFH,CAEU,UAFV,EAGGwD,MAHH;OAIGuB,SAAH,CACG/E,MADH,CACU,KADV,EAEGA,MAFH,CAEU,mBAFV,EAGGwD,MAHH;OAIGV,EAAH,CAAM,oBAAN,EAA4BtD,SAA5B;WACOX,GAAG4B,UAAV;;UAEMiF,SAAN,GAAkBlG,SAAlB;GAZgB;CAAlB;;ACAA;AACA,IAAMmG,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAQrH,KAAR;SAAkB,aAAK;QACvCsH,KAAK,CAACD,MAAMC,EAAN,CAAS,CAAT,IAAcD,MAAME,IAArB,EAA2BF,MAAMC,EAAN,CAAS,CAAT,IAAcD,MAAME,IAA/C,CAAX;QACEC,KAAK,CAACH,MAAMG,EAAN,CAAS,CAAT,IAAcH,MAAME,IAArB,EAA2BF,MAAMG,EAAN,CAAS,CAAT,IAAcH,MAAME,IAA/C,CADP;QAEEE,KAAK,IAAIzH,QAAQsH,GAAG,CAAH,CAFnB;QAGEI,KAAKJ,GAAG,CAAH,KAAS,IAAIG,EAAb,CAHP;QAIEE,KAAK,IAAI3H,QAAQwH,GAAG,CAAH,CAJnB;QAKEI,KAAKJ,GAAG,CAAH,KAAS,IAAIG,EAAb,CALP;;QAOME,IAAIpF,EAAE,CAAF,CAAV;QACEqF,IAAIrF,EAAE,CAAF,CADN;QAEEsF,KAAKN,KAAKI,CAAL,GAASH,EAFhB;QAGEM,KAAKL,KAAKE,CAAL,GAASD,EAHhB;;WAKOE,IAAIG,KAAKC,GAAL,CAASH,EAAT,EAAaC,EAAb,CAAJ,IAAwBF,IAAIG,KAAKE,GAAL,CAASJ,EAAT,EAAaC,EAAb,CAAnC;GAbsB;CAAxB;;AAgBA,IAAMI,eAAe,SAAfA,YAAe,CAAC/H,KAAD,EAAQN,MAAR;SAAmB,UAACyB,CAAD,EAAI8D,EAAJ,EAAW;QAC7C+B,QAAQhH,MAAMgI,MAAN,CAAa/C,EAAb,CAAZ;QACEgD,OAAOlB,gBAAgBC,KAAhB,EAAuBhH,MAAMgI,MAAN,CAAarI,KAAb,CAAmBsF,EAAnB,CAAvB,CADT;QAEEiD,KAAKlB,MAAMmB,IAAN,CAAWrI,IAFlB;QAGEsI,KAAKpB,MAAMmB,IAAN,CAAWtI,KAHlB;QAIE6H,KAAKhI,OAAOa,UAAP,CAAkB2H,EAAlB,EAAsB1G,MAJ7B;QAKEmG,KAAKjI,OAAOa,UAAP,CAAkB6H,EAAlB,EAAsB5G,MAL7B;QAME6G,QAAQ,CAACX,GAAGvG,EAAE+G,EAAF,CAAH,IAAYlB,MAAME,IAAnB,EAAyBS,GAAGxG,EAAEiH,EAAF,CAAH,IAAYpB,MAAME,IAA3C,CANV;WAOOe,KAAKI,KAAL,CAAP;GARmB;CAArB;;AAWA,IAAMpG,aAAW,SAAXA,QAAW,CAACC,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA+B;;MAExC4I,MAAMjI,OAAOkI,mBAAP,CAA2BvI,MAAMgI,MAAjC,EAAyC1F,MAAzC,CAAgD;WAAK,CAACkG,MAAMrH,CAAN,CAAN;GAAhD,CAAZ;MACEY,UAAUrC,OAAOpB,IADnB;;MAGIgK,IAAIjJ,MAAJ,KAAe,CAAnB,EAAsB;WACb0C,OAAP;;;MAGI0G,YAAYV,aAAa/H,KAAb,EAAoBN,MAApB,CAAlB;;SAEOqC,QAAQO,MAAR,CAAe,aAAK;YACjBJ,WAAWS,SAAnB;WACO,KAAL;eACS2F,IAAI1F,KAAJ,CAAU;iBAAM6F,UAAUtH,CAAV,EAAa8D,EAAb,CAAN;SAAV,CAAP;WACG,IAAL;eACSqD,IAAIxF,IAAJ,CAAS;iBAAM2F,UAAUtH,CAAV,EAAa8D,EAAb,CAAN;SAAT,CAAP;;cAEM,IAAIlC,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;GAPC,CAAP;CAXF;;AC5BA,IAAM0F,cAAc,SAAdA,WAAc,CAAC1I,KAAD,EAAQC,EAAR,EAAe;MAC3B+G,QAAQhH,MAAMgI,MAAN,CAAahI,MAAMgI,MAAN,CAAaW,MAA1B,CAAd;MACEC,MAAM3I,GAAGkG,SAAH,CAAa/E,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,UAAlC,CADR;;SAGOpB,MAAMgI,MAAN,CAAahI,MAAMgI,MAAN,CAAaW,MAA1B,CAAP;MACI1H,SAAJ,CAAc,gBAAgB+F,MAAMmB,IAAN,CAAWzC,CAAzC,EAA4Cd,MAA5C;MACI3D,SAAJ,CAAc,kBAAkB+F,MAAMmB,IAAN,CAAWzC,CAA3C,EAA8Cd,MAA9C;CANF;;ACGA,IAAMiE,YAAY,SAAZA,SAAY,CAAC3G,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC3D8D,QAAQhH,MAAMgI,MAAN,CAAahI,MAAMgI,MAAN,CAAaW,MAA1B,CAAd;;;;QAII3B,SAASA,MAAMC,EAAN,CAAS,CAAT,MAAgBD,MAAMG,EAAN,CAAS,CAAT,CAAzB,IAAwCH,MAAMC,EAAN,CAAS,CAAT,MAAgBD,MAAMG,EAAN,CAAS,CAAT,CAA5D,EAAyE;kBAC3DnH,KAAZ,EAAmBC,EAAnB;;;QAGI8B,UAAUE,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAAhB;UACMsI,MAAN,CAAaW,MAAb,GAAsB/H,SAAtB;WACOmB,OAAP,GAAiBA,OAAjB;OACGH,aAAH;WACOH,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;GAbgB;CAAlB;;ACCA,IAAM+G,YAAY,SAAZA,SAAY,CAChB5G,UADgB,EAEhBlC,KAFgB,EAGhBN,MAHgB,EAIhBO,EAJgB,EAKhBiD,MALgB,EAMhB8D,KANgB,EAOhB+B,WAPgB,EAQb;MACCC,OAAO/I,GAAGkG,SAAH,CAAa/E,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,UAAlC,CAAX;MACE6D,KAAK+B,MAAMmB,IAAN,CAAWzC,CADlB;MAEEuD,SAAS,CAACjC,MAAMC,EAAP,EAAWD,MAAMG,EAAjB,CAFX;MAGE+B,QAAQF,KAAK/H,SAAL,CAAe,gBAAgBgE,EAA/B,EAAmC3G,IAAnC,CAAwC,CAAC0I,KAAD,CAAxC,CAHV;MAIEmC,UAAUH,KAAK/H,SAAL,CAAe,kBAAkBgE,EAAjC,EAAqC3G,IAArC,CAA0C2K,MAA1C,CAJZ;MAKEG,QAAQC,MALV;;QAQGnE,KADH,GAEGV,MAFH,CAEU,MAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,WAAWQ,EAHzB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,OAJjB;;QAOGA,IADH,CACQ,IADR,EACc;WAAKtD,EAAE8F,EAAF,CAAK,CAAL,CAAL;GADd,EAEGxC,IAFH,CAEQ,IAFR,EAEc;WAAKtD,EAAE8F,EAAF,CAAK,CAAL,CAAL;GAFd,EAGGxC,IAHH,CAGQ,IAHR,EAGc;WAAKtD,EAAEgG,EAAF,CAAK,CAAL,CAAL;GAHd,EAIG1C,IAJH,CAIQ,IAJR,EAIc;WAAKtD,EAAEgG,EAAF,CAAK,CAAL,CAAL;GAJd,EAKG1C,IALH,CAKQ,QALR,EAKkB,OALlB,EAMGA,IANH,CAMQ,cANR,EAMwB,CANxB;;QASGP,EADH,CACM,MADN,EACc,UAAS/C,CAAT,EAAYuE,CAAZ,EAAe;QACnB4D,KAAKtH,KAAX;QACI0D,IAAI,CAAR;UACM,MAAMA,CAAZ,EAAe,CAAf,IAAoBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASd,MAAME,IAAN,GAAa,CAAtB,EAAyBoC,GAAG9B,CAA5B,CAAT,EAAyCR,MAAMuC,IAA/C,CAApB;UACM,MAAM7D,CAAZ,EAAe,CAAf,IAAoBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASd,MAAMwC,IAAf,EAAqBF,GAAG7B,CAAxB,CAAT,EAAqCT,MAAMyC,IAA3C,CAApB;cACUvH,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiD8D,KAAjD,EAAwDtB,IAAI,CAA5D;GANJ,EAQGxB,EARH,CAQM,KARN,EAQa2E,UAAU3G,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CARb;;UAWGgC,KADH,GAEGV,MAFH,CAEU,QAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,WAAWQ,EAHzB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,OAJjB;;UAOGA,IADH,CACQ,IADR,EACc;WAAKtD,EAAE,CAAF,CAAL;GADd,EAEGsD,IAFH,CAEQ,IAFR,EAEc;WAAKtD,EAAE,CAAF,CAAL;GAFd,EAGGsD,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGC,KAJH,CAKI,SALJ,EAMI,UAACvD,CAAD,EAAIuE,CAAJ;WAAWqD,gBAAgBnI,SAAhB,IAA6B8E,MAAMqD,WAAnC,GAAiD,GAAjD,GAAuD,CAAlE;GANJ,EAQG7E,EARH,CAQM,WARN,EAQmB,YAAW;WACnB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,GAA9B;GATJ,EAWGR,EAXH,CAWM,UAXN,EAWkB,YAAW;WAClB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,CAA9B;GAZJ,EAcGjD,IAdH,CAcQ2H,KAdR;CA9CF;;AA+DA,IAAMM,SAAS,SAATA,MAAS,CAACxH,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QACxDoG,KAAKtH,KAAX;QACEgF,QAAQhH,MAAMgI,MAAN,CAAahI,MAAMgI,MAAN,CAAaW,MAA1B,CADV;;;UAIMxB,EAAN,CAAS,CAAT,IAAcS,KAAKC,GAAL,CACZD,KAAKE,GAAL,CAASd,MAAME,IAAN,GAAa,CAAtB,EAAyBoC,GAAG9B,CAAH,GAAO9H,OAAOE,MAAP,CAAcE,IAA9C,CADY,EAEZkH,MAAMuC,IAFM,CAAd;UAIMpC,EAAN,CAAS,CAAT,IAAcS,KAAKC,GAAL,CACZD,KAAKE,GAAL,CAASd,MAAMwC,IAAf,EAAqBF,GAAG7B,CAAH,GAAO/H,OAAOE,MAAP,CAAc+J,GAA1C,CADY,EAEZ3C,MAAMyC,IAFM,CAAd;;cAKUvH,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiD8D,KAAjD,EAAwD,CAAxD;GAda;CAAf;;ACnEA,IAAM4C,IAAI,SAAJA,CAAI;SAAUlK,OAAOmK,MAAP,GAAgBnK,OAAOE,MAAP,CAAc+J,GAA9B,GAAoCjK,OAAOE,MAAP,CAAckK,MAA5D;CAAV;;ACAA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACrK,MAAD,EAASO,EAAT,EAAa+J,MAAb,EAAqB5H,CAArB,EAA2B;MAC9C+F,OAAO,EAAEzC,GAAG,CAAC,CAAN,EAAS5F,MAAMc,SAAf,EAA0Bf,OAAOe,SAAjC,EAAb;SACON,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BuC,IAA/B,CAAoC,UAACxB,GAAD,EAAMoE,CAAN,EAAY;QAC1CsE,OAAO1I,GAAP,IAAcc,EAAE,CAAF,CAAlB,EAAwB;WACjBsD,CAAL,GAASA,CAAT;WACK5F,IAAL,GAAYwB,GAAZ;WACKzB,KAAL,GAAaQ,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EACXN,GAAGgK,uBAAH,GAA6B7E,OAA7B,CAAqC9D,GAArC,IAA4C,CADjC,CAAb;aAGO,KAAP;;WAEK,IAAP;GATF;;MAYI6G,KAAKrI,IAAL,KAAcc,SAAlB,EAA6B;;SAEtB8E,CAAL,GAAS,CAAT;SACK5F,IAAL,GAAYG,GAAGgK,uBAAH,GAA6B,CAA7B,CAAZ;SACKpK,KAAL,GAAaI,GAAGgK,uBAAH,GAA6B,CAA7B,CAAb;GAJF,MAKO,IAAI9B,KAAKtI,KAAL,KAAee,SAAnB,EAA8B;;SAE9B8E,CAAL,GAASrF,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAA/B,GAAwC,CAAjD;SACKQ,KAAL,GAAasI,KAAKrI,IAAlB;SACKA,IAAL,GAAYG,GAAGgK,uBAAH,GACV5J,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAA/B,GAAwC,CAD9B,CAAZ;;;SAKK8I,IAAP;CA5BF;;ACIA;;;;AAIA,IAAM+B,cAAc,SAAdA,WAAc,CAAClK,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoB+J,MAApB;SAA+B,YAAM;QACnD5H,IAAI+H,MAAMnK,MAAM8G,SAAN,CAAgBzC,IAAhB,EAAN,CAAR;;MAEE,CAAF,IAAOjC,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAcE,IAA5B;MACE,CAAF,IAAOsC,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAc+J,GAA5B;;QAEMxB,OAAO4B,mBAAmBrK,MAAnB,EAA2BO,EAA3B,EAA+B+J,MAA/B,EAAuC5H,CAAvC,CAAb;QACM4E,QAAQ;UACR5E,CADQ;YAEN+F,IAFM;YAGN6B,OAAO7B,KAAKrI,IAAZ,CAHM;YAINkK,OAAO7B,KAAKtI,KAAZ,CAJM;YAKN,CALM;YAMN+J,EAAElK,MAAF;KANR;;;UAUMuH,EAAN,CAAS,CAAT,IAAcW,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASd,MAAME,IAAf,EAAqB9E,EAAE,CAAF,CAArB,CAAT,EAAqC4E,MAAMuC,IAA3C,CAAd;UACMpC,EAAN,GAAWH,MAAMC,EAAN,CAASlI,KAAT,EAAX;;UAEMiJ,MAAN,CAAaG,KAAKzC,CAAlB,IAAuBsB,KAAvB;UACMgB,MAAN,CAAaW,MAAb,GAAsBR,KAAKzC,CAA3B;GArBkB;CAApB;;ACLA,IAAM7D,eAAa,SAAbA,UAAa,CAACK,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC5DoF,MAAMjI,OAAOkI,mBAAP,CAA2BvI,MAAMgI,MAAjC,EAAyC1F,MAAzC,CAAgD;aAAK,CAACkG,MAAMrH,CAAN,CAAN;KAAhD,CAAZ;;QAEIE,OAAJ,CAAY,aAAK;YACT2G,MAAN,CAAaW,MAAb,GAAsBxH,CAAtB;kBACYnB,KAAZ,EAAmBC,EAAnB;KAFF;cAIUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;GAPiB;CAAnB;;ACHA;AACA,IAAMkH,cAAc,SAAdA,WAAc;SAAc,UAACC,KAAD,EAAQC,MAAR,EAAmB;QAC7ChK,UAAOD,OAAOC,IAAP,CAAYC,UAAZ,CAAb;;WAEOD,QAAKwC,IAAL,CACL,UAAC3B,CAAD,EAAIuE,CAAJ;aACEvE,MAAMkJ,KAAN,GAAc3E,IAAIA,CAAJ,GAAQpF,QAAKjB,MAAb,IAAuBkB,WAAWmF,IAAI,CAAf,MAAsB4E,MAA3D,GAAoE,KADtE;KADK,CAAP;GAHkB;CAApB;;ACSA,IAAMhG,YAAU,SAAVA,OAAU,CAACpC,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwC8G,MAAxC;SAAmD,YAAM;QACnE/J,GAAGe,CAAH,OAAWJ,SAAX,IAAwBX,GAAGe,CAAH,OAAW,IAAvC,EAA6C;SACxCuD,UAAH;;;QAGI6E,QAAQC,MAAd;;;;UAIMrB,MAAN,CAAaW,MAAb,GAAsB/H,SAAtB;;;;;UAKMoH,MAAN,CAAarI,KAAb,GAAqB;aACnBK,MAAMgI,MAAN,CAAa/C,EAAb,MAAqBrE,SAArB,GACIA,SADJ,GAEIZ,MAAMgI,MAAN,CAAa/C,EAAb,EAAiBsE,IAAjB,GAAwBvJ,MAAMgI,MAAN,CAAa/C,EAAb,EAAiBiC,IAH1B;KAArB;;OAKGhD,EAAH,CAAM,oBAAN,EAA4B,YAAM;UAC1BoE,MAAMjI,OAAOkI,mBAAP,CAA2BvI,MAAMgI,MAAjC,EAAyC1F,MAAzC,CAAgD;eAAK,CAACkG,MAAMrH,CAAN,CAAN;OAAhD,CAAZ;;UAEImH,IAAIjJ,MAAJ,GAAa,CAAjB,EAAoB;;YAEdgC,OAAJ,CAAY,aAAK;cACT8G,OAAOnI,MAAMgI,MAAN,CAAa7G,CAAb,EAAgBgH,IAA7B;gBACMH,MAAN,CAAaW,MAAb,GAAsBxH,CAAtB;;;cAGI,CAACiJ,YAAY1K,OAAOa,UAAnB,EAA+B4H,KAAKrI,IAApC,EAA0CqI,KAAKtI,KAA/C,CAAL,EAA4D;wBAC9CG,KAAZ,EAAmBC,EAAnB;;SANJ;kBASUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;;KAdJ;;;OAmBGiD,SAAH,CACG/E,MADH,CACU,KADV,EAEGoD,MAFH,CAEU,GAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,QAHd,EAIGA,IAJH,CAKI,WALJ,EAMI,eAAe/E,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAc+J,GAAxD,GAA8D,GANlE;;;OAUG9H,UAAH,GAAgBA,aAAWK,UAAX,EAAuBlC,KAAvB,EAA8BN,MAA9B,EAAsCO,EAAtC,EAA0CiD,MAA1C,CAAhB;;UAGGgB,EADH,CACM,OADN,EACegG,YAAYlK,KAAZ,EAAmBN,MAAnB,EAA2BO,EAA3B,EAA+B+J,MAA/B,CADf,EAEG9F,EAFH,CAEM,MAFN,EAEcwF,OAAOxH,UAAP,EAAmBlC,KAAnB,EAA0BN,MAA1B,EAAkCO,EAAlC,EAAsCiD,MAAtC,CAFd,EAGGgB,EAHH,CAGM,KAHN,EAGa2E,UAAU3G,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CAHb;;;;;UAQM4D,SAAN,GAAkB7G,GAAGkG,SAAH,CACf/E,MADe,CACR,KADQ,EAEf+D,MAFe,CAER,MAFQ,EAEA,UAFA,EAGfV,IAHe,CAGV,IAHU,EAGJ,cAHI,EAIfA,IAJe,CAIV,GAJU,EAIL/E,OAAOE,MAAP,CAAcE,IAJT,EAKf2E,IALe,CAKV,GALU,EAKL/E,OAAOE,MAAP,CAAc+J,GALT,EAMflF,IANe,CAMV,OANU,EAMDhF,EAAEC,MAAF,CANC,EAOf+E,IAPe,CAOV,QAPU,EAOAmF,EAAElK,MAAF,IAAY,CAPZ,EAQfgF,KARe,CAQT,SARS,EAQE,CARF,EASfjD,IATe,CASV2H,KATU,CAAlB;GA1Dc;CAAhB;;ACNA,IAAMmB,kBAAkB,SAAlBA,eAAkB,CAACrI,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiC8G,MAAjC,EAA4C;MAC5DhK,QAAQ;YACJ,EADI;eAED;GAFb;;aAKW8E,KAAX,CAAiB,WAAjB,IAAgC;aACrBR,UAAQpC,UAAR,EAAoBlC,KAApB,EAA2BN,MAA3B,EAAmCO,EAAnC,EAAuCiD,MAAvC,EAA+C8G,MAA/C,CADqB;eAEnBrF,YAAU3E,KAAV,EAAiBC,EAAjB,CAFmB;cAGpBgC,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAHoB;gBAIlB;aAAMM,MAAMgI,MAAZ;;GAJd;CANF;;ACJA,IAAMrD,cAAY,SAAZA,SAAY,CAAC3E,KAAD,EAAQC,EAAR;SAAe,YAAM;OAClCkG,SAAH,CACG/E,MADH,CACU,KADV,EAEGA,MAFH,CAEU,QAFV,EAGGwD,MAHH;OAIGuB,SAAH,CACG/E,MADH,CACU,KADV,EAEGA,MAFH,CAEU,iBAFV,EAGGwD,MAHH;OAIGV,EAAH,CAAM,kBAAN,EAA0BtD,SAA1B;;WAEOX,GAAG4B,UAAV;;UAEMiF,SAAN,GAAkBlG,SAAlB;GAbgB;CAAlB;;ACAA,IAAM4J,cAAc,SAAdA,WAAc,CAACC,CAAD,EAAIpF,CAAJ;SAAUuC,KAAK8C,IAAL,CAAUD,IAAIA,CAAJ,GAAQpF,IAAIA,CAAtB,CAAV;CAApB;;ACEA;AACA,IAAMsF,cAAc,SAAdA,WAAc;SAClBC,QAAQhD,KAAKiD,EAAb,GAAkB,MAAMjD,KAAKiD,EAAX,GAAgBD,KAAlC,GAA0C,MAAMhD,KAAKiD,EAAX,GAAgBD,KADxC;CAApB;;;;;;;;AASA,IAAM7D,oBAAkB,SAAlBA,eAAkB;SAAO,aAAK;QAC9B+D,aAAaH,YAAYI,OAAID,UAAhB,CAAjB;QACIE,WAAWL,YAAYI,OAAIC,QAAhB,CAAf;;QAEIF,aAAaE,QAAjB,EAA2B;UACnBC,MAAMH,UAAZ;mBACaE,QAAb;iBACWC,GAAX;;;;WAIKR,KAAKK,UAAL,IAAmBL,KAAKO,QAA/B;GAXsB;CAAxB;;AAcA,IAAMjD,iBAAe,SAAfA,YAAe,CAAC/H,KAAD,EAAQN,MAAR;SAAmB,UAACyB,CAAD,EAAI8D,EAAJ,EAAW;QAC3C8F,SAAM/K,MAAMkL,IAAN,CAAWjG,EAAX,CAAZ;QACEgD,OAAOlB,kBAAgBgE,MAAhB,CADT;QAEE7C,KAAK6C,OAAI5C,IAAJ,CAASrI,IAFhB;QAGEsI,KAAK2C,OAAI5C,IAAJ,CAAStI,KAHhB;QAIE6H,KAAKhI,OAAOa,UAAP,CAAkB2H,EAAlB,EAAsB1G,MAJ7B;QAKEmG,KAAKjI,OAAOa,UAAP,CAAkB6H,EAAlB,EAAsB5G,MAL7B;QAMEiJ,IAAIzK,MAAMkL,IAAN,CAAWvL,KAAX,CAAiBsF,EAAjB,CANN;QAOEI,IAAIqC,GAAGvG,EAAE+G,EAAF,CAAH,IAAYP,GAAGxG,EAAEiH,EAAF,CAAH,CAPlB;QAQE+C,IAAIX,YAAYC,CAAZ,EAAepF,CAAf,CARN;QASEuF,QAAQhD,KAAKwD,IAAL,CAAU/F,IAAI8F,CAAd,CATV,CADiD;WAW1ClD,KAAK2C,KAAL,CAAP;GAXmB;CAArB;;AAcA,IAAM3I,aAAW,SAAXA,QAAW,CAACC,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA+B;MACxC4I,MAAMjI,OAAOkI,mBAAP,CAA2BvI,MAAMkL,IAAjC,EAAuC5I,MAAvC,CAA8C;WAAK,CAACkG,MAAMrH,CAAN,CAAN;GAA9C,CAAZ;MACMY,UAAUrC,OAAOpB,IAAvB;;MAEIgK,IAAIjJ,MAAJ,KAAe,CAAnB,EAAsB;WACb0C,OAAP;;;MAGI0G,YAAYV,eAAa/H,KAAb,EAAoBN,MAApB,CAAlB;;SAEOqC,QAAQO,MAAR,CAAe,aAAK;YACjBJ,WAAWS,SAAnB;WACO,KAAL;eACS2F,IAAI1F,KAAJ,CAAU;iBAAM6F,UAAUtH,CAAV,EAAa8D,EAAb,CAAN;SAAV,CAAP;WACG,IAAL;eACSqD,IAAIxF,IAAJ,CAAS;iBAAM2F,UAAUtH,CAAV,EAAa8D,EAAb,CAAN;SAAT,CAAP;;cAEM,IAAIlC,KAAJ,CAAU,6BAA6BrD,OAAOsD,cAA9C,CAAN;;GAPC,CAAP;CAVF;;ACxCA,IAAM0F,gBAAc,SAAdA,WAAc,CAAC1I,KAAD,EAAQC,EAAR,EAAe;MAC3B8K,SAAM/K,MAAMkL,IAAN,CAAWlL,MAAMkL,IAAN,CAAWvC,MAAtB,CAAZ;MACEC,MAAM3I,GAAGkG,SAAH,CAAa/E,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,QAAlC,CADR;;SAGOpB,MAAMkL,IAAN,CAAWlL,MAAMkL,IAAN,CAAWvC,MAAtB,CAAP;QACMuC,IAAN,CAAWvC,MAAX,GAAoB/H,SAApB;MACIK,SAAJ,CAAc,cAAc8J,OAAI5C,IAAJ,CAASzC,CAArC,EAAwCd,MAAxC;MACI3D,SAAJ,CAAc,gBAAgB8J,OAAI5C,IAAJ,CAASzC,CAAvC,EAA0Cd,MAA1C;MACI3D,SAAJ,CAAc,cAAc8J,OAAI5C,IAAJ,CAASzC,CAArC,EAAwCd,MAAxC;CARF;;ACGA,IAAMiE,cAAY,SAAZA,SAAY,CAAC3G,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC3D6H,SAAM/K,MAAMkL,IAAN,CAAWlL,MAAMkL,IAAN,CAAWvC,MAAtB,CAAZ;;;;QAIIoC,UAAOA,OAAI9D,EAAJ,CAAO,CAAP,MAAc8D,OAAI5D,EAAJ,CAAO,CAAP,CAArB,IAAkC4D,OAAI9D,EAAJ,CAAO,CAAP,MAAc8D,OAAI5D,EAAJ,CAAO,CAAP,CAApD,EAA+D;oBACjDnH,KAAZ,EAAmBC,EAAnB;;;QAGE8K,MAAJ,EAAS;UACDH,QAAQ5K,MAAMkL,IAAN,CAAWJ,UAAX,CAAsB9K,MAAMkL,IAAN,CAAWvC,MAAjC,CAAd;;aAEImC,UAAJ,GAAiBF,KAAjB;aACII,QAAJ,GAAeJ,KAAf;aACIG,GAAJ,CACGM,WADH,CACerL,MAAMkL,IAAN,CAAW7L,MAAX,CAAkBW,MAAMkL,IAAN,CAAWvC,MAA7B,CADf,EAEGmC,UAFH,CAEcF,KAFd,EAGGI,QAHH,CAGYJ,KAHZ;;;UAMIM,IAAN,CAAWvC,MAAX,GAAoB/H,SAApB;WACOmB,OAAP,GAAiBE,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAAjB;OACGkC,aAAH;WACOH,IAAP,CAAY,UAAZ,EAAwBxB,EAAxB,EAA4BP,OAAOqC,OAAnC;GAvBgB;CAAlB;;ACCA,IAAM+G,cAAY,SAAZA,SAAY,CAAC5G,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwC6H,MAAxC,EAA6ChC,WAA7C,EAA6D;MACvEH,MAAM3I,GAAGkG,SAAH,CAAa/E,MAAb,CAAoB,KAApB,EAA2BA,MAA3B,CAAkC,QAAlC,CAAZ;MACE6D,KAAK8F,OAAI5C,IAAJ,CAASzC,CADhB;MAEEuD,SAAS,CAAC8B,OAAI5D,EAAL,EAAS4D,OAAIO,EAAb,CAFX;MAGEpC,QAAQN,IACL3H,SADK,CACK,cAAcgE,EADnB,EAEL3G,IAFK,CAEA,CAAC,EAAE2I,IAAI8D,OAAI9D,EAAV,EAAcE,IAAI4D,OAAI5D,EAAtB,EAAD,EAA6B,EAAEF,IAAI8D,OAAI9D,EAAV,EAAcE,IAAI4D,OAAIO,EAAtB,EAA7B,CAFA,CAHV;MAMEnC,UAAUP,IAAI3H,SAAJ,CAAc,gBAAgBgE,EAA9B,EAAkC3G,IAAlC,CAAuC2K,MAAvC,CANZ;MAOEG,QAAQC,MAPV;MAQEkC,QAAQ3C,IAAI3H,SAAJ,CAAc,cAAcgE,EAA5B,EAAgC3G,IAAhC,CAAqC,CAACyM,MAAD,CAArC,CARV;;QAWG7F,KADH,GAEGV,MAFH,CAEU,MAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,SAASQ,EAHvB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,KAJjB,EAKGC,KALH,CAKS,MALT,EAKiB,QALjB,EAMGA,KANH,CAMS,SANT,EAMoB,GANpB;;QASGD,IADH,CACQ,GADR,EACasG,OAAIA,GADjB,EAEGtG,IAFH,CAEQ,WAFR,EAEqB,eAAesG,OAAI9D,EAAJ,CAAO,CAAP,CAAf,GAA2B,GAA3B,GAAiC8D,OAAI9D,EAAJ,CAAO,CAAP,CAAjC,GAA6C,GAFlE;;QAKG/B,KADH,GAEGV,MAFH,CAEU,MAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,SAASQ,EAHvB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,KAJjB;;QAOGA,IADH,CACQ,IADR,EACc;WAAKtD,EAAE8F,EAAF,CAAK,CAAL,CAAL;GADd,EAEGxC,IAFH,CAEQ,IAFR,EAEc;WAAKtD,EAAE8F,EAAF,CAAK,CAAL,CAAL;GAFd,EAGGxC,IAHH,CAGQ,IAHR,EAGc;WAAKtD,EAAEgG,EAAF,CAAK,CAAL,CAAL;GAHd,EAIG1C,IAJH,CAIQ,IAJR,EAIc;WAAKtD,EAAEgG,EAAF,CAAK,CAAL,CAAL;GAJd,EAKG1C,IALH,CAKQ,QALR,EAKkB,OALlB,EAMGA,IANH,CAMQ,cANR,EAMwB,CANxB;;QASGP,EADH,CACM,MADN,EACc,UAAC/C,CAAD,EAAIuE,CAAJ,EAAU;QACd4D,KAAKtH,KAAX;QACI0D,IAAI,CAAR;;WAEI,MAAMA,CAAV,EAAa,CAAb,IAAkBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAI7D,IAAJ,GAAW,CAApB,EAAuBoC,GAAG9B,CAA1B,CAAT,EAAuCuD,OAAIxB,IAA3C,CAAlB;WACI,MAAM7D,CAAV,EAAa,CAAb,IAAkBkC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAIvB,IAAb,EAAmBF,GAAG7B,CAAtB,CAAT,EAAmCsD,OAAItB,IAAvC,CAAlB;;QAEMmB,QACJlF,MAAM,CAAN,GAAU1F,MAAMkL,IAAN,CAAWJ,UAAX,CAAsB7F,EAAtB,CAAV,GAAsCjF,MAAMkL,IAAN,CAAWF,QAAX,CAAoB/F,EAApB,CADxC;;QAIG8F,OAAID,UAAJ,GAAiBlD,KAAKiD,EAAtB,IACCE,OAAIC,QAAJ,GAAepD,KAAKiD,EADrB,IAECD,QAAQhD,KAAKiD,EAFf,IAGCE,OAAID,UAAJ,IAAkBlD,KAAKiD,EAAvB,IACCE,OAAIC,QAAJ,IAAgBpD,KAAKiD,EADtB,IAECD,SAAShD,KAAKiD,EANlB,EAOE;UACInF,MAAM,CAAV,EAAa;eACPsF,QAAJ,GAAeJ,KAAf;eACIG,GAAJ,CAAQC,QAAR,CAAiBJ,KAAjB;OAFF,MAGO,IAAIlF,MAAM,CAAV,EAAa;eACdoF,UAAJ,GAAiBF,KAAjB;eACIG,GAAJ,CAAQD,UAAR,CAAmBF,KAAnB;;;;cAIM1I,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiD6H,MAAjD,EAAsDrF,IAAI,CAA1D;GA5BJ,EA8BGxB,EA9BH,CA8BM,KA9BN,EA8Ba2E,YAAU3G,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CA9Bb;;UAiCGgC,KADH,GAEGV,MAFH,CAEU,QAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,SAASQ,EAHvB,EAIGR,IAJH,CAIQ,OAJR,EAIiB,KAJjB;;UAOGA,IADH,CACQ,IADR,EACc;WAAKtD,EAAE,CAAF,CAAL;GADd,EAEGsD,IAFH,CAEQ,IAFR,EAEc;WAAKtD,EAAE,CAAF,CAAL;GAFd,EAGGsD,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGC,KAJH,CAKI,SALJ,EAMI,UAACvD,CAAD,EAAIuE,CAAJ;WAAWqD,gBAAgBnI,SAAhB,IAA6B8E,MAAMqD,WAAnC,GAAiD,GAAjD,GAAuD,CAAlE;GANJ,EAQG7E,EARH,CAQM,WARN,EAQmB,YAAW;WACnB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,GAA9B;GATJ,EAWGR,EAXH,CAWM,UAXN,EAWkB,YAAW;WAClB,IAAP,EAAaQ,KAAb,CAAmB,SAAnB,EAA8B,CAA9B;GAZJ,EAcGjD,IAdH,CAcQ2H,KAdR;CA3EF;;AA4FA,IAAMM,WAAS,SAATA,MAAS,CAACxH,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QACxDoG,KAAKtH,KAAX;QACE+I,SAAM/K,MAAMkL,IAAN,CAAWlL,MAAMkL,IAAN,CAAWvC,MAAtB,CADR;;;WAIIxB,EAAJ,CAAO,CAAP,IAAYS,KAAKC,GAAL,CACVD,KAAKE,GAAL,CAASiD,OAAI7D,IAAJ,GAAW,CAApB,EAAuBoC,GAAG9B,CAAH,GAAO9H,OAAOE,MAAP,CAAcE,IAA5C,CADU,EAEViL,OAAIxB,IAFM,CAAZ;WAIIpC,EAAJ,CAAO,CAAP,IAAYS,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAIvB,IAAb,EAAmBF,GAAG7B,CAAH,GAAO/H,OAAOE,MAAP,CAAc+J,GAAxC,CAAT,EAAuDoB,OAAItB,IAA3D,CAAZ;WACI6B,EAAJ,GAASP,OAAI5D,EAAJ,CAAOpI,KAAP,EAAT;gBACUmD,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,EAAiD6H,MAAjD,EAAsD,CAAtD;GAXa;CAAf;;AC3FA;;;;AAIA,IAAMb,gBAAc,SAAdA,WAAc,CAAClK,KAAD,EAAQN,MAAR,EAAgBO,EAAhB,EAAoB+J,MAApB;SAA+B,YAAM;QACjD5H,IAAI+H,MAAMnK,MAAM8G,SAAN,CAAgBzC,IAAhB,EAAN,CAAV;;MAEE,CAAF,IAAOjC,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAcE,IAA5B;MACE,CAAF,IAAOsC,EAAE,CAAF,IAAO1C,OAAOE,MAAP,CAAc+J,GAA5B;;QAEMxB,OAAO4B,mBAAmBrK,MAAnB,EAA2BO,EAA3B,EAA+B+J,MAA/B,EAAuC5H,CAAvC,CAAb;QACM2I,SAAM;UACN3I,CADM;YAEJ+F,IAFI;YAGJ6B,OAAO7B,KAAKrI,IAAZ,CAHI;YAIJkK,OAAO7B,KAAKtI,KAAZ,CAJI;YAKJ,CALI;YAMJ+J,EAAElK,MAAF,CANI;kBAOEkB,SAPF;gBAQAA,SARA;WASL4K,MAAQC,WAAR,CAAoB,CAApB;KATP;;;WAaIxE,EAAJ,CAAO,CAAP,IAAYW,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASiD,OAAI7D,IAAb,EAAmB9E,EAAE,CAAF,CAAnB,CAAT,EAAmC2I,OAAIxB,IAAvC,CAAZ;WACIpC,EAAJ,GAAS4D,OAAI9D,EAAJ,CAAOlI,KAAP,EAAT;WACIuM,EAAJ,GAASP,OAAI9D,EAAJ,CAAOlI,KAAP,EAAT;;UAEMmM,IAAN,CAAW/C,KAAKzC,CAAhB,IAAqBqF,MAArB;UACMG,IAAN,CAAWvC,MAAX,GAAoBR,KAAKzC,CAAzB;GAzBkB;CAApB;;ACNA,IAAM7D,eAAa,SAAbA,UAAa,CAACK,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC;SAA2C,YAAM;QAC5DoF,MAAMjI,OAAOkI,mBAAP,CAA2BvI,MAAMkL,IAAjC,EAAuC5I,MAAvC,CAA8C;aAAK,CAACkG,MAAMrH,CAAN,CAAN;KAA9C,CAAZ;;QAEIE,OAAJ,CAAY,aAAK;YACT6J,IAAN,CAAWvC,MAAX,GAAoBxH,CAApB;oBACYnB,KAAZ,EAAmBC,EAAnB;KAFF;gBAIUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;GAPiB;CAAnB;;ACSA;AACA,IAAM0H,QAAQ,SAARA,KAAQ,CAAC3D,EAAD,EAAKE,EAAL,EAAY;MAClBsD,IAAIxD,GAAG,CAAH,IAAQE,GAAG,CAAH,CAAlB;MACE9B,IAAI4B,GAAG,CAAH,IAAQE,GAAG,CAAH,CADd;MAEEgE,IAAIX,YAAYC,CAAZ,EAAepF,CAAf,CAFN;;SAIOuC,KAAKwD,IAAL,CAAU/F,IAAI8F,CAAd,CAAP;CALF;;AAQA,IAAMH,WAAW,SAAXA,QAAW;SAAS,cAAM;QACxBD,SAAM/K,MAAMkL,IAAN,CAAWjG,EAAX,CAAZ;QACI8F,WAAQnK,SAAZ,EAAuB;aACdA,SAAP;;QAEE8K,SAASd,MAAMG,OAAI9D,EAAV,EAAc8D,OAAI5D,EAAlB,CAAb;QACEwE,SAAS,CAACD,MAAD,GAAU9D,KAAKiD,EAAL,GAAU,CAD/B;;QAGIE,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAI5D,EAAJ,CAAO,CAAP,CAAhB,EAA2B;eAChB,IAAIS,KAAKiD,EAAT,GAAcc,MAAvB;;;WAGKA,MAAP;GAZe;CAAjB;;AAeA,IAAMb,aAAa,SAAbA,UAAa;SAAS,cAAM;QAC1BC,SAAM/K,MAAMkL,IAAN,CAAWjG,EAAX,CAAZ;QACI8F,WAAQnK,SAAZ,EAAuB;aACdA,SAAP;;;QAGE8K,SAASd,MAAMG,OAAI9D,EAAV,EAAc8D,OAAIO,EAAlB,CAAb;QACEK,SAAS,CAACD,MAAD,GAAU9D,KAAKiD,EAAL,GAAU,CAD/B;;QAGIE,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAIO,EAAJ,CAAO,CAAP,CAAhB,EAA2B;eAChB,IAAI1D,KAAKiD,EAAT,GAAcc,MAAvB;;;WAGKA,MAAP;GAbiB;CAAnB;;AAgBA,IAAMtM,SAAS,SAATA,MAAS;SAAS,cAAM;QACtB0L,SAAM/K,MAAMkL,IAAN,CAAWjG,EAAX,CAAZ;;QAEI8F,WAAQnK,SAAZ,EAAuB;aACdA,SAAP;;;QAGI6J,IAAIM,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAI5D,EAAJ,CAAO,CAAP,CAAtB;QACE9B,IAAI0F,OAAI9D,EAAJ,CAAO,CAAP,IAAY8D,OAAI5D,EAAJ,CAAO,CAAP,CADlB;;WAGOqD,YAAYC,CAAZ,EAAepF,CAAf,CAAP;GAVa;CAAf;;AAaA,IAAMf,YAAU,SAAVA,OAAU,CAACpC,UAAD,EAAalC,KAAb,EAAoBN,MAApB,EAA4BO,EAA5B,EAAgCiD,MAAhC,EAAwC8G,MAAxC;SAAmD,YAAM;QACnE,CAAC/J,GAAGe,CAAH,EAAL,EAAa;SACRuD,UAAH;;;QAGI6E,QAAQC,MAAd;;;;UAIM6B,IAAN,CAAWvC,MAAX,GAAoB/H,SAApB;;;;;UAKMsK,IAAN,CAAWvL,KAAX,GAAmB,cAAM;UACjBoL,SAAM/K,MAAMkL,IAAN,CAAWjG,EAAX,CAAZ;aACO8F,WAAQnK,SAAR,GAAoBA,SAApB,GAAgCmK,OAAIxB,IAAJ,GAAWwB,OAAI7D,IAAtD;KAFF;;;UAMMgE,IAAN,CAAWF,QAAX,GAAsBA,SAAShL,KAAT,CAAtB;UACMkL,IAAN,CAAWJ,UAAX,GAAwBA,WAAW9K,KAAX,CAAxB;UACMkL,IAAN,CAAW7L,MAAX,GAAoBA,OAAOW,KAAP,CAApB;;OAEGkE,EAAH,CAAM,kBAAN,EAA0B,YAAM;UACxBoE,MAAMjI,OAAOkI,mBAAP,CAA2B2C,IAA3B,EAAiC5I,MAAjC,CAAwC;eAAK,CAACkG,MAAMrH,CAAN,CAAN;OAAxC,CAAZ;;UAEImH,IAAIjJ,MAAJ,GAAa,CAAjB,EAAoB;;YAEdgC,OAAJ,CAAY,aAAK;cACT8G,OAAO+C,KAAK/J,CAAL,EAAQgH,IAArB;gBACM+C,IAAN,CAAWvC,MAAX,GAAoBxH,CAApB;;;cAGI,CAACiJ,YAAYjC,IAAZ,EAAkBA,KAAKrI,IAAvB,EAA6BqI,KAAKtI,KAAlC,CAAL,EAA+C;0BACjCG,KAAZ,EAAmBC,EAAnB;;SANJ;oBASUiC,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC;;KAdJ;;;OAmBGiD,SAAH,CACG/E,MADH,CACU,KADV,EAEGoD,MAFH,CAEU,GAFV,EAGGC,IAHH,CAGQ,IAHR,EAGc,MAHd,EAIGA,IAJH,CAKI,WALJ,EAMI,eAAe/E,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAc+J,GAAxD,GAA8D,GANlE;;;OAUG9H,UAAH,GAAgBA,aAAWK,UAAX,EAAuBlC,KAAvB,EAA8BN,MAA9B,EAAsCO,EAAtC,EAA0CiD,MAA1C,CAAhB;;UAGGgB,EADH,CACM,OADN,EACegG,cAAYlK,KAAZ,EAAmBN,MAAnB,EAA2BO,EAA3B,EAA+B+J,MAA/B,CADf,EAEG9F,EAFH,CAEM,MAFN,EAEcwF,SAAOxH,UAAP,EAAmBlC,KAAnB,EAA0BN,MAA1B,EAAkCO,EAAlC,EAAsCiD,MAAtC,CAFd,EAGGgB,EAHH,CAGM,KAHN,EAGa2E,YAAU3G,UAAV,EAAsBlC,KAAtB,EAA6BN,MAA7B,EAAqCO,EAArC,EAAyCiD,MAAzC,CAHb;;;;;UAQM4D,SAAN,GAAkB7G,GAAGkG,SAAH,CACf/E,MADe,CACR,KADQ,EAEf+D,MAFe,CAER,MAFQ,EAEA,QAFA,EAGfV,IAHe,CAGV,IAHU,EAGJ,YAHI,EAIfA,IAJe,CAIV,GAJU,EAIL/E,OAAOE,MAAP,CAAcE,IAJT,EAKf2E,IALe,CAKV,GALU,EAKL/E,OAAOE,MAAP,CAAc+J,GALT,EAMflF,IANe,CAMV,OANU,EAMDhF,EAAEC,MAAF,CANC,EAOf+E,IAPe,CAOV,QAPU,EAOAmF,EAAElK,MAAF,IAAY,CAPZ,EAQfgF,KARe,CAQT,SARS,EAQE,CARF,EASfjD,IATe,CASV2H,KATU,CAAlB;GA/Dc;CAAhB;;AC7DA,IAAMwC,sBAAsB,SAAtBA,mBAAsB,CAAC1J,UAAD,EAAaxC,MAAb,EAAqBO,EAArB,EAAyBiD,MAAzB,EAAiC8G,MAAjC,EAA4C;MAChEhK,QAAQ;UACN,EADM;eAED;GAFb;;aAKW8E,KAAX,CAAiB,SAAjB,IAA8B;aACnBR,UAAQpC,UAAR,EAAoBlC,KAApB,EAA2BN,MAA3B,EAAmCO,EAAnC,EAAuCiD,MAAvC,EAA+C8G,MAA/C,CADmB;eAEjBrF,YAAU3E,KAAV,EAAiBC,EAAjB,CAFiB;cAGlBgC,WAASC,UAAT,EAAqBlC,KAArB,EAA4BN,MAA5B,CAHkB;gBAIhB;aAAMM,MAAMkL,IAAZ;;GAJd;CANF;;ACJA;;AAEA,IAAMW,eAAe,SAAfA,YAAe,CAACpB,CAAD,EAAIpF,CAAJ,EAAO8F,CAAP,EAAUhK,CAAV,EAAgB;SAC5B;OAEH,CAAC,CAACsJ,EAAEjD,CAAF,GAAMnC,EAAEoC,CAAR,GAAYgD,EAAEhD,CAAF,GAAMpC,EAAEmC,CAArB,KAA2B2D,EAAE3D,CAAF,GAAMrG,EAAEqG,CAAnC,IACC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEmC,CAAT,KAAe2D,EAAE3D,CAAF,GAAMrG,EAAEsG,CAAR,GAAY0D,EAAE1D,CAAF,GAAMtG,EAAEqG,CAAnC,CADF,KAEC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEmC,CAAT,KAAe2D,EAAE1D,CAAF,GAAMtG,EAAEsG,CAAvB,IAA4B,CAACgD,EAAEhD,CAAF,GAAMpC,EAAEoC,CAAT,KAAe0D,EAAE3D,CAAF,GAAMrG,EAAEqG,CAAvB,CAF7B,CAFG;OAMH,CAAC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEoC,CAAR,GAAYgD,EAAEhD,CAAF,GAAMpC,EAAEmC,CAArB,KAA2B2D,EAAE1D,CAAF,GAAMtG,EAAEsG,CAAnC,IACC,CAACgD,EAAEhD,CAAF,GAAMpC,EAAEoC,CAAT,KAAe0D,EAAE3D,CAAF,GAAMrG,EAAEsG,CAAR,GAAY0D,EAAE1D,CAAF,GAAMtG,EAAEqG,CAAnC,CADF,KAEC,CAACiD,EAAEjD,CAAF,GAAMnC,EAAEmC,CAAT,KAAe2D,EAAE1D,CAAF,GAAMtG,EAAEsG,CAAvB,IAA4B,CAACgD,EAAEhD,CAAF,GAAMpC,EAAEoC,CAAT,KAAe0D,EAAE3D,CAAF,GAAMrG,EAAEqG,CAAvB,CAF7B;GANJ;CADF;;ACFA;;AAEA,IAAMsE,iBAAiB,SAAjBA,cAAiB;SAAM,oBAAY;;QAEjCC,mBAAmBC,OAAOD,gBAAP,IAA2B,CAApD;;;QAGME,eAAetG,SAASuG,aAAT,CAAuB,QAAvB,CAArB;iBACavM,KAAb,GAAqBM,GAAGkM,MAAH,CAAUC,UAAV,CAAqBC,WAArB,GAAmCN,gBAAxD;iBACalC,MAAb,GACE,CAAC5J,GAAGkM,MAAH,CAAUC,UAAV,CAAqBE,YAArB,GAAoC,EAArC,IAA2CP,gBAD7C;iBAEarH,KAAb,CAAmB/E,KAAnB,GAA2BsM,aAAatM,KAAb,GAAqBoM,gBAArB,GAAwC,IAAnE;iBACarH,KAAb,CAAmBmF,MAAnB,GAA4BoC,aAAapC,MAAb,GAAsBkC,gBAAtB,GAAyC,IAArE;;;QAGMQ,UAAUN,aAAaO,UAAb,CAAwB,IAAxB,CAAhB;YACQC,SAAR,GAAoB,SAApB;YACQC,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBT,aAAatM,KAApC,EAA2CsM,aAAapC,MAAxD;;;SAGK,IAAM8C,GAAX,IAAkB1M,GAAGkM,MAArB,EAA6B;cACnBS,SAAR,CACE3M,GAAGkM,MAAH,CAAUQ,GAAV,CADF,EAEE,CAFF,EAGE,KAAKZ,gBAHP,EAIEE,aAAatM,KAJf,EAKEsM,aAAapC,MAAb,GAAsB,KAAKkC,gBAL7B;;;;QAUIc,SAASb,OAAOc,GAAP,IAAcd,OAAOe,SAArB,IAAkCf,MAAjD;QACMgB,aAAa,IAAIC,aAAJ,EAAnB;QACMC,SAASF,WAAWG,iBAAX,CACblN,GAAGkG,SAAH,CAAa/E,MAAb,CAAoB,KAApB,EAA2BiD,IAA3B,EADa,CAAf;;;QAKM+I,MAAM,+BAA+BpB,OAAOqB,IAAP,CAAYH,MAAZ,CAA3C;QACMI,MAAM,IAAIC,KAAJ,EAAZ;QACIC,MAAJ,GAAa,YAAM;cACTZ,SAAR,CACEU,GADF,EAEE,CAFF,EAGE,CAHF,EAIEA,IAAI3N,KAAJ,GAAYoM,gBAJd,EAKEuB,IAAIzD,MAAJ,GAAakC,gBALf;UAOI,OAAO0B,QAAP,KAAoB,UAAxB,EAAoC;iBACzBxB,YAAT;;KATJ;QAYImB,GAAJ,GAAUA,GAAV;GAlDqB;CAAvB;;ACAA,IAAMnL,aAAW,SAAXA,QAAW,CAACvC,MAAD,EAASO,EAAT;SAAgB,YAAM;QACjCoC,UAAU,EAAd;QACIjC,UAAU,EAAd;QACIsN,SAAS,EAAb;;;QAGIhO,OAAOQ,OAAP,CAAeb,MAAf,KAA0B,CAA9B,EAAiC;UAC3BsO,QAAQ1N,GACTe,CADS,GAETC,SAFS,CAEC,QAFD,EAGT0M,KAHS,EAAZ;WAIK,IAAIlH,IAAI,CAAb,EAAgBA,IAAIkH,MAAMtO,MAA1B,EAAkCoH,GAAlC,EAAuC;YACjC5F,eAAe8M,MAAMlH,CAAN,CAAf,MAA6B,IAAjC,EAAuC;kBAC7BT,IAAR,CAAa2H,MAAMlH,CAAN,EAASmH,QAAtB;cACIC,SAAS,EAAb;cACIC,SAASjN,eAAe8M,MAAMlH,CAAN,CAAf,CAAb;cAEE,OAAO/G,OAAOa,UAAP,CAAkBoN,MAAMlH,CAAN,EAASmH,QAA3B,EAAqCpM,MAArC,CAA4CuM,MAA5C,GAAqD,CAArD,CAAP,KACA,QAFF,EAGE;iBACK,IAAIrI,IAAI,CAAb,EAAgBA,IAAIoI,OAAOzO,MAA3B,EAAmCqG,GAAnC,EAAwC;kBAEpCrD,QAAQ2L,QAAR,CAAiBL,MAAMlH,CAAN,EAASmH,QAA1B,KACAlO,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBL,MAAMlH,CAAN,EAASmH,QAAlC,CAFF,EAGE;uBACO5H,IAAP,CACEtG,OAAOa,UAAP,CAAkBoN,MAAMlH,CAAN,EAASmH,QAA3B,EAAqCpM,MAArC,CAA4CgB,MAA5C,CAAmDsL,OAAOpI,CAAP,CAAnD,CADF;eAJF,MAOO,IAAIhG,OAAOa,UAAP,CAAkBoN,MAAMlH,CAAN,EAASmH,QAA3B,EAAqCpM,MAArC,OAAkD,CAAtD,EAAyD;uBACvD0M,OAAP,CACExO,OAAOa,UAAP,CAAkBoN,MAAMlH,CAAN,EAASmH,QAA3B,EAAqCpM,MAArC,CAA4CgB,MAA5C,CAAmDsL,OAAOpI,CAAP,CAAnD,CADF;;;oBAKIM,IAAR,CAAa6H,MAAb;iBACK,IAAIM,KAAK,CAAd,EAAiBA,KAAK/N,QAAQf,MAA9B,EAAsC8O,IAAtC,EAA4C;kBACtC/N,QAAQ+N,EAAR,EAAY9O,MAAZ,KAAuB,CAA3B,EAA8B;wBACpB8O,EAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;WArBN,MAwBO;mBACER,MAAMlH,CAAN,EAASmH,QAAhB,IAA4B/M,eAAe8M,MAAMlH,CAAN,CAAf,CAA5B;gBACI2H,WAAW1O,OAAOa,UAAP,CAAkBoN,MAAMlH,CAAN,EAASmH,QAA3B,EAAqCpM,MAArC,CAA4CiC,KAA5C,EAAf;gBACI4K,YAAY3O,OAAOa,UAAP,CAAkBoN,MAAMlH,CAAN,EAASmH,QAA3B,EAAqCpM,MAArC,CAA4CuM,MAA5C,EAAhB;iBACK,IAAIxH,IAAI,CAAb,EAAgBA,IAAI6H,SAAS/O,MAA7B,EAAqCkH,GAArC,EAA0C;kBAEtC6H,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CAAf,IACAM,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CADf,IAEAzL,QAAQ2L,QAAR,CAAiBL,MAAMlH,CAAN,EAASmH,QAA1B,CAFA,IAGAlO,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBL,MAAMlH,CAAN,EAASmH,QAAlC,CAJF,EAKE;uBACO5H,IAAP,CAAYoI,SAAS7H,CAAT,CAAZ;eANF,MAOO,IAAI6H,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CAAf,IAA4BM,SAAS7H,CAAT,KAAeuH,OAAO,CAAP,CAA/C,EAA0D;uBACxDI,OAAP,CAAeE,SAAS7H,CAAT,CAAf;;;oBAGIP,IAAR,CAAa6H,MAAb;iBACK,IAAIM,MAAK,CAAd,EAAiBA,MAAK/N,QAAQf,MAA9B,EAAsC8O,KAAtC,EAA4C;kBACtC/N,QAAQ+N,GAAR,EAAY9O,MAAZ,KAAuB,CAA3B,EAA8B;wBACpB8O,GAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;;;;;UAOJ1L,SAAS;cACP,cAAStB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;cAC1BwM,WAAWnN,EAAEiB,CAAF,CAAf;cACImM,gBAAgB7O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBuM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;cAGIE,qBAAqB9O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BiC,KAA5B,GACvB8K,aADuB,CAAzB;iBAIEC,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAAtB,IACAoM,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAFxB;SATW;gBAcL,gBAASjB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;iBACzB1B,QAAQ0B,SAAR,EAAmB,CAAnB,KAAyBX,EAAEiB,CAAF,CAAzB,IAAiCjB,EAAEiB,CAAF,KAAQhC,QAAQ0B,SAAR,EAAmB,CAAnB,CAAhD;SAfW;gBAiBL,gBAASX,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;cAC5BwM,WAAWnN,EAAEiB,CAAF,CAAf;cACImM,gBAAgB7O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBuM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;cAGIE,qBAAqB9O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BiC,KAA5B,GACvB8K,aADuB,CAAzB;iBAIEC,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAAtB,IACAoM,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAFxB;;OAzBJ;aA+BO1C,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB;eACxBD,QAAQO,KAAR,CAAc,UAACR,CAAD,EAAIN,SAAJ;iBACZW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CADY;SAAd,CADwB;OAAnB,CAAP;KA3FF,MAgGO;;;;UAID2M,iBAAiB,EAArB;;iCACSC,GALJ;YAMC/N,QAAQjB,OAAOQ,OAAP,CAAewO,GAAf,CAAZ;YACIb,SAAS,EAAb;YACIC,SAASnN,MAAMG,MAAnB;YACIuB,UAAU,CAAC1B,MAAMrC,IAAP,CAAd;YAEE,OAAOoB,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCuM,MAArC,GAA8C,CAA9C,CAAP,KAA4D,QAD9D,EAEE;eACK,IAAIrI,KAAI,CAAb,EAAgBA,KAAIoI,OAAOzO,MAA3B,EAAmCqG,IAAnC,EAAwC;gBAEpCrD,QAAQ2L,QAAR,CAAiBrN,MAAMrC,IAAvB,KACAoB,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBrN,MAAMrC,IAA/B,CAFF,EAGE;qBACO0H,IAAP,CAAYtG,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgB,MAArC,CAA4CsL,OAAOpI,EAAP,CAA5C,CAAZ;aAJF,MAKO,IAAIhG,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,OAA2C,CAA/C,EAAkD;qBAChD0M,OAAP,CACExO,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCgB,MAArC,CAA4CsL,OAAOpI,EAAP,CAA5C,CADF;;;kBAKIM,IAAR,CAAa6H,MAAb;eACK,IAAIM,OAAK,CAAd,EAAiBA,OAAK/N,QAAQf,MAA9B,EAAsC8O,MAAtC,EAA4C;gBACtC/N,QAAQ+N,IAAR,EAAY9O,MAAZ,KAAuB,CAA3B,EAA8B;sBACpB8O,IAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;SAlBN,MAqBO;iBACExN,MAAMrC,IAAb,IAAqBqC,MAAMG,MAA3B;cACIsN,YAAW1O,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCiC,KAArC,EAAf;cACI4K,aAAY3O,OAAOa,UAAP,CAAkBI,MAAMrC,IAAxB,EAA8BkD,MAA9B,CAAqCuM,MAArC,EAAhB;eACK,IAAIxH,KAAI,CAAb,EAAgBA,KAAI6H,UAAS/O,MAA7B,EAAqCkH,IAArC,EAA0C;gBAEtC6H,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CAAf,IACAM,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CADf,IAEAzL,QAAQ2L,QAAR,CAAiBrN,MAAMrC,IAAvB,CAFA,IAGAoB,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBrN,MAAMrC,IAA/B,CAJF,EAKE;qBACO0H,IAAP,CAAYoI,UAAS7H,EAAT,CAAZ;aANF,MAOO,IAAI6H,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CAAf,IAA4BM,UAAS7H,EAAT,KAAeuH,OAAO,CAAP,CAA/C,EAA0D;qBACxDI,OAAP,CAAeE,UAAS7H,EAAT,CAAf;;;kBAGIP,IAAR,CAAa6H,MAAb;eACK,IAAIM,OAAK,CAAd,EAAiBA,OAAK/N,QAAQf,MAA9B,EAAsC8O,MAAtC,EAA4C;gBACtC/N,QAAQ+N,IAAR,EAAY9O,MAAZ,KAAuB,CAA3B,EAA8B;sBACpB8O,IAAR,IAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;;;;YAIF1L,SAAS;gBACL,cAAStB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;gBAC1BwM,WAAWnN,EAAEiB,CAAF,CAAf;gBACImM,gBAAgB7O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBuM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;gBAGIE,qBAAqB9O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BiC,KAA5B,GACvB8K,aADuB,CAAzB;mBAIEC,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAAtB,IACAoM,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAFxB;WATS;kBAcH,gBAASjB,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;mBACzB1B,QAAQsO,GAAR,EAAa,CAAb,KAAmBvN,EAAEiB,CAAF,CAAnB,IAA2BjB,EAAEiB,CAAF,KAAQhC,QAAQsO,GAAR,EAAa,CAAb,CAA1C;WAfS;kBAiBH,gBAASvN,CAAT,EAAYiB,CAAZ,EAAeN,SAAf,EAA0B;gBAC5BwM,WAAWnN,EAAEiB,CAAF,CAAf;gBACImM,gBAAgB7O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CACjBuM,MADiB,GAEjB3I,OAFiB,CAETkJ,QAFS,CAApB;gBAGIE,qBAAqB9O,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BiC,KAA5B,GACvB8K,aADuB,CAAzB;mBAIEC,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAAtB,IACAoM,sBAAsBd,OAAOtL,CAAP,EAAU,CAAV,CAFxB;;SAzBJ;;;;;YAmCIuM,WAAWjP,OAAOpB,IAAP,CAAYgE,MAAZ,CAAmB;iBAChCD,QAAQO,KAAR,CAAc,UAACR,CAAD,EAAIN,SAAJ;mBACZW,OAAO/C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAA5B,EAAkC1B,CAAlC,EAAqCiB,CAArC,EAAwCN,SAAxC,CADY;WAAd,CADgC;SAAnB,CAAf;aAKK,IAAI8M,IAAI,CAAb,EAAgBA,IAAID,SAAStP,MAA7B,EAAqCuP,GAArC,EAA0C;yBACzB5I,IAAf,CAAoB2I,SAASC,CAAT,CAApB;;kBAEQ,EAAV;iBACS,EAAT;;;WA7FG,IAAIF,MAAM,CAAf,EAAkBA,MAAMhP,OAAOQ,OAAP,CAAeb,MAAvC,EAA+CqP,KAA/C,EAAsD;cAA7CA,GAA6C;;aA+F/CD,cAAP;;GA1Ma;CAAjB;;ACFA,IAAMzL,iBAAiB,SAAjBA,cAAiB,CAACd,UAAD,EAAaxC,MAAb,EAAqBO,EAArB;SAA4B,YAAsB;QAArB0C,SAAqB,uEAAT,IAAS;;QACnEA,cAAc,IAAlB,EAAwB;aACfT,WAAWS,SAAlB;;;gBAGUkM,OAAOlM,SAAP,EAAkBmM,WAAlB,EAAZ;QACInM,cAAc,KAAd,IAAuBA,cAAc,IAAzC,EAA+C;YACvC,IAAII,KAAJ,CAAU,uBAAuBJ,SAAjC,CAAN;;;eAGSA,SAAX,GAAuBA,SAAvB;WACOZ,OAAP,GAAiBG,WAAW6M,WAAX,GAAyB9M,QAAzB,EAAjB;OACGL,aAAH;WACO3B,EAAP;GAbqB;CAAvB;;AAgBA,IAAM+O,YAAY,SAAZA,SAAY,CAAC9M,UAAD,EAAaxC,MAAb,EAAqBO,EAArB;SAA4B,YAAiB;QAAhBgP,IAAgB,uEAAT,IAAS;;QACzDA,SAAS,IAAb,EAAmB;aACV/M,WAAW+M,IAAlB;;;QAGEhP,GAAGiP,UAAH,GAAgB9J,OAAhB,CAAwB6J,IAAxB,MAAkC,CAAC,CAAvC,EAA0C;YAClC,IAAIlM,KAAJ,CAAU,2CAA2CkM,IAArD,CAAN;;;;;QAKEA,SAAS/M,WAAW+M,IAAxB,EAA8B;;;UAGxB/M,WAAW+M,IAAX,KAAoB,MAAxB,EAAgC;WAC3BpN,UAAH;;;;iBAISiD,KAAX,CAAiB5C,WAAW+M,IAA5B,EAAkCtK,SAAlC,CAA4C1E,EAA5C;;iBAEWgP,IAAX,GAAkBA,IAAlB;iBACWnK,KAAX,CAAiB5C,WAAW+M,IAA5B,EAAkC3K,OAAlC;UACI2K,SAAS,MAAb,EAAqB;eACZhP,GAAG+C,cAAV;OADF,MAEO;WACFA,cAAH,GAAoBA,eAAed,UAAf,EAA2BxC,MAA3B,EAAmCO,EAAnC,CAApB;;;;WAIGA,EAAP;GA9BgB;CAAlB;;AChBA;;;;;;;AAOA,IAAMkP,kBAAkB,SAAlBA,eAAkB;SAAU;WAChCzP,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBiO,KAArB,GAA6B1P,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBiO,KAAlD,GAA0DjO,CAD1B;GAAV;CAAxB;;ACLA,IAAMkO,uBAAuB,SAAvBA,oBAAuB,CAAC3P,MAAD,EAASO,EAAT,EAAaqD,IAAb;SAC3B,UAASxB,SAAT,EAAoB;OACfwN,IAAH,CAAQxN,SAAR;OACGD,UAAH,CAAcC,SAAd;WACO,KAAKyN,aAAZ,EACGC,UADH,GAEGC,QAFH,CAEY/P,OAAOgQ,aAFnB,EAGGjO,IAHH,CAGQ6B,KAAKqM,KAAL,CAAWjQ,OAAOa,UAAP,CAAkBuB,SAAlB,EAA6BN,MAAxC,CAHR;OAIGjD,MAAH;GARyB;CAA7B;;ACAA,IAAMqR,eAAe,SAAfA,YAAe,CAAClQ,MAAD,EAASO,EAAT,EAAgB;MAC/B,CAACP,OAAOkQ,YAAZ,EAA0B;;MAEtBC,QAAQ7N,MAAM8N,MAAlB;UACQD,QAAQ,CAAR,GAAY,CAAC,CAAb,GAAiBA,KAAzB;UACQA,QAAQ,CAAR,GAAY,CAAZ,GAAgBA,KAAxB;;SAEOE,sBAAP,IAAiCF,KAAjC;KACGjH,GAAH,CACG3H,SADH,CACa,YADb,EAEGwD,IAFH,CAGI,WAHJ,EAII,4BAA4B/E,OAAOqQ,sBAAnC,GAA4D,GAJhE;QAMMC,cAAN;CAdF;;;;ACIA,IAAMC,aAAa,SAAbA,UAAa,CAACvQ,MAAD,EAASO,EAAT,EAAaiQ,QAAb,EAAuB5M,IAAvB,EAA6B6M,KAA7B;SAAuC,YAErD;QADHT,aACG,uEADa,IACb;;QACCA,kBAAkB,IAAtB,EAA4B;sBACVhQ,OAAOgQ,aAAvB;;;QAGIU,SAASnQ,GAAG2I,GAAH,CACZ3H,SADY,CACF,YADE,EAEZ3C,IAFY,CAEP2B,GAAGgK,uBAAH,EAFO,CAAf;;WAKG/E,KADH,GAEGV,MAFH,CAEU,OAFV,EAGGC,IAHH,CAGQ,OAHR,EAGiB,WAHjB,EAIGA,IAJH,CAIQ,WAJR,EAIqB;aAAK,eAAeyL,SAAS9N,CAAT,CAAf,GAA6B,GAAlC;KAJrB,EAKGsC,KALH,CAKS,SALT,EAKoB,CALpB,EAMGF,MANH,CAMU,OANV,EAOGC,IAPH,CAOQ,OAPR,EAOiB,MAPjB,EAQGA,IARH,CAQQ,WARR,EAQqB,gBARrB,EASGvD,IATH,CASQ,UAASC,CAAT,EAAY;UACVkP,cAAcjP,OAAO,IAAP,EAAaK,IAAb,CAClBxB,GAAGqQ,eAAH,CAAmBhN,IAAnB,EAAyB5D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CADkB,CAApB;;kBAKGF,SADH,CACa,MADb,EAEGyD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;;kBAOGzD,SADH,CACa,MADb,EAEGyD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;KApBJ,EA0BGF,MA1BH,CA0BU,UA1BV,EA2BGC,IA3BH,CA2BQ,aA3BR,EA2BuB,QA3BvB,EA4BGA,IA5BH,CA4BQ,OA5BR,EA4BiB,OA5BjB,EA6BGA,IA7BH,CA6BQ,GA7BR,EA6Ba,CA7Bb,EA8BGA,IA9BH,CA8BQ,GA9BR,EA8Ba,CA9Bb,EA+BGA,IA/BH,CAgCI,WAhCJ,EAiCI,4BAA4B/E,OAAOqQ,sBAAnC,GAA4D,GAjChE,EAmCGQ,IAnCH,CAmCQpB,gBAAgBzP,MAAhB,CAnCR,EAoCGwE,EApCH,CAoCM,UApCN,EAoCkBmL,qBAAqB3P,MAArB,EAA6BO,EAA7B,EAAiCqD,IAAjC,CApClB,EAqCGY,EArCH,CAqCM,OArCN,EAqCe0L,aAAalQ,MAAb,EAAqBO,EAArB,CArCf;;;WAwCOwE,IAAP,CAAY,SAAZ,EAAuB,CAAvB;WAEGrD,MADH,CACU,OADV,EAEGoO,UAFH,GAGGC,QAHH,CAGYC,aAHZ,EAIGxO,IAJH,CAIQ,UAASC,CAAT,EAAY;aACT,IAAP,EAAaM,IAAb,CAAkBxB,GAAGqQ,eAAH,CAAmBhN,IAAnB,EAAyB5D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CAAlB;KALJ;WAQGC,MADH,CACU,QADV,EAEGoO,UAFH,GAGGC,QAHH,CAGYC,aAHZ,EAIGa,IAJH,CAIQpB,gBAAgBzP,MAAhB,CAJR,EAKG+E,IALH,CAMI,WANJ,EAOI,4BAA4B/E,OAAOqQ,sBAAnC,GAA4D,GAPhE;;;WAWOxK,IAAP,GAAcX,MAAd;;QAEM5D,IAAIf,GAAG2I,GAAH,CAAO3H,SAAP,CAAiB,YAAjB,CAAV;MACEuO,UAAF,GACGC,QADH,CACYC,aADZ,EAEGjL,IAFH,CAEQ,WAFR,EAEqB;aAAK,eAAeyL,SAAS9N,CAAT,CAAf,GAA6B,GAAlC;KAFrB,EAGGsC,KAHH,CAGS,SAHT,EAGoB,CAHpB;;OAKGkE,GAAH,CACG3H,SADH,CACa,OADb,EAEGuO,UAFH,GAGGC,QAHH,CAGYC,aAHZ,EAIGxO,IAJH,CAIQ,UAASC,CAAT,EAAY;aACT,IAAP,EAAaM,IAAb,CAAkBxB,GAAGqQ,eAAH,CAAmBhN,IAAnB,EAAyB5D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CAAlB;KALJ;;QAQIgP,MAAMK,SAAV,EAAqBvQ,GAAGuQ,SAAH;QACjBL,MAAMM,WAAV,EAAuBxQ,GAAGwQ,WAAH;QACnBxQ,GAAG+O,SAAH,OAAmB,MAAvB,EAA+B;UACvBC,OAAOhP,GAAG+O,SAAH,EAAb;SACGA,SAAH,CAAa,MAAb;SACGA,SAAH,CAAaC,IAAb;;WAEKrI,OAAP;GA7FiB;CAAnB;;ACNA;AACA,IAAM8J,WAAW,SAAXA,QAAW,SAAU;MACnB9G,IAAIlK,OAAOmK,MAAP,GAAgBnK,OAAOE,MAAP,CAAc+J,GAA9B,GAAoCjK,OAAOE,MAAP,CAAckK,MAA5D;;MAEIpK,OAAOiR,kBAAP,IAA6B,QAAjC,EAA2C;WAClC,CACL/G,IACE,CADF,GAEElK,OAAOkR,yBAAP,CAAiC9G,MAFnC,GAGEpK,OAAOkR,yBAAP,CAAiCjH,GAJ9B,EAKL,CALK,CAAP;GADF,MAQO,IAAIjK,OAAOiR,kBAAP,IAA6B,KAAjC,EAAwC;WACtC,CACL/G,IAAI,CADC,EAEL,IACElK,OAAOkR,yBAAP,CAAiC9G,MADnC,GAEEpK,OAAOkR,yBAAP,CAAiCjH,GAJ9B,CAAP;;SAOK,CAACC,IAAI,CAAL,EAAQ,CAAR,CAAP;CAnBF;;ACMA,IAAMiH,YAAY,SAAZA,SAAY,CAACnR,MAAD,EAASO,EAAT,EAAa+J,MAAb,EAAqB8G,GAArB;SAChB,YAAW;;QAEHC,gBAAgB;YACd,cAAStK,CAAT,EAAY;YACZuK,UAAUlQ,OAAOpB,OAAOpB,IAAd,EAAoB;iBAAM6C,EAAEsF,CAAF,IAAOtF,EAAEsF,CAAF,EAAKwK,OAAL,EAAP,GAAwB,IAA9B;SAApB,CAAd;;YAEID,QAAQ,CAAR,MAAeA,QAAQ,CAAR,CAAnB,EAA+B;iBACtBE,aACJnD,MADI,CACGiD,OADH,EAEJvN,KAFI,CAEEiN,SAAShR,MAAT,CAFF,CAAP;;YAIEA,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBvH,CAAzB,CAAJ,EAAiC;oBACrBuK,QAAQlS,GAAR,CAAY;mBAAOqS,SAASjD,OAAT,CAAiBkD,GAAjB,CAAP;WAAZ,CAAV;;eAEKC,YACJtD,MADI,CACGiD,OADH,EAEJvN,KAFI,CAEEiN,SAAShR,MAAT,CAFF,CAAP;OAZkB;cAgBZ,gBAAS+G,CAAT,EAAY;YACduK,UAAUlQ,OAAOpB,OAAOpB,IAAd,EAAoB;iBAAK,CAAC6C,EAAEsF,CAAF,CAAN;SAApB,CAAd;;YAEIuK,QAAQ,CAAR,MAAeA,QAAQ,CAAR,CAAnB,EAA+B;iBACtBE,aACJnD,MADI,CACGiD,OADH,EAEJvN,KAFI,CAEEiN,SAAShR,MAAT,CAFF,CAAP;;YAIEA,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBvH,CAAzB,CAAJ,EAAiC;oBACrBuK,QAAQlS,GAAR,CAAY;mBAAOqS,SAASjD,OAAT,CAAiBkD,GAAjB,CAAP;WAAZ,CAAV;;eAEKE,cACJvD,MADI,CACGiD,OADH,EAEJvN,KAFI,CAEEiN,SAAShR,MAAT,CAFF,CAAP;OA3BkB;cA+BZ,gBAAS+G,CAAT,EAAY;YACd8K,SAAS,EAAb;YACExD,SAAS,EADX;;;eAIOzP,IAAP,CAAYQ,GAAZ,CAAgB,aAAK;cACfsD,EAAEqE,CAAF,MAAS7F,SAAT,IAAsBlB,OAAOiR,kBAAP,KAA8B,WAAxD,EAAqE;mBAC5D,IAAP,CADmE;;cAGjEY,OAAOnP,EAAEqE,CAAF,CAAP,MAAiB7F,SAArB,EAAgC;mBACvBwB,EAAEqE,CAAF,CAAP,IAAe,CAAf;WADF,MAEO;mBACErE,EAAEqE,CAAF,CAAP,IAAe8K,OAAOnP,EAAEqE,CAAF,CAAP,IAAe,CAA9B;;SAPJ;YAUI/G,OAAOuO,QAAP,CAAgBD,QAAhB,CAAyBvH,CAAzB,CAAJ,EAAiC;mBACtBpG,OAAOkI,mBAAP,CAA2BgJ,MAA3B,EAAmCC,IAAnC,EAAT;SADF,MAEO;cACDC,UAAUpR,OAAOkI,mBAAP,CAA2BgJ,MAA3B,EAAmCC,IAAnC,EAAd;eACK,IAAI9L,IAAI,CAAb,EAAgBA,IAAIrF,OAAOkI,mBAAP,CAA2BgJ,MAA3B,EAAmClS,MAAvD,EAA+DqG,GAA/D,EAAoE;mBAC3DM,IAAP,CAAYyL,QAAQC,GAAR,EAAZ;;;;;YAKAC,mBAAmB,EAAvB;YACI5D,OAAO1O,MAAP,KAAkB,CAAtB,EAAyB;;mBAEd,CAAC,GAAD,EAAM0O,OAAO,CAAP,CAAN,EAAiB,GAAjB,CAAT;;YAEE6D,QAAQlB,SAAShR,MAAT,EAAiB,CAAjB,KAAuBqO,OAAO1O,MAAP,GAAgB,CAAvC,CAAZ;aACK,IAAIkH,IAAI,CAAb,EAAgBA,IAAIwH,OAAO1O,MAA3B,EAAmCkH,GAAnC,EAAwC;cAClCoL,iBAAiBtS,MAAjB,KAA4B,CAAhC,EAAmC;6BAChB2G,IAAjB,CAAsB,CAAtB;;;2BAGeA,IAAjB,CAAsB2L,iBAAiBpL,IAAI,CAArB,IAA0BqL,KAAhD;;eAEKC,eACJ9D,MADI,CACGA,MADH,EAEJtK,KAFI,CAEEkO,gBAFF,CAAP;;KArEJ;WA0EOrR,IAAP,CAAYZ,OAAOa,UAAnB,EAA+Bc,OAA/B,CAAuC,UAASoF,CAAT,EAAY;UAE/C/G,OAAOa,UAAP,CAAkBkG,CAAlB,EAAqBjF,MAArB,KAAgCZ,SAAhC,IACAlB,OAAOa,UAAP,CAAkBkG,CAAlB,EAAqBjF,MAArB,KAAgC,IAFlC,EAGE;eACOjB,UAAP,CAAkBkG,CAAlB,EAAqBjF,MAArB,GAA8BuP,cAAcrR,OAAOa,UAAP,CAAkBkG,CAAlB,EAAqB5D,IAAnC,EAC5B4D,CAD4B,CAA9B;;KALJ;;;WAYOhD,KAAP,CAAa,CAAC,CAAD,EAAIhE,EAAEC,MAAF,CAAJ,CAAb,EAA6B,CAA7B;;QAEMqM,mBAAmBC,OAAOD,gBAAP,IAA2B,CAApD;;;OAGG5F,SAAH,CACGlF,SADH,CACa,QADb,EAEGyD,KAFH,CAES,YAFT,EAEuBhF,OAAOE,MAAP,CAAc+J,GAAd,GAAoB,IAF3C,EAGGjF,KAHH,CAGS,aAHT,EAGwBhF,OAAOE,MAAP,CAAcE,IAAd,GAAqB,IAH7C,EAIG4E,KAJH,CAIS,OAJT,EAIkBjF,EAAEC,MAAF,IAAY,CAAZ,GAAgB,IAJlC,EAKGgF,KALH,CAKS,QALT,EAKmBkF,EAAElK,MAAF,IAAY,CAAZ,GAAgB,IALnC,EAMG+E,IANH,CAMQ,OANR,EAMiB,CAAChF,EAAEC,MAAF,IAAY,CAAb,IAAkBqM,gBANnC,EAOGtH,IAPH,CAOQ,QAPR,EAOkB,CAACmF,EAAElK,MAAF,IAAY,CAAb,IAAkBqM,gBAPpC;;QASIK,UAAJ,CAAe0F,WAAf,GAA6BpS,OAAOqS,KAApC;QACI3F,UAAJ,CAAe4F,SAAf,GAA2B,GAA3B;QACI5F,UAAJ,CAAe6F,wBAAf,GAA0CvS,OAAOwS,SAAjD;QACI9F,UAAJ,CAAe+F,WAAf,GAA6BzS,OAAO0S,KAApC;QACIhG,UAAJ,CAAeuD,KAAf,CAAqB5D,gBAArB,EAAuCA,gBAAvC;QACIhK,OAAJ,CAAY+P,WAAZ,GAA0BpS,OAAO2S,YAAjC;QACItQ,OAAJ,CAAYiQ,SAAZ,GAAwB,GAAxB;QACIjQ,OAAJ,CAAYkQ,wBAAZ,GAAuCvS,OAAOwS,SAA9C;QACInQ,OAAJ,CAAYoQ,WAAZ,GAA0BzS,OAAO0S,KAAjC;QACIrQ,OAAJ,CAAY4N,KAAZ,CAAkB5D,gBAAlB,EAAoCA,gBAApC;QACIuG,SAAJ,CAAcN,SAAd,GAA0B,CAA1B;QACIM,SAAJ,CAAc3C,KAAd,CAAoB5D,gBAApB,EAAsCA,gBAAtC;;WAEO,IAAP;GApHc;CAAlB;;ACJA,IAAMyE,YAAY,SAAZA,SAAY,CAAC9Q,MAAD,EAASO,EAAT,EAAakQ,KAAb;SAChB,YAAW;QACL,CAAClQ,GAAGe,CAAH,EAAL,EAAa;SACRuD,UAAH;;;QAGIvD,IAAIf,GAAGe,CAAH,EAAV;;;MAGEwD,MAAF,CAAS,OAAT,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGvD,IAFH,CAEQ,UAASC,CAAT,EAAY;UACZzB,OAAOa,UAAP,CAAkBY,CAAlB,MAAyBP,SAA7B,EAAwC;eAC/BL,UAAP,CAAkBY,CAAlB,EAAqB,OAArB,IAAgCwC,OAAOvC,OAAO,IAAP,CAAP,EAAqBN,MAArB,CAA4B,CAC1D,CAAC,CAAC,EAAF,EAAM,CAAN,CAD0D,EAE1D,CAAC,EAAD,EAAKpB,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BiC,KAA5B,GAAoC,CAApC,CAAL,CAF0D,CAA5B,CAAhC;eAIO,IAAP,EAAahC,IAAb,CACE/B,OAAOa,UAAP,CAAkBY,CAAlB,EAAqB,OAArB,EACG+C,EADH,CACM,OADN,EACe,YAAW;cAClBlC,MAAMmC,WAAN,KAAsB,IAAtB,IAA8B,CAACnC,MAAMmC,WAAN,CAAkBoO,OAArD,EAA8D;eACzD1Q,UAAH;;SAHN,EAMGqC,EANH,CAMM,OANN,EAMe,YAAW;cAClB,CAAClC,MAAMmC,WAAN,CAAkBoO,OAAvB,EAAgC;eAC3B5R,KAAH;;SARN,EAWGuD,EAXH,CAWM,KAXN,EAWa,YAAW;;;;;cAKhBlC,MAAMmC,WAAN,CAAkBoO,OAAtB,EAA+B;gBACzBC,OAAOpR,OAAO,IAAP,EACRA,MADQ,CACD,YADC,EAERuM,KAFQ,GAEA,CAFA,EAEG8E,SAFd;mBAGOD,KAAKE,OAAL,CACL,mBADK,EAEL,2BACE,aADF,GAEEhT,OAAOQ,OAAP,CAAeb,MAFjB,GAGE,GALG,CAAP;gBAOIsT,MAAMvR,OAAO,IAAP,EAAauM,KAAb,GAAqB,CAArB,EAAwBC,QAAlC;gBACIjN,QAAQ;kBACNjB,OAAOQ,OAAP,CAAeb,MADT;sBAEFwB,eAAe,IAAf,CAFE;oBAGJ2R,IAHI;oBAIJG;aAJR;mBAMOzS,OAAP,CAAe8F,IAAf,CAAoBrF,KAApB;mBACOS,OAAO,IAAP,EAAauM,KAAb,GAAqB,CAArB,EAAwBiF,UAA/B,EACGxR,MADH,CACU,OADV,EAEGuM,KAFH,GAEW,CAFX,EAEc8E,SAFd,IAE2BD,IAF3B;eAGG7R,KAAH;mBACOJ,UAAP,CAAkBY,CAAlB,EAAqBR,KAArB,CAA2Be,IAA3B,CAAgCN,OAAO,IAAP,EAAa,IAAb,CAAhC;mBACO,IAAP,EACGA,MADH,CACU,YADV,EAEGqD,IAFH,CAEQ,OAFR,EAEiB,cAFjB;eAGG+L,SAAH;WA3BF,MA4BO;eACF7P,KAAH;;SA7CN,CADF;eAkDO,IAAP,EAAauD,EAAb,CAAgB,UAAhB,EAA4B,YAAW;aAClCrC,UAAH,CAAcV,CAAd;SADF;;KA1DN;;UAgEMqP,SAAN,GAAkB,IAAlB;WACO,IAAP;GA1Ec;CAAlB;;ACDA,IAAMqC,cAAc,SAAdA,WAAc,CAACnT,MAAD,EAASO,EAAT;SAClB,UAAS6S,MAAT,EAAiBjQ,IAAjB,EAAuB;QACfkQ,IAAIlQ,QAAQ,QAAlB;QACI,OAAOiQ,MAAP,KAAkB,WAAtB,EAAmC;eACxB,IAAT;;;;QAIE,CAACzS,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4C;SACvC2T,gBAAH;;OAECnC,SAAH;;;QAGMoC,SAAS5S,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+B+B,MAA/B,CACb;aAAK5C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBS,IAArB,IAA6BkQ,CAAlC;KADa,CAAf;;QAIID,MAAJ,EAAY;UACN9B,UAAUlQ,OACZmS,OACGnU,GADH,CACO;eAAKY,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BuM,MAA5B,EAAL;OADP,EAEGvN,MAFH,CAEU,UAACE,GAAD,EAAMD,GAAN;eAAcC,IAAIzB,MAAJ,CAAWwB,GAAX,CAAd;OAFV,CADY,CAAd;;aAMOY,OAAP,CAAe,aAAK;eACXd,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BuM,MAA5B,CAAmCiD,OAAnC;OADF;KAPF,MAUO;aACE3P,OAAP,CAAe,aAAK;eACXd,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BuM,MAA5B,CAAmCjN,OAAOpB,OAAOpB,IAAd,EAAoB;iBAAK,CAAC6C,EAAEsF,CAAF,CAAN;SAApB,CAAnC;OADF;;;;QAME/G,OAAOwT,eAAP,KAA2B,IAA/B,EAAqC;SAChCA,eAAH,CAAmBxT,OAAOwT,eAA1B;;;WAGK,IAAP;GAvCgB;CAApB;;ACFA,IAAMC,uBAAuB,SAAvBA,oBAAuB,CAAC5S,UAAD,EAAa2P,QAAb;SAA0B;WACrD7P,OAAOC,IAAP,CAAYC,UAAZ,EAAwBzB,GAAxB,CAA4B,aAAK;UACzB0I,IAAI0I,SAAS/O,CAAT,CAAV;UACMsG,IAAIlH,WAAWY,CAAX,EAAcK,MAAd,CAAqB4R,IAAIjS,CAAJ,CAArB,CAAV;aACO,CAACqG,CAAD,EAAIC,CAAJ,CAAP;KAHF,CADqD;GAA1B;CAA7B;;;;;;;;;;;;;;;;ACAA,IAAM4L,UAAU,SAAVA,OAAU;SAAKlS,MAAM,IAAN,IAAcA,MAAMP,SAAzB;CAAhB;;AAEA,IAAM0S,yBAAyB,SAAzBA,sBAAyB,CAAC5T,MAAD,EAASO,EAAT;SAC7B,UAASkI,IAAT,EAAe;QACPoL,QAAQtT,GAAGuT,oBAAH,CAAwB9T,OAAOpB,IAA/B,CAAd;WACO6J,OAAOA,IAAP,GAAc9H,OAAOC,IAAP,CAAYiT,KAAZ,CAArB;;WAEOpL,KAAK3H,MAAL,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAWgF,CAAX,EAAiB;UAC5Be,IAAI/G,OAAOa,UAAP,CAAkBG,GAAlB,IAAyBhB,OAAOa,UAAP,CAAkBG,GAAlB,CAAzB,GAAkD,EAA5D;UACIA,GAAJ,iBACK+F,CADL;gBAEU4M,QAAQ5M,EAAEgN,MAAV,IAAoBhN,EAAEgN,MAAtB,GAA+B,MAFzC;eAGSJ,QAAQ5M,EAAEiN,KAAV,IAAmBjN,EAAEiN,KAArB,GAA6B,CAHtC;uBAIiBL,QAAQ5M,EAAEkN,aAAV,IAA2BlN,EAAEkN,aAA7B,GAA6C,CAJ9D;uBAKiBN,QAAQ5M,EAAEmN,aAAV,IAA2BnN,EAAEmN,aAA7B,GAA6C,CAL9D;qBAMeP,QAAQ5M,EAAEoN,WAAV,IAAyBpN,EAAEoN,WAA3B,GAAyC,CANxD;cAOQR,QAAQ5M,EAAE5D,IAAV,IAAkB4D,EAAE5D,IAApB,GAA2B0Q,MAAM7S,GAAN,CAPnC;eAQS2S,QAAQ5M,EAAEqN,KAAV,IAAmBrN,EAAEqN,KAArB,GAA6BpO;;;aAG/BjF,GAAP;KAbK,EAcJ,EAdI,CAAP;GAL2B;CAA/B;;ACOA;;;;;;;;;;AAUA,IAAM8D,aAAa,SAAbA,UAAa,CAAC7E,MAAD,EAASO,EAAT,EAAa+J,MAAb,EAAqBmG,KAArB,EAA4B7M,IAA5B;SACjB,YAAW;QACLrD,GAAGe,CAAH,OAAWJ,SAAf,EAA0B;SACrBmT,UAAH;;;OAGCC,EAAH,GAAQ/T,GAAG2I,GAAH,CACL3H,SADK,CACK,YADL,EAEL3C,IAFK,CAEA2B,GAAGgK,uBAAH,EAFA,EAE8B,UAAS9I,CAAT,EAAY;aACvCA,CAAP;KAHI,EAKL+D,KALK,GAMLV,MANK,CAME,OANF,EAOLC,IAPK,CAOA,OAPA,EAOS,WAPT,EAQLA,IARK,CAQA,WARA,EAQa,UAAStD,CAAT,EAAY;aACtB,eAAe6I,OAAO7I,CAAP,CAAf,GAA2B,GAAlC;KATI,CAAR;;OAYG6S,EAAH,CACGxP,MADH,CACU,OADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,MAFjB,EAGGA,IAHH,CAGQ,WAHR,EAGqB,gBAHrB,EAIGvD,IAJH,CAIQ,UAASC,CAAT,EAAY;UACZkP,cAAcjP,OAAO,IAAP,EAAaK,IAAb,CAChBxB,GAAGqQ,eAAH,CAAmBhN,IAAnB,EAAyB5D,OAAOa,UAAP,CAAkBY,CAAlB,CAAzB,CADgB,CAAlB;;kBAKGF,SADH,CACa,MADb,EAEGyD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;;kBAOGzD,SADH,CACa,MADb,EAEGyD,KAFH,CAES,MAFT,EAEiB,MAFjB,EAGGA,KAHH,CAGS,QAHT,EAGmB,MAHnB,EAIGA,KAJH,CAIS,iBAJT,EAI4B,YAJ5B;KAfJ,EAsBGF,MAtBH,CAsBU,UAtBV,EAuBGC,IAvBH,CAuBQ,aAvBR,EAuBuB,QAvBvB,EAwBGA,IAxBH,CAwBQ,GAxBR,EAwBa,CAxBb,EAyBGA,IAzBH,CA0BI,WA1BJ,EA2BI,4BAA4B/E,OAAOqQ,sBAAnC,GAA4D,GA3BhE,EA6BGtL,IA7BH,CA6BQ,GA7BR,EA6Ba,CA7Bb,EA8BGA,IA9BH,CA8BQ,OA9BR,EA8BiB,OA9BjB,EA+BG8L,IA/BH,CA+BQpB,gBAAgBzP,MAAhB,CA/BR,EAgCGwE,EAhCH,CAgCM,UAhCN,EAgCkBmL,qBAAqB3P,MAArB,EAA6BO,EAA7B,EAAiCqD,IAAjC,CAhClB,EAiCGY,EAjCH,CAiCM,OAjCN,EAiCe0L,aAAalQ,MAAb,EAAqBO,EAArB,CAjCf;;QAmCIP,OAAOiR,kBAAP,KAA8B,KAAlC,EAAyC;SACpC/H,GAAH,CACGpE,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,IAFR,EAEc,CAFd,EAGGA,IAHH,CAGQ,IAHR,EAGc,IAAI/E,OAAOkR,yBAAP,CAAiCjH,GAHnD,EAIGlF,IAJH,CAIQ,IAJR,EAIchF,EAAEC,MAAF,CAJd,EAKG+E,IALH,CAKQ,IALR,EAKc,IAAI/E,OAAOkR,yBAAP,CAAiCjH,GALnD,EAMGlF,IANH,CAMQ,cANR,EAMwB,CANxB,EAOGA,IAPH,CAOQ,QAPR,EAOkB,MAPlB,EAQGA,IARH,CAQQ,MARR,EAQgB,MARhB,EASGA,IATH,CASQ,iBATR,EAS2B,YAT3B;KADF,MAWO,IAAI/E,OAAOiR,kBAAP,KAA8B,QAAlC,EAA4C;SAC9C/H,GAAH,CACGpE,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,IAFR,EAEc,CAFd,EAGGA,IAHH,CAGQ,IAHR,EAGcmF,EAAElK,MAAF,IAAY,CAAZ,GAAgBA,OAAOkR,yBAAP,CAAiC9G,MAH/D,EAIGrF,IAJH,CAIQ,IAJR,EAIchF,EAAEC,MAAF,CAJd,EAKG+E,IALH,CAKQ,IALR,EAKcmF,EAAElK,MAAF,IAAY,CAAZ,GAAgBA,OAAOkR,yBAAP,CAAiC9G,MAL/D,EAMGrF,IANH,CAMQ,cANR,EAMwB,CANxB,EAOGA,IAPH,CAOQ,QAPR,EAOkB,MAPlB,EAQGA,IARH,CAQQ,MARR,EAQgB,MARhB,EASGA,IATH,CASQ,iBATR,EAS2B,YAT3B;;;UAYIwP,IAAN,GAAa,IAAb;WACO,IAAP;GA9Ee;CAAnB;;;;;ACfA,IAAMC,WAAW,SAAXA,QAAW,CAACxU,MAAD,EAASO,EAAT,EAAaiQ,QAAb;SAA0B,cAAM;QACzCiE,IAAIC,MAAM,GAAhB;QACMtD,MAAM7Q,GAAG6Q,GAAH,CAAOuD,KAAnB;QACMvJ,aAAa,CAAnB;QACME,WAAW,IAAIpD,KAAKiD,EAA1B;QACIsH,WAAJ,GAAkBtK,IAAI,CAAC,IAAID,KAAK0M,GAAL,CAAS5U,OAAOpB,IAAP,CAAYe,MAArB,EAA6B,IAAI,CAAjC,CAAL,EAA0C,CAA1C,CAAJ,CAAlB;WACOf,IAAP,CAAY+C,OAAZ,CAAoB,aAAK;cACf3B,OAAOa,UAAf,EAA2Bc,OAA3B,CAAmC,UAACe,CAAD,EAAIsD,CAAJ,EAAU;YACvC6O,SAAJ;YACIxJ,GAAJ,CACEmF,SAAS9N,CAAT,CADF,EAEE1C,OAAOa,UAAP,CAAkB6B,EAAEuK,GAApB,EAAyBnL,MAAzB,CAAgCL,EAAEiB,CAAF,CAAhC,CAFF,EAGE+R,CAHF,EAIErJ,UAJF,EAKEE,QALF;YAOIwJ,MAAJ;YACIC,IAAJ;OAVF;KADF;WAcO7N,OAAP;GApBe;CAAjB;;ACFA,IAAM0J,kBAAkB,SAAlBA,eAAkB,CAAChN,IAAD,EAAOxB,SAAP,EAAqB;MACvC4S,gBAAJ;;UAEQ5S,UAAU2R,MAAlB;SACO,MAAL;gBACYkB,SAAS7S,UAAUN,MAAnB,CAAV;;SAEG,OAAL;gBACYoT,UAAU9S,UAAUN,MAApB,CAAV;;SAEG,KAAL;gBACYqT,QAAQ/S,UAAUN,MAAlB,CAAV;;SAEG,QAAL;gBACYsT,WAAWhT,UAAUN,MAArB,CAAV;;;gBAGUmT,SAAS7S,UAAUN,MAAnB,CAAV;;;;UAKDkS,KADH,CACS5R,UAAU4R,KADnB,EAEGqB,UAFH,CAEcjT,UAAUiT,UAFxB,EAGGC,aAHH,CAGiBlT,UAAU6R,aAH3B,EAIGsB,aAJH,CAIiBnT,UAAU8R,aAJ3B,EAKGC,WALH,CAKe/R,UAAU+R,WALzB,EAMGqB,UANH,CAMcpT,UAAUoT,UANxB;;SAQOR,OAAP;CA7BF;;ACGA;AACA,IAAMjE,cAAc,SAAdA,WAAc,CAAC/Q,MAAD,EAASO,EAAT,EAAa+J,MAAb,EAAqBkG,QAArB,EAA+BiF,QAA/B,EAAyChF,KAAzC;SAClB,YAAW;QACLlQ,GAAGe,CAAH,OAAWJ,SAAf,EAA0BX,GAAGsE,UAAH;QACpBvD,IAAIf,GAAGe,CAAH,EAAV;;MAEE0D,KAAF,CAAQ,QAAR,EAAkB,MAAlB,EAA0BjD,IAA1B,CACE4H,OACGnF,EADH,CACM,OADN,EACe,UAAS/C,CAAT,EAAY;eACdA,CAAT,IAAc,KAAKiU,UAAL,GAAkBpL,OAAO7I,CAAP,CAAhC;KAFJ,EAIG+C,EAJH,CAIM,MAJN,EAIc,UAAS/C,CAAT,EAAY;eACbA,CAAT,IAAcyG,KAAKC,GAAL,CACZpI,EAAEC,MAAF,CADY,EAEZkI,KAAKE,GAAL,CAAS,CAAT,EAAa,KAAKsN,UAAL,IAAmBpT,MAAMqT,EAAtC,CAFY,CAAd;SAIGC,cAAH;aACOvH,MAAP,CAAc9N,GAAGgK,uBAAH,EAAd;SACG1L,MAAH;QACEkG,IAAF,CAAO,WAAP,EAAoB;eAAK,eAAeyL,SAAS/O,CAAT,CAAf,GAA6B,GAAlC;OAApB;KAZJ,EAcG+C,EAdH,CAcM,KAdN,EAca,UAAS/C,CAAT,EAAY;aACd,KAAKiU,UAAZ;aACOD,SAAShU,CAAT,CAAP;aACO,IAAP,EACGqO,UADH,GAEG/K,IAFH,CAEQ,WAFR,EAEqB,eAAeuF,OAAO7I,CAAP,CAAf,GAA2B,GAFhD;SAGG5C,MAAH;KApBJ,CADF;UAwBMkS,WAAN,GAAoB,IAApB;WACO,IAAP;GA9BgB;CAApB;;ACNA;;AAEA,IAAM8E,SAAS,SAATA,MAAS,CAAC7V,MAAD,EAASO,EAAT,EAAakQ,KAAb,EAAoBjN,MAApB,EAA+B;SACrC,YAAW;;OAEbiD,SAAH,CACG/E,MADH,CACU,KADV,EAEGqD,IAFH,CAEQ,OAFR,EAEiB/E,OAAOC,KAFxB,EAGG8E,IAHH,CAGQ,QAHR,EAGkB/E,OAAOmK,MAHzB;OAIGjB,GAAH,CAAOnE,IAAP,CACE,WADF,EAEE,eAAe/E,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAc+J,GAAxD,GAA8D,GAFhE;;;QAMIwG,MAAMK,SAAV,EAAqBvQ,GAAG4B,UAAH;;;OAGlBgP,SAAH;;;QAGI5Q,GAAGe,CAAH,EAAJ,EAAYf,GAAGsE,UAAH;QACR4L,MAAMK,SAAV,EAAqBvQ,GAAGuQ,SAAH;QACjBL,MAAMM,WAAV,EAAuBxQ,GAAGwQ,WAAH;;WAEhBhP,IAAP,CAAY,QAAZ,EAAsB,IAAtB,EAA4B;aACnB/B,OAAOC,KADY;cAElBD,OAAOmK,MAFW;cAGlBnK,OAAOE;KAHjB;;WAMO,IAAP;GA5BF;CADF;;ACFA;;;AAGA,IAAM4V,UAAU,SAAVA,OAAU,CAAC9V,MAAD,EAASO,EAAT,EAAa+J,MAAb;SAAwB,mBAAW;QAC3CyL,WAAWxV,GAAGgK,uBAAH,GAA6B,CAA7B,CAAjB;;OAEGyL,uBAAH,CAA2BC,OAA3B;;;;QAIMC,YAAYH,aAAaxV,GAAGgK,uBAAH,GAA6B,CAA7B,CAA/B;;QAEI2L,SAAJ,EAAe;aACN7H,MAAP,CAAc9N,GAAGgK,uBAAH,EAAd;UACM4L,cAAcnW,OAAOmW,WAAP,CAAmB9W,KAAnB,CAAyB,CAAzB,CAApB;SACG+W,WAAH;;UAEM9U,IAAIf,GAAGe,CAAH,EAAV;QACEwO,UAAF,GACGC,QADH,CACY,IADZ,EAEGhL,IAFH,CAEQ,WAFR,EAEqB;eAAK,eAAeuF,OAAO7I,CAAP,CAAf,GAA2B,GAAhC;OAFrB;SAGG5C,MAAH;;;UAGIsX,YAAYxW,MAAZ,KAAuB,CAA3B,EAA8B;WACzBiT,SAAH,CAAauD,WAAb;;;GAtBU;CAAhB;;ACHA,IAAMP,iBAAiB,SAAjBA,cAAiB,CAAC5V,MAAD,EAASwQ,QAAT;SAAsB,YAAM;QAC3C6F,OAAO1V,OAAO2V,MAAP,CAAc,EAAd,EAAkBtW,OAAOa,UAAzB,CAAb;QACM0V,qBAAqB5V,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BiR,IAA/B,CACzB,UAAC/G,CAAD,EAAIpF,CAAJ;aAAW6K,SAASzF,CAAT,IAAcyF,SAAS7K,CAAT,CAAd,KAA8B,CAA9B,GAAkC,CAAlC,GAAsC6K,SAASzF,CAAT,IAAcyF,SAAS7K,CAAT,CAA/D;KADyB,CAA3B;WAGO9E,UAAP,GAAoB,EAApB;uBACmBc,OAAnB,CAA2B,UAACe,CAAD,EAAIsD,CAAJ,EAAU;aAC5BnF,UAAP,CAAkB6B,CAAlB,IAAuB2T,KAAK3T,CAAL,CAAvB;aACO7B,UAAP,CAAkB6B,CAAlB,EAAqB0R,KAArB,GAA6BpO,CAA7B;KAFF;GANqB;CAAvB;;ACAA,IAAMgQ,0BAA0B,SAA1BA,uBAA0B;SAAU,mBAAW;QAC7CK,OAAO1V,OAAO2V,MAAP,CAAc,EAAd,EAAkBtW,OAAOa,UAAzB,CAAb;QACM0V,qBAAqB5V,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BiR,IAA/B,CAAoC,UAAC/G,CAAD,EAAIpF,CAAJ,EAAU;UACjE6Q,kBACJxW,OAAOa,UAAP,CAAkBkK,CAAlB,EAAqBjJ,MAArB,CAA4BmU,QAAQlL,CAAR,CAA5B,IACA/K,OAAOa,UAAP,CAAkB8E,CAAlB,EAAqB7D,MAArB,CAA4BmU,QAAQtQ,CAAR,CAA5B,CAFF;;;;;aAOO6Q,oBAAoB,CAApB,GAAwBzL,EAAE0L,aAAF,CAAgB9Q,CAAhB,CAAxB,GAA6C6Q,eAApD;KARyB,CAA3B;WAUO3V,UAAP,GAAoB,EAApB;uBACmBc,OAAnB,CAA2B,UAACe,CAAD,EAAIsD,CAAJ,EAAU;aAC5BnF,UAAP,CAAkB6B,CAAlB,IAAuB2T,KAAK3T,CAAL,CAAvB;aACO7B,UAAP,CAAkB6B,CAAlB,EAAqB0R,KAArB,GAA6BpO,CAA7B;KAFF;GAb8B;CAAhC;;ACAA,IAAM0Q,YAAY,SAAZA,SAAY,CAAC1W,MAAD,EAASwC,UAAT,EAAwB;MACpCxC,OAAOqC,OAAP,IAAkBrC,OAAOqC,OAAP,CAAe1C,MAAf,KAA0BK,OAAOpB,IAAP,CAAYe,MAA5D,EACE,OAAO,IAAP;;MAEIgX,SAASnU,WAAW6M,WAAX,GAAyBuH,UAAzB,EAAf;;OAEK,IAAI3J,GAAT,IAAgB0J,MAAhB,EAAwB;QAClBA,OAAOE,cAAP,CAAsB5J,GAAtB,CAAJ,EAAgC;aACvB,IAAP;;;SAGG,KAAP;CAXF;;ACIA,IAAMpN,QAAQ,SAARA,KAAQ,CAACG,MAAD,EAASO,EAAT,EAAa6Q,GAAb,EAAkB5O,UAAlB;SACZ,UAASsU,KAAT,EAAgB;QACVA,KAAJ,EAAWC,SAAX,CAAqB,CAArB,EAAwB,CAAxB,EAA2BhX,EAAEC,MAAF,IAAY,CAAvC,EAA0CkK,EAAElK,MAAF,IAAY,CAAtD;;;;;QAKI8W,UAAU,SAAV,IAAuBJ,UAAU1W,MAAV,EAAkBwC,UAAlB,CAA3B,EAA0D;UACpDH,OAAJ,CAAY0K,SAAZ,GAAwBxM,GAAGkG,SAAH,CAAazB,KAAb,CAAmB,kBAAnB,CAAxB;UACI3C,OAAJ,CAAYoQ,WAAZ,GAA0B,IAAIzS,OAAOgX,cAArC;UACI3U,OAAJ,CAAY2K,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2BjN,EAAEC,MAAF,IAAY,CAAvC,EAA0CkK,EAAElK,MAAF,IAAY,CAAtD;UACIqC,OAAJ,CAAYoQ,WAAZ,GAA0BzS,OAAO0S,KAAjC;;WAEK,IAAP;GAbU;CAAd;;ACJA,IAAMuE,mBAAmB,SAAnBA,gBAAmB,CAACjX,MAAD,EAASwQ,QAAT,EAAmBkD,GAAnB,EAA2B;MAC5CwD,YAAY,EAAlB;;MAEMxU,IAAI/B,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,CAAV;MACMsW,OAAOzU,EAAE/C,MAAf;MACMoL,IAAI,GAAV,CALkD;OAM7C,IAAI/E,IAAI,CAAb,EAAgBA,IAAImR,IAApB,EAA0B,EAAEnR,CAA5B,EAA+B;;QAEvB8B,IAAI0I,SAAS9N,EAAEsD,CAAF,CAAT,CAAV;QACM+B,IAAI/H,OAAOa,UAAP,CAAkB6B,EAAEsD,CAAF,CAAlB,EAAwBlE,MAAxB,CAA+B4R,IAAIhR,EAAEsD,CAAF,CAAJ,CAA/B,CAAV;cACUM,IAAV,CAAe8Q,GAAG,CAACtP,CAAD,EAAIC,CAAJ,CAAH,CAAf;;;QAGI/B,IAAImR,OAAO,CAAf,EAAkB;UACVE,KAAKvP,IAAIiD,KAAKyF,SAAS9N,EAAEsD,IAAI,CAAN,CAAT,IAAqB8B,CAA1B,CAAf;UACIwP,KAAKvP,IAAIgD,KAAK/K,OAAOa,UAAP,CAAkB6B,EAAEsD,IAAI,CAAN,CAAlB,EAA4BlE,MAA5B,CAAmC4R,IAAIhR,EAAEsD,IAAI,CAAN,CAAJ,CAAnC,IAAoD+B,CAAzD,CAAb;UACI/H,OAAOwT,eAAP,KAA2B,IAA/B,EAAqC;YAC7B+D,eAAevX,OAAOwX,gBAAP,CAClBC,GADkB,CAEjBzX,OAAOa,UAAP,CAAkBb,OAAOwT,eAAzB,EAA0C1R,MAA1C,CACE4R,IAAI1T,OAAOwT,eAAX,CADF,CAFiB,EAMlBiE,GANkB,CAMd/U,EAAEsD,CAAF,CANc,CAArB;YAOM0R,gBAAgB1X,OAAOwX,gBAAP,CACnBC,GADmB,CAElBzX,OAAOa,UAAP,CAAkBb,OAAOwT,eAAzB,EAA0C1R,MAA1C,CACE4R,IAAI1T,OAAOwT,eAAX,CADF,CAFkB,EAMnBiE,GANmB,CAMf/U,EAAEsD,IAAI,CAAN,CANe,CAAtB;YAOI2R,WAAW,OAAOJ,eAAeG,aAAtB,CAAf;aACKC,WAAW,CAAC,IAAI3X,OAAO4X,gBAAZ,KAAiCN,KAAKK,QAAtC,CAAhB;;gBAEQrR,IAAV,CAAe8Q,GAAG,CAACC,EAAD,EAAKC,EAAL,CAAH,CAAf;;;;SAIGJ,SAAP;CAtCF;;ACAA,IAAMW,uBAAuB,SAAvBA,oBAAuB,CAACC,UAAD,EAAaZ,SAAb,EAA2B;MAChDC,OAAOD,UAAUvX,MAAvB;MACMoL,IAAI+M,UAAV;MACMC,MAAM,EAAZ;;MAEIzR,IAAJ,CAAS4Q,UAAU,CAAV,CAAT;MACI5Q,IAAJ,CACE8Q,GAAG,CACDF,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,IAAoB2E,IAAI,CAAJ,IAASmM,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,IAAoB8Q,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,CAA7B,CADnB,EAED8Q,UAAU,CAAV,EAAa9Q,CAAb,CAAe,CAAf,CAFC,CAAH,CADF;OAMK,IAAI4R,MAAM,CAAf,EAAkBA,MAAMb,OAAO,CAA/B,EAAkC,EAAEa,GAApC,EAAyC;QACnCC,MAAMf,UAAUc,GAAV,CAAV;QACI5X,OAAO8W,UAAUc,MAAM,CAAhB,CAAX;QACI7X,QAAQ+W,UAAUc,MAAM,CAAhB,CAAZ;;QAEIE,OAAO9X,KAAK+X,QAAL,CAAchY,KAAd,CAAX;QACImG,IAAJ,CAAS2R,IAAI3Y,GAAJ,CAAQ4Y,KAAKpQ,CAAL,CAAOiD,CAAP,CAAR,CAAT;QACIzE,IAAJ,CAAS2R,GAAT;QACI3R,IAAJ,CAAS2R,IAAIE,QAAJ,CAAaD,KAAKpQ,CAAL,CAAOiD,CAAP,CAAb,CAAT;;MAEEzE,IAAJ,CACE8Q,GAAG,CACDF,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,IACE2E,IAAI,CAAJ,IAASmM,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,IAA2B8Q,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,CAApC,CAFD,EAGD8Q,UAAUC,OAAO,CAAjB,EAAoB/Q,CAApB,CAAsB,CAAtB,CAHC,CAAH,CADF;MAOIE,IAAJ,CAAS4Q,UAAUC,OAAO,CAAjB,CAAT;;SAEOY,GAAP;CA/BF;;ACAA;AACA;AAIA,IAAMK,cAAc,SAAdA,WAAc,CAACpY,MAAD,EAASwQ,QAAT,EAAmB/O,CAAnB,EAAsB2P,GAAtB,EAA8B;MAC1C8F,YAAYD,iBAAiBjX,MAAjB,EAAyBwQ,QAAzB,EAAmC/O,CAAnC,CAAlB;MACMsW,MAAMF,qBAAqB7X,OAAO8X,UAA5B,EAAwCZ,SAAxC,CAAZ;;MAEImB,MAAJ,CAAWN,IAAI,CAAJ,EAAO3R,CAAP,CAAS,CAAT,CAAX,EAAwB2R,IAAI,CAAJ,EAAO3R,CAAP,CAAS,CAAT,CAAxB;;OAEK,IAAIJ,IAAI,CAAb,EAAgBA,IAAI+R,IAAIpY,MAAxB,EAAgCqG,KAAK,CAArC,EAAwC;QAClChG,OAAOsY,iBAAX,EAA8B;WACvB,IAAIzR,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;YACtBmG,QAAJ,CAAa+K,IAAI/R,IAAIa,CAAR,EAAWT,CAAX,CAAa,CAAb,CAAb,EAA8B2R,IAAI/R,IAAIa,CAAR,EAAWT,CAAX,CAAa,CAAb,CAA9B,EAA+C,CAA/C,EAAkD,CAAlD;;;QAGAmS,aAAJ,CACER,IAAI/R,CAAJ,EAAOI,CAAP,CAAS,CAAT,CADF,EAEE2R,IAAI/R,CAAJ,EAAOI,CAAP,CAAS,CAAT,CAFF,EAGE2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CAHF,EAIE2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CAJF,EAKE2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CALF,EAME2R,IAAI/R,IAAI,CAAR,EAAWI,CAAX,CAAa,CAAb,CANF;;CAZJ;;;AAwBA,IAAMoS,kBAAkB,SAAlBA,eAAkB,SAAU;MAC5BxY,OAAOiR,kBAAP,KAA8B,QAAlC,EAA4C;WACnC/G,EAAElK,MAAF,IAAY,CAAnB;GADF,MAEO,IAAIA,OAAOiR,kBAAP,KAA8B,KAAlC,EAAyC;WACvC,CAAP;GADK,MAEA;YACGwH,GAAR,CACE,kFADF;;SAIKvO,EAAElK,MAAF,IAAY,CAAnB;CAVF;;AAaA,IAAM0Y,aAAa,SAAbA,UAAa,CAAC1Y,MAAD,EAASwQ,QAAT,EAAmB/O,CAAnB,EAAsB2P,GAAtB,EAA8B;SACxCxQ,IAAP,CAAYZ,OAAOa,UAAnB,EACGzB,GADH,CACO;WAAK,CACRoR,SAAS9N,CAAT,CADQ,EAERjB,EAAEiB,CAAF,MAASxB,SAAT,GACIsX,gBAAgBxY,MAAhB,CADJ,GAEIA,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4BL,EAAEiB,CAAF,CAA5B,CAJI,CAAL;GADP,EAOGoP,IAPH,CAOQ,UAAC/G,CAAD,EAAIpF,CAAJ;WAAUoF,EAAE,CAAF,IAAOpF,EAAE,CAAF,CAAjB;GAPR,EAQGhE,OARH,CAQW,UAACe,CAAD,EAAIsD,CAAJ,EAAU;UACX,CAAN,GAAUoL,IAAIiH,MAAJ,CAAW3V,EAAE,CAAF,CAAX,EAAiBA,EAAE,CAAF,CAAjB,CAAV,GAAmC0O,IAAIuH,MAAJ,CAAWjW,EAAE,CAAF,CAAX,EAAiBA,EAAE,CAAF,CAAjB,CAAnC;GATJ;CADF;;;AAeA,IAAMkW,YAAY,SAAZA,SAAY,CAAC5Y,MAAD,EAASwQ,QAAT,EAAmB/O,CAAnB,EAAsB2P,GAAtB,EAA8B;MAC1CyD,SAAJ;MAEG7U,OAAOwT,eAAP,KAA2B,IAA3B,IAAmCxT,OAAO4X,gBAAP,GAA0B,CAA9D,IACA5X,OAAO8X,UAAP,GAAoB,CAFtB,EAGE;gBACY9X,MAAZ,EAAoBwQ,QAApB,EAA8B/O,CAA9B,EAAiC2P,GAAjC;GAJF,MAKO;eACMpR,MAAX,EAAmBwQ,QAAnB,EAA6B/O,CAA7B,EAAgC2P,GAAhC;;MAEE0D,MAAJ;CAVF;;ACzDA,IAAM+D,WAAW,SAAXA,QAAW;SAAM,OAAOC,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8B;WAAMA,CAAN;GAApC;CAAjB;;ACIA,IAAMC,cAAc,SAAdA,WAAc,CAAC/Y,MAAD,EAASoR,GAAT,EAAcZ,QAAd;SAA2B,UAAC/O,CAAD,EAAIuE,CAAJ,EAAU;QACnDhG,OAAO2S,YAAP,KAAwB,IAA5B,EAAkC;UAC5BtQ,OAAJ,CAAY+P,WAAZ,GAA0B4G,SAAQhZ,OAAO2S,YAAf,EAA6BlR,CAA7B,EAAgCuE,CAAhC,CAA1B;KADF,MAEO;UACD3D,OAAJ,CAAY+P,WAAZ,GAA0B4G,SAAQhZ,OAAOqS,KAAf,EAAsB5Q,CAAtB,EAAyBuE,CAAzB,CAA1B;;WAEK4S,UAAU5Y,MAAV,EAAkBwQ,QAAlB,EAA4B/O,CAA5B,EAA+B2P,IAAI/O,OAAnC,CAAP;GANkB;CAApB;;AASA,IAAM4W,uBAAuB,SAAvBA,oBAAuB,CAACjZ,MAAD,EAASoR,GAAT,EAAcZ,QAAd,EAAwBjQ,EAAxB,EAA4BiC,UAA5B;SAA2C,YAAM;OACzE3C,KAAH,CAAS,SAAT;;QAEI6W,UAAU1W,MAAV,EAAkBwC,UAAlB,KAAiCxC,OAAOqC,OAAP,KAAmB,KAAxD,EAA+D;aACtDA,OAAP,CAAeV,OAAf,CAAuBoX,YAAY/Y,MAAZ,EAAoBoR,GAApB,EAAyBZ,QAAzB,CAAvB;;GAJyB;CAA7B;;AAQA,IAAM0I,qBAAqB,SAArBA,kBAAqB,CAAClZ,MAAD,EAASwC,UAAT,EAAqB2W,YAArB;SAAsC,YAAM;QACjEzC,UAAU1W,MAAV,EAAkBwC,UAAlB,CAAJ,EAAmC;mBACpBxC,OAAOqC,OAApB;KADF,MAEO;mBACQ,EAAb,EADK;;GAHkB;CAA3B;;AAQA,IAAMH,gBAAgB,SAAhBA,aAAgB,CAAClC,MAAD,EAASO,EAAT,EAAaiD,MAAb;SACpB,YAAW;QACL,CAAC7C,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4CY,GAAG+S,gBAAH;;OAEzCpR,aAAH,CAAiBlC,OAAOuP,IAAxB;WACOxN,IAAP,CAAY,QAAZ,EAAsB,IAAtB;WACO,IAAP;GANkB;CAAtB;;AC3BA,IAAMI,eAAa,SAAbA,UAAa;SACjB,UAASC,SAAT,EAAoB;QACZgX,gBAAgB,EAAtB;SACK,IAAIvS,IAAI,CAAb,EAAgBA,IAAI7G,OAAOQ,OAAP,CAAeb,MAAnC,EAA2CkH,GAA3C,EAAgD;UAC1C7G,OAAOQ,OAAP,CAAeqG,CAAf,EAAkBjI,IAAlB,KAA2BwD,SAA/B,EAA0C;sBAC1BkE,IAAd,CAAmBtG,OAAOQ,OAAP,CAAeqG,CAAf,CAAnB;;;;WAIGrG,OAAP,GAAiB4Y,aAAjB;WACO/W,OAAP,GAAiB,KAAjB;;QAEI9B,GAAGe,CAAH,OAAWJ,SAAf,EAA0B;UAClB+M,QAAQ1N,GACXe,CADW,GAEXC,SAFW,CAED,QAFC,EAGX0M,KAHW,EAAd;WAIK,IAAIjI,IAAI,CAAb,EAAgBA,IAAIiI,MAAMtO,MAA1B,EAAkCqG,GAAlC,EAAuC;YACjCiI,MAAMjI,CAAN,EAASkI,QAAT,KAAsB9L,SAA1B,EAAqC;;iBAE5BV,OAAOuM,MAAMjI,CAAN,CAAP,EAAiBiI,KAAjB,GAAyB,CAAzB,EAA4BiF,UAAnC,EACG3R,SADH,CACa,QADb,EAEG2D,MAFH;iBAGOrE,UAAP,CAAkBuB,SAAlB,EAA6BnB,KAA7B,CAAmCe,IAAnC,CAAwCN,OAAOuM,MAAMjI,CAAN,CAAP,EAAiB,IAAjB,CAAxC;;;;;WAKC,IAAP;GA5Be;CAAnB;;ACFA;AACA,IAAMqT,SAAS,SAATA,MAAS,IAAK;SACX,GAAG3S,QAAH,CACJ3E,IADI,CACC+W,CADD,EAEJQ,KAFI,CAEE,eAFF,EAEmB,CAFnB,EAGJC,WAHI,EAAP;CADF;;ACDA;AACA,IAAM7S,WAAW,SAAXA,QAAW;SAAU;WACzB,2BACA/F,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAD/B,GAEA,eAFA,GAGAgB,OAAOC,IAAP,CAAYZ,OAAOpB,IAAP,CAAY,CAAZ,CAAZ,EAA4Be,MAH5B,GAIA,YAJA,GAKAK,OAAOpB,IAAP,CAAYe,MALZ,GAMA,OAPyB;GAAV;CAAjB;;ACDA;AACA,IAAM6Z,gBAAgB,SAAhBA,aAAgB,MAAO;MACvBC,MAAM,EAAV;OACK,IAAIzT,IAAI,CAAb,EAAgBA,IAAI0T,IAAI/Z,MAAJ,GAAa,CAAjC,EAAoCqG,GAApC,EAAyC;QACnCM,IAAJ,CAAS,CAACoT,IAAI1T,CAAJ,CAAD,EAAS0T,IAAI1T,IAAI,CAAR,CAAT,CAAT;;SAEKyT,GAAP;CALF;;ACIA,IAAME,gBAAgB,SAAhBA,aAAgB,CAAC3Z,MAAD,EAASoR,GAAT,EAAcZ,QAAd;SAA2B,UAAC/O,CAAD,EAAIuE,CAAJ,EAAU;QACrD4M,SAAJ,CAAcR,WAAd,GAA4B4G,SAAQhZ,OAAOqS,KAAf,EAAsB5Q,CAAtB,EAAyBuE,CAAzB,CAA5B;WACO4S,UAAU5Y,MAAV,EAAkBwQ,QAAlB,EAA4B/O,CAA5B,EAA+B2P,IAAIwB,SAAnC,CAAP;GAFoB;CAAtB;;;AAMA,IAAMA,YAAY,SAAZA,SAAY,CAAC5S,MAAD,EAASO,EAAT,EAAakM,MAAb,EAAqBjJ,MAArB,EAA6B4N,GAA7B,EAAkCZ,QAAlC;SAChB,YAAsB;QAAb5R,IAAa,uEAAN,IAAM;;QAChBA,SAAS,IAAb,EAAmB;aACVoB,OAAOmW,WAAd;;;WAGKA,WAAP,GAAqBvX,IAArB;OACGiB,KAAH,CAAS,WAAT;cACU,CAAC4M,OAAOC,UAAR,EAAoBD,OAAOpK,OAA3B,CAAV,EAA+CuX,OAA/C,CAAuD,OAAvD,EAAgE,IAAhE;SACKjY,OAAL,CAAagY,cAAc3Z,MAAd,EAAsBoR,GAAtB,EAA2BZ,QAA3B,CAAb;WACOzO,IAAP,CAAY,WAAZ,EAAyB,IAAzB,EAA+BnD,IAA/B;WACO,IAAP;GAXc;CAAlB;;ACTA;AACA,IAAMwX,cAAc,SAAdA,WAAc,CAACpW,MAAD,EAASO,EAAT,EAAakM,MAAb;SAClB,YAAW;WACF0J,WAAP,GAAqB,EAArB;OACGtW,KAAH,CAAS,WAAT;cACU,CAAC4M,OAAOC,UAAR,EAAoBD,OAAOpK,OAA3B,CAAV,EAA+CuX,OAA/C,CAAuD,OAAvD,EAAgE,KAAhE;WACO,IAAP;GALgB;CAApB;;ACHA,IAAMvF,aAAa,SAAbA,UAAa;SACjB,YAAW;OACNC,EAAH,CAAMpP,MAAN;;WAEO3E,GAAG+T,EAAV;WACO,IAAP;GALe;CAAnB;;ACAA;;;;;;;;;;;AAWA,IAAMzV,SAAS,SAATA,MAAS,CAACmB,MAAD,EAASO,EAAT,EAAaiD,MAAb;SACb,YAAW;;QAEL,CAAC7C,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4C;SACvC2T,gBAAH;;OAECnC,SAAH;;OAEGtS,MAAH,CAAUmB,OAAOuP,IAAjB;;WAEOxN,IAAP,CAAY,QAAZ,EAAsB,IAAtB;WACO,IAAP;GAXW;CAAf;;ACRA,IAAM8X,iBAAiB,SAAjBA,cAAiB,CAAC7Z,MAAD,EAASoR,GAAT,EAAcZ,QAAd;SAA2B,UAAC/O,CAAD,EAAIuE,CAAJ,EAAU;QACtD0G,UAAJ,CAAe0F,WAAf,GAA6B4G,SAAQhZ,OAAOqS,KAAf,EAAsB5Q,CAAtB,EAAyBuE,CAAzB,CAA7B;WACO4S,UAAU5Y,MAAV,EAAkBwQ,QAAlB,EAA4B/O,CAA5B,EAA+B2P,IAAI1E,UAAnC,CAAP;GAFqB;CAAvB;;AAKA,IAAMoN,gBAAgB,SAAhBA,aAAgB,CAAC9Z,MAAD,EAASO,EAAT,EAAa6Q,GAAb,EAAkBZ,QAAlB;SAA+B,YAAM;OACtD3Q,KAAH,CAAS,YAAT;OACGA,KAAH,CAAS,WAAT;;OAEGqC,aAAH,CAAiB6X,OAAjB;;WAEOnb,IAAP,CAAY+C,OAAZ,CAAoBkY,eAAe7Z,MAAf,EAAuBoR,GAAvB,EAA4BZ,QAA5B,CAApB;GANoB;CAAtB;;AASA,IAAMwJ,qBAAqB,SAArBA,kBAAqB,CAACha,MAAD,EAASO,EAAT,EAAa0Z,eAAb;SAAiC,YAAM;OAC7D/X,aAAH,CAAiBgY,KAAjB;oBACgBla,OAAOpB,IAAvB;GAFyB;CAA3B;;ACfA;AACA,IAAMub,sBAAsB,SAAtBA,mBAAsB;SAC1BC,WAAWtB,CAAX,KAAiBA,CAAjB,IAAsBA,MAAM,IAA5B,GAAmC,QAAnC,GAA8CO,OAAOP,CAAP,CADpB;CAA5B;;ACDA;AACA,IAAMhF,uBAAuB,SAAvBA,oBAAuB;SAC3BnT,OAAOC,IAAP,CAAYhC,KAAK,CAAL,CAAZ,EAAqBkC,MAArB,CAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;QAClCiM,MAAMnE,MAAMuR,OAAOrZ,GAAP,CAAN,IAAqBA,GAArB,GAA2BsZ,SAAStZ,GAAT,CAAvC;QACIiM,GAAJ,IAAWkN,oBAAoBvb,KAAK,CAAL,EAAQoC,GAAR,CAApB,CAAX;;WAEOD,GAAP;GAJF,EAKG,EALH,CAD2B;CAA7B;;ACDA,IAAMwJ,0BAA0B,SAA1BA,uBAA0B;SAAU;WACxC5J,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BiR,IAA/B,CAAoC,UAAChK,CAAD,EAAIC,CAAJ;aAClCwS,UAAUva,OAAOa,UAAP,CAAkBiH,CAAlB,EAAqBsM,KAA/B,EAAsCpU,OAAOa,UAAP,CAAkBkH,CAAlB,EAAqBqM,KAA3D,CADkC;KAApC,CADwC;GAAV;CAAhC;;ACFA,IAAMoG,cAAc,SAAdA,WAAc;SAClB,YAAW;UACHA,WAAN,GAAoB,IAApB;WACO,IAAP;GAHgB;CAApB;;ACAA,IAAMC,UAAU,SAAVA,OAAU,CAAChK,KAAD,EAAQlQ,EAAR;SACd,YAAW;UACHka,OAAN,GAAgB,IAAhB;OACGzD,cAAH,CAAkB,GAAlB;OACGnY,MAAH;WACO,IAAP;GALY;CAAhB;;ACEA;;;;;;;;AAQA,IAAM6b,OAAO,SAAPA,IAAO,CAAC1a,MAAD,EAASyM,MAAT,EAAiB2E,GAAjB,EAAyB;;;;;;;MAO9B7Q,KAAK,SAALA,EAAK,CAASkG,SAAT,EAAoB;gBACjBlG,GAAGkG,SAAH,GAAe/E,OAAO+E,SAAP,CAA3B;;WAEOxG,KAAP,GAAewG,UAAU9B,IAAV,GAAiBgI,WAAhC;WACOxC,MAAP,GAAgB1D,UAAU9B,IAAV,GAAiBiI,YAAjC;;KAEC,OAAD,EAAU,YAAV,EAAwB,SAAxB,EAAmC,WAAnC,EAAgDjL,OAAhD,CAAwD,iBAAS;aACxDmV,KAAP,IAAgBrQ,UACb3B,MADa,CACN,QADM,EAEbC,IAFa,CAER,OAFQ,EAEC+R,KAFD,EAGbnS,IAHa,EAAhB;UAIImS,KAAJ,IAAarK,OAAOqK,KAAP,EAAchK,UAAd,CAAyB,IAAzB,CAAb;KALF;;;OASG5D,GAAH,GAASzC,UACN3B,MADM,CACC,KADD,EAENC,IAFM,CAED,OAFC,EAEQ/E,OAAOC,KAFf,EAGN8E,IAHM,CAGD,QAHC,EAGS/E,OAAOmK,MAHhB,EAINnF,KAJM,CAIA,MAJA,EAIQ,iBAJR,EAKNA,KALM,CAKA,UALA,EAKY,UALZ,EAONF,MAPM,CAOC,OAPD,EAQNC,IARM,CASL,WATK,EAUL,eAAe/E,OAAOE,MAAP,CAAcE,IAA7B,GAAoC,GAApC,GAA0CJ,OAAOE,MAAP,CAAc+J,GAAxD,GAA8D,GAVzD,CAAT;;WAaO1J,EAAP;GA5BF;;;SAgCOA,EAAP;CAvCF;;ACVA,IAAMqP,OAAO,SAAPA,IAAO;SACX,UAASnO,CAAT,EAAY;;WAEHZ,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BuM,MAA5B,CACErO,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BuM,MAA5B,GAAqCpM,OAArC,EADF,EAFU;;WAMH,IAAP;GAPS;CAAb;;ACAA,IAAMqR,mBAAmB,SAAnBA,gBAAmB;SACvB,YAAW;OACNzS,UAAH,CAAcN,GAAGqT,sBAAH,EAAd;WACO,IAAP;GAHqB;CAAzB;;ACAA,IAAM3D,QAAQ,SAARA,KAAQ,CAACjQ,MAAD,EAASO,EAAT;SACZ,UAASkB,CAAT,EAAY4M,MAAZ,EAAoB;WACXxN,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4BuM,MAA5B,CAAmCA,MAAnC;OACGxP,MAAH,CAAUkb,OAAV;OACGxJ,UAAH;;WAEO,IAAP;GANU;CAAd;;;;ACAA,IAAMoK,gBAAgB;QACd,EADc;eAEP,EAFO;cAGR,EAHQ;0BAII,CAJJ;WAKX,EALW;WAMX,KANW;gBAON,IAPM;kBAQJ,GARI;QASd,SATc;QAUd,EAVc;SAWb,GAXa;UAYZ,GAZY;UAaZ,EAAE1Q,KAAK,EAAP,EAAW9J,OAAO,EAAlB,EAAsBiK,QAAQ,EAA9B,EAAkChK,MAAM,EAAxC,EAbY;sBAcA,WAdA;6BAeO,EAAE6J,KAAK,CAAP,EAAU9J,OAAO,CAAjB,EAAoBiK,QAAQ,CAA5B,EAA+BhK,MAAM,CAArC,EAfP;SAgBb,MAhBa;aAiBT,aAjBS;SAkBb,GAlBa;oBAmBF,GAnBE;mBAoBH,IApBG;cAqBR,GArBQ;qBAsBD,KAtBC;YAuBV,EAvBU;YAwBV,EAxBU;iBAyBL,IAzBK;gBA0BN;CA1BhB;;;;ACOA,IAAMwa,YAAY,SAAZA,SAAY,aAAc;MACxB5a,SAASW,OAAO2V,MAAP,CAAc,EAAd,EAAkBqE,aAAlB,EAAiCE,UAAjC,CAAf;;MAEIA,cAAcA,WAAWC,eAA7B,EAA8C;YACpCC,IAAR,CACE,oFADF;YAGQF,WAAWC,eAAnB,EAAoCnZ,OAApC,CAA4C,aAAK;UAC3C3B,OAAOa,UAAP,CAAkBY,EAAEwL,GAApB,CAAJ,EAA8B;eACrBpM,UAAP,CAAkBY,EAAEwL,GAApB,EAAyByC,KAAzB,GAAiC1P,OAAOa,UAAP,CAAkBY,EAAEwL,GAApB,EAAyByC,KAAzB,GAC7B1P,OAAOa,UAAP,CAAkBY,EAAEwL,GAApB,EAAyByC,KADI,GAE7BjO,EAAEhC,KAFN;OADF,MAIO;eACEoB,UAAP,CAAkBY,EAAEwL,GAApB,IAA2B;iBAClBxL,EAAEhC;SADX;;KANJ;;;MAaIub,aAAa,CACjB,QADiB,EAEjB,QAFiB,EAGjB,WAHiB,EAIjB,OAJiB,EAKjB,UALiB,EAMjB,YANiB,EAOjB,aAPiB,EAQjBzb,MARiB,CAQVqB,KAAKZ,MAAL,CARU,CAAnB;;MAUMwD,SAASyX,SAASC,KAAT,CAAehU,OAAf,EAAqB8T,UAArB,CAAf;MACEvK,QAAQ;eACK,KADL;iBAEO,KAFP;UAGA,KAHA;iBAIO,KAJP;WAKC;GANX;MAQEnG,SAASkH,YARX;MASEiE,WAAW,EATb;MAUE7R,OAAOqR,WAAWjB,KAAX,CAAiB,CAAjB,CAVT;MAWE5C,MAAM,EAXR;MAYE3E,SAAS,EAZX;;MAcMxL,QAAQ;WACL;YACC;iBACK,iBAASV,EAAT,EAAa,EADlB;mBAEO,mBAASA,EAAT,EAAa,EAFpB;kBAGM,oBAAW;iBACZ,EAAP;SAJE;oBAMQ,sBAAW;iBACd,EAAP;;;KATM;UAaN,MAbM;eAcD,KAdC;iBAeC,uBAAW;aACf,KAAK6E,KAAL,CAAW,KAAKmK,IAAhB,CAAP;;GAhBJ;;SAoBO;kBAAA;kBAAA;0BAAA;gBAAA;kBAAA;sBAAA;cAAA;YAAA;kBAAA;;GAAP;CAhEF;;ACPA,IAAM4L,0BAA0B,SAA1BA,uBAA0B,CAACnb,MAAD,EAASyB,CAAT,EAAe;MACvC+V,mBAAmB,IAAI4D,GAAJ,EAAzB;MACMC,gBAAgB,IAAID,GAAJ,EAAtB;;SAEOxc,IAAP,CAAY+C,OAAZ,CAAoB,UAAS+R,GAAT,EAAc;QAC5B4H,SAAStb,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4B4R,IAAIjS,CAAJ,CAA5B,CAAb;QACI,CAAC4Z,cAAcE,GAAd,CAAkBD,MAAlB,CAAL,EAAgC;oBAChBE,GAAd,CAAkBF,MAAlB,EAA0B,CAA1B;;QAEEG,QAAQJ,cAAc5D,GAAd,CAAkB6D,MAAlB,CAAZ;kBACcE,GAAd,CAAkBF,MAAlB,EAA0BG,QAAQ,CAAlC;GANF;;SASO7c,IAAP,CAAY+C,OAAZ,CAAoB,UAAS+R,GAAT,EAAc;WACzB9S,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BzB,GAA/B,CAAmC,aAAK;UAClCkc,SAAStb,OAAOa,UAAP,CAAkBY,CAAlB,EAAqBK,MAArB,CAA4B4R,IAAIjS,CAAJ,CAA5B,CAAb;UACI,CAAC+V,iBAAiB+D,GAAjB,CAAqBD,MAArB,CAAL,EAAmC;YAC3BI,OAAO,IAAIN,GAAJ,EAAb;yBACiBI,GAAjB,CAAqBF,MAArB,EAA6BI,IAA7B;;UAEE,CAAClE,iBAAiBC,GAAjB,CAAqB6D,MAArB,EAA6BC,GAA7B,CAAiC7Y,CAAjC,CAAL,EAA0C;yBACvB+U,GAAjB,CAAqB6D,MAArB,EAA6BE,GAA7B,CAAiC9Y,CAAjC,EAAoC,CAApC;;UAEEjD,QAAQ+X,iBAAiBC,GAAjB,CAAqB6D,MAArB,EAA6B7D,GAA7B,CAAiC/U,CAAjC,CAAZ;eACS1C,OAAOa,UAAP,CAAkB6B,CAAlB,EAAqBZ,MAArB,CAA4B4R,IAAIhR,CAAJ,CAA5B,IAAsC2Y,cAAc5D,GAAd,CAAkB6D,MAAlB,CAA/C;uBACiB7D,GAAjB,CAAqB6D,MAArB,EAA6BE,GAA7B,CAAiC9Y,CAAjC,EAAoCjD,KAApC;KAXF;GADF;;SAgBO+X,gBAAP;CA7BF;;;;ACKA,IAAMmE,UAAU,SAAVA,OAAU,CAACjC,GAAD,EAAMkC,KAAN,EAAgB;QACxBja,OAAN,CAAc,cAAM;WACX+X,IAAImC,EAAJ,CAAP;GADF;SAGOnC,GAAP;CAJF;;AAOA,IAAMoC,cAAc,SAAdA,WAAc,CAClB9b,MADkB,EAElBoR,GAFkB,EAGlB7Q,EAHkB,EAIlB+J,MAJkB,EAKlBmG,KALkB,EAMlB0I,YANkB,EAOlBc,eAPkB;SASlBgB,SACGC,KADH,CACShU,OADT,EACevG,OAAOC,IAAP,CAAYZ,MAAZ,CADf,EAEGwE,EAFH,CAEM,WAFN,EAEmB,aAAK;QAChBkI,UAAJ,CAAe6F,wBAAf,GAA0C9Q,EAAEhC,KAA5C;QACI4C,OAAJ,CAAYkQ,wBAAZ,GAAuC9Q,EAAEhC,KAAzC;GAJJ,EAMG+E,EANH,CAMM,OANN,EAMe,aAAK;QACZkI,UAAJ,CAAe+F,WAAf,GAA6BhR,EAAEhC,KAA/B;QACI4C,OAAJ,CAAYoQ,WAAZ,GAA0BhR,EAAEhC,KAA5B;GARJ,EAUG+E,EAVH,CAUM,cAVN,EAUsB,aAAK;QACnBnC,OAAJ,CAAY+P,WAAZ,GAA0B3Q,EAAEhC,KAA5B;GAXJ,EAaG+E,EAbH,CAaM,OAbN,EAae;WAAKjE,GAAGsV,MAAH,EAAL;GAbf,EAcGrR,EAdH,CAcM,QAdN,EAcgB;WAAKjE,GAAGsV,MAAH,EAAL;GAdhB,EAeGrR,EAfH,CAeM,QAfN,EAegB;WAAKjE,GAAGsV,MAAH,EAAL;GAfhB,EAgBGrR,EAhBH,CAgBM,MAhBN,EAgBc,aAAK;iBACFhF,IAAb,CAAkBiC,EAAEhC,KAApB;oBACgBD,IAAhB,CAAqBiC,EAAEhC,KAAvB;GAlBJ,EAoBG+E,EApBH,CAoBM,YApBN,EAoBoB,aAAK;WACd3D,UAAP,GAAoBN,GAAGqT,sBAAH,CAA0BjT,OAAOC,IAAP,CAAYa,EAAEhC,KAAd,CAA1B,CAApB;WACO4O,MAAP,CAAc9N,GAAGgK,uBAAH,EAAd;OACGqL,cAAH;QACInF,MAAM+J,WAAV,EAAuB;SAClB3b,MAAH,GAAY0R,UAAZ;;GAzBN,EA4BG/L,EA5BH,CA4BM,iBA5BN,EA4ByB,aAAK;QACtB,CAAC7D,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAApC,EAA4CY,GAAG+S,gBAAH;OACzCnC,SAAH;QACI,OAAO1P,EAAEhC,KAAT,KAAmB,QAAvB,EAAiC;UAC3BgC,EAAEhC,KAAF,GAAUkB,OAAOC,IAAP,CAAYZ,OAAOa,UAAnB,EAA+BlB,MAA7C,EAAqD;eAC5C6T,eAAP,GAAyBxT,OAAOa,UAAP,CAAkBY,EAAEhC,KAApB,CAAzB;OADF,MAEO,IAAIgC,EAAEhC,KAAF,GAAUO,OAAO+b,QAAP,CAAgBpc,MAA9B,EAAsC;eACpC6T,eAAP,GAAyBxT,OAAO+b,QAAP,CAAgBta,EAAEhC,KAAlB,CAAzB;;KAJJ,MAMO;aACE+T,eAAP,GAAyB/R,EAAEhC,KAA3B;;;WAGK+X,gBAAP,GAA0B2D,wBACxBnb,MADwB,EAExBA,OAAOwT,eAFiB,CAA1B;QAII/C,MAAM+J,WAAV,EAAuB;SAClB3b,MAAH;;GA9CN,EAiDG2F,EAjDH,CAiDM,UAjDN,EAiDkB,aAAK;OAChB3D,UAAH,CAAcN,GAAGqT,sBAAH,EAAd;OACG/S,UAAH,CAAc8a,QAAQ3b,OAAOa,UAAf,EAA2BY,EAAEhC,KAA7B,CAAd;GAnDJ,EAqDG+E,EArDH,CAqDM,UArDN,EAqDkB,aAAK;QACf/C,EAAEhC,KAAF,IAAWgC,EAAEhC,KAAF,CAAQE,MAAvB,EAA+B;QAC3BF,KAAF,CAAQkC,OAAR,CAAgB,UAASiC,IAAT,EAAe;AAC7B+L,AACD,OAFD;SAGGY,UAAH,CAAc,CAAd;;GA1DN,CATkB;CAApB;;ACZA,IAAMyL,SAAS,SAATA,MAAS,CAACC,GAAD,EAAM3b,KAAN,EAAakD,MAAb,EAAqB0Y,YAArB,EAAsC;SAC5Ctb,IAAP,CAAYN,KAAZ,EAAmBqB,OAAnB,CAA2B,UAASsL,GAAT,EAAc;QACnCA,GAAJ,IAAW,UAASnF,CAAT,EAAY;UACjB,CAACpI,UAAUC,MAAf,EAAuB;eACdW,MAAM2M,GAAN,CAAP;;UAGAA,QAAQ,YAAR,IACAtM,OAAO0D,SAAP,CAAiBqC,QAAjB,CAA0B3E,IAA1B,CAA+B+F,CAA/B,MAAsC,gBAFxC,EAGE;gBACQiT,IAAR,CAAa,wDAAb;YACIkB,IAAIrI,sBAAJ,CAA2B9L,CAA3B,CAAJ;;UAEEqU,MAAM7b,MAAM2M,GAAN,CAAV;YACMA,GAAN,IAAanF,CAAb;mBACa/F,IAAb,CAAkBkL,GAAlB,EAAuBgP,GAAvB,EAA4B,EAAExc,OAAOqI,CAAT,EAAYsU,UAAUD,GAAtB,EAA5B;aACOpa,IAAP,CAAYkL,GAAZ,EAAiBgP,GAAjB,EAAsB,EAAExc,OAAOqI,CAAT,EAAYsU,UAAUD,GAAtB,EAAtB;aACOF,GAAP;KAfF;GADF;CADF;;ACAA;AACA;AAGA,IAAMI,YAAY,SAAZA,SAAY,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB;SAChB,YAAW;QACH/c,QAAQ+c,OAAOtB,KAAP,CAAaqB,MAAb,EAAqB7c,SAArB,CAAd;WACOD,UAAU8c,MAAV,GAAmBD,MAAnB,GAA4B7c,KAAnC;GAHc;CAAlB;;AAMA,IAAMgd,UAAU,SAAVA,OAAU,CAACH,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAA4B;SACnCA,MAAP,IAAiBH,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BA,OAAOC,MAAP,CAA1B,CAAjB;SACOF,MAAP;CAFF;;AAKA,IAAMI,aAAa,SAAbA,UAAa,CACjBC,EADiB,EAEjBvL,GAFiB,EAGjB7Q,EAHiB,EAIjB+J,MAJiB,EAKjBmG,KALiB,EAMjB0I,YANiB,EAOjBc,eAPiB,EAQjBzW,MARiB,EASjBI,IATiB,EAUd;MACGsY,eAAeJ,YACnBa,EADmB,EAEnBvL,GAFmB,EAGnB7Q,EAHmB,EAInB+J,MAJmB,EAKnBmG,KALmB,EAMnB0I,YANmB,EAOnBc,eAPmB,CAArB;;;SAWO1Z,EAAP,EAAWoc,EAAX,EAAenZ,MAAf,EAAuB0Y,YAAvB;;;;UAIQ3b,EAAR,EAAYiD,MAAZ,EAAoB,IAApB;;UAGEjD,EADF,EAEEqD,IAFF,EAGE,OAHF,EAIE,QAJF,EAKE,YALF,EAME,eANF,EAOE,UAPF,EAQE,aARF,EASE,YATF;CA5BF;;ACfA;AACA;AAgEA,IAAMgZ,YAAY,SAAZA,SAAY,aAAc;MACxBtc,QAAQsa,UAAUC,UAAV,CAAd;MAEE7a,MAH4B,GAY1BM,KAZ0B,CAG5BN,MAH4B;MAI5BwD,MAJ4B,GAY1BlD,KAZ0B,CAI5BkD,MAJ4B;MAK5BiN,KAL4B,GAY1BnQ,KAZ0B,CAK5BmQ,KAL4B;MAM5BnG,MAN4B,GAY1BhK,KAZ0B,CAM5BgK,MAN4B;MAO5BmL,QAP4B,GAY1BnV,KAZ0B,CAO5BmV,QAP4B;MAQ5B7R,IAR4B,GAY1BtD,KAZ0B,CAQ5BsD,IAR4B;MAS5BwN,GAT4B,GAY1B9Q,KAZ0B,CAS5B8Q,GAT4B;MAU5B3E,MAV4B,GAY1BnM,KAZ0B,CAU5BmM,MAV4B;MAW5BxL,KAX4B,GAY1BX,KAZ0B,CAW5BW,KAX4B;;;MAcxBV,KAAKma,KAAK1a,MAAL,EAAayM,MAAb,EAAqB2E,GAArB,CAAX;;MAEMZ,WAAW,SAAXA,QAAW,IAAK;QAChBlG,OAAOvG,KAAP,GAAepE,MAAf,KAA0B,CAA9B,EAAiC;aACxBoE,KAAP,CAAa,CAAC,CAAD,EAAIhE,EAAEC,MAAF,CAAJ,CAAb,EAA6B,CAA7B;;WAEKyV,SAAShU,CAAT,KAAe,IAAf,GAAsB6I,OAAO7I,CAAP,CAAtB,GAAkCgU,SAAShU,CAAT,CAAzC;GAJF;;MAOM0X,eAAe3a,YAAYua,YAAY/Y,MAAZ,EAAoBoR,GAApB,EAAyBZ,QAAzB,CAAZ,EAClBhR,IADkB,CACb,EADa,EAElBK,KAFkB,CAEZ;WAAMU,GAAGV,KAAH,CAAS,SAAT,CAAN;GAFY,CAArB;;MAIMoa,kBAAkBzb,YAAYqb,eAAe7Z,MAAf,EAAuBoR,GAAvB,EAA4BZ,QAA5B,CAAZ,EACrBhR,IADqB,CAChB,EADgB,EAErBK,KAFqB,CAEf,YAAW;OACbA,KAAH,CAAS,YAAT;OACGA,KAAH,CAAS,WAAT;GAJoB,CAAxB;;aAQEG,MADF,EAEEoR,GAFF,EAGE7Q,EAHF,EAIE+J,MAJF,EAKEmG,KALF,EAME0I,YANF,EAOEc,eAPF,EAQEzW,MARF,EASEI,IATF;;;KAaGtD,KAAH,GAAWN,MAAX;KACGyQ,KAAH,GAAWA,KAAX;;KAEGU,SAAH,GAAeA,UAAUnR,MAAV,EAAkBO,EAAlB,EAAsB+J,MAAtB,EAA8B8G,GAA9B,CAAf;KACGnB,KAAH,GAAWA,MAAMjQ,MAAN,EAAcO,EAAd,CAAX;KACGqP,IAAH,GAAUA,KAAK5P,MAAL,CAAV;KACGmT,WAAH,GAAiBA,YAAYnT,MAAZ,EAAoBO,EAApB,CAAjB;KACG+S,gBAAH,GAAsBA,iBAAiB/S,EAAjB,CAAtB;;KAEGuT,oBAAH,GAA0BA,oBAA1B;KACGF,sBAAH,GAA4BA,uBAAuB5T,MAAvB,EAA+BO,EAA/B,CAA5B;KACGgK,uBAAH,GAA6BA,wBAAwBvK,MAAxB,CAA7B;;;KAGGnB,MAAH,GAAYA,OAAOmB,MAAP,EAAeO,EAAf,EAAmBiD,MAAnB,CAAZ;KACGtB,aAAH,GAAmBA,cAAclC,MAAd,EAAsBO,EAAtB,EAA0BiD,MAA1B,CAAnB;KACG3E,MAAH,CAAUkb,OAAV,GAAoBD,cAAc9Z,MAAd,EAAsBO,EAAtB,EAA0B6Q,GAA1B,EAA+BZ,QAA/B,CAApB;KACG3R,MAAH,CAAUqb,KAAV,GAAkBF,mBAAmBha,MAAnB,EAA2BO,EAA3B,EAA+B0Z,eAA/B,CAAlB;KACG/X,aAAH,CAAiB6X,OAAjB,GAA2Bd,qBACzBjZ,MADyB,EAEzBoR,GAFyB,EAGzBZ,QAHyB,EAIzBjQ,EAJyB,EAKzBU,KALyB,CAA3B;KAOGiB,aAAH,CAAiBgY,KAAjB,GAAyBhB,mBAAmBlZ,MAAnB,EAA2BiB,KAA3B,EAAkCkY,YAAlC,CAAzB;;KAEG0D,sBAAH,GAA4BpJ,qBAAqBzT,OAAOa,UAA5B,EAAwC2P,QAAxC,CAA5B;KACGiK,OAAH,GAAaA,QAAQhK,KAAR,EAAelQ,EAAf,CAAb;KACGiU,QAAH,GAAcA,SAASxU,MAAT,EAAiBO,EAAjB,EAAqBiQ,QAArB,CAAd;KACG3Q,KAAH,GAAWA,MAAMG,MAAN,EAAcO,EAAd,EAAkB6Q,GAAlB,EAAuBnQ,KAAvB,CAAX;KACG4D,UAAH,GAAgBA,WAAW7E,MAAX,EAAmBO,EAAnB,EAAuB+J,MAAvB,EAA+BmG,KAA/B,EAAsC7M,IAAtC,CAAhB;KACGyQ,UAAH,GAAgBA,WAAW9T,EAAX,CAAhB;KACGgQ,UAAH,GAAgBA,WAAWvQ,MAAX,EAAmBO,EAAnB,EAAuBiQ,QAAvB,EAAiC5M,IAAjC,EAAuC6M,KAAvC,CAAhB;KACGG,eAAH,GAAqBA,eAArB;KACGE,SAAH,GAAeA,UAAU9Q,MAAV,EAAkBO,EAAlB,EAAsBkQ,KAAtB,CAAf;KACGtO,UAAH,GAAgBA,aAAWnC,MAAX,CAAhB;KACGuC,QAAH,GAAcA,WAASvC,MAAT,EAAiBO,EAAjB,CAAd;KACGwQ,WAAH,GAAiBA,YAAY/Q,MAAZ,EAAoBO,EAApB,EAAwB+J,MAAxB,EAAgCkG,QAAhC,EAA0CiF,QAA1C,EAAoDhF,KAApD,CAAjB;;;;;KAKGqF,OAAH,GAAaA,QAAQ9V,MAAR,EAAgBO,EAAhB,EAAoB+J,MAApB,CAAb;KACG0L,uBAAH,GAA6BA,wBAAwBhW,MAAxB,CAA7B;KACG4V,cAAH,GAAoBA,eAAe5V,MAAf,EAAuBwQ,QAAvB,CAApB;;;KAGGsM,cAAH,GAAoBtD,aAApB;KACGgB,WAAH,GAAiBA,YAAY/J,KAAZ,CAAjB;;;KAGGnG,MAAH,GAAYA,MAAZ;KACG8G,GAAH,GAASA,GAAT;KACG3E,MAAH,GAAYA,MAAZ;KACGnL,CAAH,GAAO;WAAMf,GAAG+T,EAAT;GAAP;;;;KAIGuB,MAAH,GAAYA,OAAO7V,MAAP,EAAeO,EAAf,EAAmBkQ,KAAnB,EAA0BjN,MAA1B,CAAZ;;;KAGGoP,SAAH,GAAeA,UAAU5S,MAAV,EAAkBO,EAAlB,EAAsBkM,MAAtB,EAA8BjJ,MAA9B,EAAsC4N,GAAtC,EAA2CZ,QAA3C,CAAf;;KAEG4F,WAAH,GAAiBA,YAAYpW,MAAZ,EAAoBO,EAApB,EAAwBkM,MAAxB,CAAjB;;;;KAIGN,YAAH,GAAkBA,YAAlB;;;;KAIGC,cAAH,GAAoBA,eAAe7L,EAAf,CAApB;KACGiP,UAAH,GAAgB;WAAM7O,OAAOkI,mBAAP,CAA2B5H,MAAMmE,KAAjC,CAAN;GAAhB;KACGkK,SAAH,GAAeA,UAAUrO,KAAV,EAAiBjB,MAAjB,EAAyBO,EAAzB,CAAf;;;gBAGcU,KAAd,EAAqBjB,MAArB,EAA6BO,EAA7B,EAAiCiD,MAAjC;kBACgBvC,KAAhB,EAAuBjB,MAAvB,EAA+BO,EAA/B,EAAmCiD,MAAnC,EAA2C8G,MAA3C;sBACoBrJ,KAApB,EAA2BjB,MAA3B,EAAmCO,EAAnC,EAAuCiD,MAAvC,EAA+C8G,MAA/C;qBACmBrJ,KAAnB,EAA0BjB,MAA1B,EAAkCO,EAAlC,EAAsCiD,MAAtC;;KAEGuZ,OAAH,GAAaA,OAAb;;KAEGrW,QAAH,GAAcA,SAAS1G,MAAT,CAAd;KACGqZ,MAAH,GAAYA,MAAZ;;KAEGc,mBAAH,GAAyBA,mBAAzB;;SAEO5Z,EAAP;CAxIF;;;;"}